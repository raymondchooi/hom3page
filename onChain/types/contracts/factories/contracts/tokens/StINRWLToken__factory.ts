/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  StINRWLToken,
  StINRWLTokenInterface,
} from "../../../contracts/tokens/StINRWLToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526008805460ff60a01b1916600160a01b1790553480156200002457600080fd5b50336040518060400160405280601c81526020017f486f6d335061676520496e6e657277616c6c2047656e657261746f7200000000815250604051806040016040528060078152602001661cdd12539495d360ca1b81525081600290816200008d9190620001db565b5060036200009c8282620001db565b506000805550506001600160a01b038116620000d257604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000dd81620000e4565b50620002a7565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200016157607f821691505b6020821081036200018257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001d657600081815260208120601f850160051c81016020861015620001b15750805b601f850160051c820191505b81811015620001d257828155600101620001bd565b5050505b505050565b81516001600160401b03811115620001f757620001f762000136565b6200020f816200020884546200014c565b8462000188565b602080601f8311600181146200024757600084156200022e5750858301515b600019600386901b1c1916600185901b178555620001d2565b600085815260208120601f198616915b82811015620002785788860151825594840194600190910190840162000257565b5085821015620002975787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61114780620002b76000396000f3fe60806040526004361061015f5760003560e01c806370a08231116100c0578063b88d4fde11610074578063c87b56dd11610059578063c87b56dd14610360578063e985e9c514610380578063f2fde38b146103c957600080fd5b8063b88d4fde1461032d578063bfe22a011461034057600080fd5b80638da5cb5b116100a55780638da5cb5b146102da57806395d89b41146102f8578063a22cb4651461030d57600080fd5b806370a08231146102a5578063715018a6146102c557600080fd5b806318160ddd1161011757806323b872dd116100fc57806323b872dd1461025f57806342842e0e146102725780636352211e1461028557600080fd5b806318160ddd1461021d57806322f3e2d41461024057600080fd5b8063081812fc11610148578063081812fc146101bb578063095ea7b3146101f35780631249c58b1461020857600080fd5b806301ffc9a71461016457806306fdde0314610199575b600080fd5b34801561017057600080fd5b5061018461017f366004610d9f565b6103e9565b60405190151581526020015b60405180910390f35b3480156101a557600080fd5b506101ae610486565b6040516101909190610e0c565b3480156101c757600080fd5b506101db6101d6366004610e1f565b610518565b6040516001600160a01b039091168152602001610190565b610206610201366004610e54565b610575565b005b34801561021457600080fd5b5061020661063b565b34801561022957600080fd5b50600154600054035b604051908152602001610190565b34801561024c57600080fd5b50600854600160a01b900460ff16610184565b61020661026d366004610e7e565b610645565b610206610280366004610e7e565b610829565b34801561029157600080fd5b506101db6102a0366004610e1f565b610849565b3480156102b157600080fd5b506102326102c0366004610eba565b610854565b3480156102d157600080fd5b506102066108bc565b3480156102e657600080fd5b506008546001600160a01b03166101db565b34801561030457600080fd5b506101ae6108ce565b34801561031957600080fd5b50610206610328366004610ee5565b6108dd565b61020661033b366004610f2e565b610949565b34801561034c57600080fd5b5061020661035b36600461100a565b610993565b34801561036c57600080fd5b506101ae61037b366004610e1f565b6109a7565b34801561038c57600080fd5b5061018461039b366004611025565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b3480156103d557600080fd5b506102066103e4366004610eba565b610a51565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316148061044c57507f80ac58cd000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b8061048057507f5b5e139f000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6060600280546104959061104f565b80601f01602080910402602001604051908101604052809291908181526020018280546104c19061104f565b801561050e5780601f106104e35761010080835404028352916020019161050e565b820191906000526020600020905b8154815290600101906020018083116104f157829003601f168201915b5050505050905090565b600061052382610aaa565b610559576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061058082610849565b9050336001600160a01b038216146105d25761059c813361039b565b6105d2576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082815260066020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b610643610ad1565b565b600061065082610b17565b9050836001600160a01b0316816001600160a01b03161461069d576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b03881690911417610703576106cd863361039b565b610703576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038516610743576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b801561074e57600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b841690036107e0576001840160008181526004602052604081205490036107de5760005481146107de5760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b61084483838360405180602001604052806000815250610949565b505050565b600061048082610b17565b60006001600160a01b038216610896576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6108c4610ad1565b6106436000610b97565b6060600380546104959061104f565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610954848484610645565b6001600160a01b0383163b1561098d5761097084848484610bf6565b61098d576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b61099b610ad1565b6109a481610ce1565b50565b60606109b282610aaa565b6109e8576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006109ff60408051602081019091526000815290565b90508051600003610a1f5760405180602001604052806000815250610a4a565b80610a2984610d45565b604051602001610a3a929190611089565b6040516020818303038152906040525b9392505050565b610a59610ad1565b6001600160a01b038116610aa1576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b6109a481610b97565b6000805482108015610480575050600090815260046020526040902054600160e01b161590565b6008546001600160a01b03163314610643576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610a98565b600081600054811015610b655760008181526004602052604081205490600160e01b82169003610b63575b80600003610a4a575060001901600081815260046020526040902054610b42565b505b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600880546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610c2b9033908990889088906004016110b8565b6020604051808303816000875af1925050508015610c66575060408051601f3d908101601f19168201909252610c63918101906110f4565b60015b610cc4573d808015610c94576040519150601f19603f3d011682016040523d82523d6000602084013e610c99565b606091505b508051600003610cbc576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b600880547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a900480610d5f5750819003601f19909101908152919050565b6001600160e01b0319811681146109a457600080fd5b600060208284031215610db157600080fd5b8135610a4a81610d89565b60005b83811015610dd7578181015183820152602001610dbf565b50506000910152565b60008151808452610df8816020860160208601610dbc565b601f01601f19169290920160200192915050565b602081526000610a4a6020830184610de0565b600060208284031215610e3157600080fd5b5035919050565b80356001600160a01b0381168114610e4f57600080fd5b919050565b60008060408385031215610e6757600080fd5b610e7083610e38565b946020939093013593505050565b600080600060608486031215610e9357600080fd5b610e9c84610e38565b9250610eaa60208501610e38565b9150604084013590509250925092565b600060208284031215610ecc57600080fd5b610a4a82610e38565b80358015158114610e4f57600080fd5b60008060408385031215610ef857600080fd5b610f0183610e38565b9150610f0f60208401610ed5565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f4457600080fd5b610f4d85610e38565b9350610f5b60208601610e38565b925060408501359150606085013567ffffffffffffffff80821115610f7f57600080fd5b818701915087601f830112610f9357600080fd5b813581811115610fa557610fa5610f18565b604051601f8201601f19908116603f01168101908382118183101715610fcd57610fcd610f18565b816040528281528a6020848701011115610fe657600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60006020828403121561101c57600080fd5b610a4a82610ed5565b6000806040838503121561103857600080fd5b61104183610e38565b9150610f0f60208401610e38565b600181811c9082168061106357607f821691505b60208210810361108357634e487b7160e01b600052602260045260246000fd5b50919050565b6000835161109b818460208801610dbc565b8351908301906110af818360208801610dbc565b01949350505050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526110ea6080830184610de0565b9695505050505050565b60006020828403121561110657600080fd5b8151610a4a81610d8956fea2646970667358221220fba4c9a1525a999e6598be25a8e8eab59608b2b365fed3c2ff9bef1acdc5fb5964736f6c63430008140033";

type StINRWLTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StINRWLTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StINRWLToken__factory extends ContractFactory {
  constructor(...args: StINRWLTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StINRWLToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StINRWLToken__factory {
    return super.connect(runner) as StINRWLToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StINRWLTokenInterface {
    return new Interface(_abi) as StINRWLTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StINRWLToken {
    return new Contract(address, _abi, runner) as unknown as StINRWLToken;
  }
}
