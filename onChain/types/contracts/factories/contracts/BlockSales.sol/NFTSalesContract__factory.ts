/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  NFTSalesContract,
  NFTSalesContractInterface,
} from "../../../contracts/BlockSales.sol/NFTSalesContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "NFTAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ghoTokenAddress_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "COST_PER_BLOCK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GHO",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NFT",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "buyBatchNFTs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawAddress_",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040526001805460ff60a01b1916600160a01b17905534801561002357600080fd5b50604051610f6c380380610f6c833981016040819052610042916100fc565b6001600055338061006d57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100768161008e565b506001600160a01b039182166080521660a05261012f565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146100f757600080fd5b919050565b6000806040838503121561010f57600080fd5b610118836100e0565b9150610126602084016100e0565b90509250929050565b60805160a051610dd261019a60003960008181610160015281816101f0015281816102dc0152818161059301528181610648015281816107d201526108b901526000818161010b0152818161038901528181610486015281816106fd01526109a10152610dd26000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80638da5cb5b11610076578063b9673ccd1161005b578063b9673ccd14610182578063bfe22a01146101a0578063f2fde38b146101b357600080fd5b80638da5cb5b1461014a578063b8d008f31461015b57600080fd5b806351ed8288116100a757806351ed8288146100eb578063715018a6146100fe5780637c0b8de21461010657600080fd5b80633cb47cfe146100c357806351cff8d9146100d8575b600080fd5b6100d66100d1366004610bf5565b6101c6565b005b6100d66100e6366004610c7f565b61055a565b6100d66100f9366004610ca3565b6106bc565b6100d6610a14565b61012d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6001546001600160a01b031661012d565b61012d7f000000000000000000000000000000000000000000000000000000000000000081565b61019268056bc75e2d6310000081565b604051908152602001610141565b6100d66101ae366004610cca565b610a28565b6100d66101c1366004610c7f565b610a39565b6101ce610a8d565b60006101e38268056bc75e2d63100000610cfd565b9050806001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561025a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027e9190610d1a565b116102d05760405162461bcd60e51b815260206004820152601160248201527f496e636f7272656374207061796d656e7400000000000000000000000000000060448201526064015b60405180910390fd5b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303816000875af1158015610355573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103799190610d33565b905060005b8381101561054957307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636352211e8787858181106103c8576103c8610d50565b905060200201356040518263ffffffff1660e01b81526004016103ed91815260200190565b602060405180830381865afa15801561040a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042e9190610d66565b6001600160a01b0316146104845760405162461bcd60e51b815260206004820152601360248201527f546f6b656e206e6f7420617661696c61626c650000000000000000000000000060448201526064016102c7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd30338888868181106104c7576104c7610d50565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b15801561051e57600080fd5b505af1158015610532573d6000803e3d6000fd5b50505050808061054190610d83565b91505061037e565b5050506105566001600055565b5050565b610562610ad0565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156105e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106069190610d1a565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038481166004830152602482018390529192507f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015610693573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b79190610d33565b505050565b6106c4610a8d565b6040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810182905230906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa158015610744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107689190610d66565b6001600160a01b0316146107be5760405162461bcd60e51b815260206004820152601360248201527f546f6b656e206e6f7420617661696c61626c650000000000000000000000000060448201526064016102c7565b68056bc75e2d631000006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561083c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108609190610d1a565b116108ad5760405162461bcd60e51b815260206004820152601160248201527f496e636f7272656374207061796d656e7400000000000000000000000000000060448201526064016102c7565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015268056bc75e2d6310000060448201526064016020604051808303816000875af115801561093a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095e9190610d33565b90508015610a06576040517f23b872dd000000000000000000000000000000000000000000000000000000008152306004820152336024820152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401600060405180830381600087803b1580156109ed57600080fd5b505af1158015610a01573d6000803e3d6000fd5b505050505b50610a116001600055565b50565b610a1c610ad0565b610a266000610b16565b565b610a30610ad0565b610a1181610b80565b610a41610ad0565b6001600160a01b038116610a84576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016102c7565b610a1181610b16565b600260005403610ac9576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600055565b6001546001600160a01b03163314610a26576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016102c7565b600180546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b60008060208385031215610c0857600080fd5b823567ffffffffffffffff80821115610c2057600080fd5b818501915085601f830112610c3457600080fd5b813581811115610c4357600080fd5b8660208260051b8501011115610c5857600080fd5b60209290920196919550909350505050565b6001600160a01b0381168114610a1157600080fd5b600060208284031215610c9157600080fd5b8135610c9c81610c6a565b9392505050565b600060208284031215610cb557600080fd5b5035919050565b8015158114610a1157600080fd5b600060208284031215610cdc57600080fd5b8135610c9c81610cbc565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610d1457610d14610ce7565b92915050565b600060208284031215610d2c57600080fd5b5051919050565b600060208284031215610d4557600080fd5b8151610c9c81610cbc565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610d7857600080fd5b8151610c9c81610c6a565b600060018201610d9557610d95610ce7565b506001019056fea2646970667358221220a3b2d37ba33df4783db2baba088673f649836a75270e6db9b919f7bdc4df1e2664736f6c63430008140033";

type NFTSalesContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTSalesContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTSalesContract__factory extends ContractFactory {
  constructor(...args: NFTSalesContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    NFTAddress_: AddressLike,
    ghoTokenAddress_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      NFTAddress_,
      ghoTokenAddress_,
      overrides || {}
    );
  }
  override deploy(
    NFTAddress_: AddressLike,
    ghoTokenAddress_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      NFTAddress_,
      ghoTokenAddress_,
      overrides || {}
    ) as Promise<
      NFTSalesContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NFTSalesContract__factory {
    return super.connect(runner) as NFTSalesContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTSalesContractInterface {
    return new Interface(_abi) as NFTSalesContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NFTSalesContract {
    return new Contract(address, _abi, runner) as unknown as NFTSalesContract;
  }
}
