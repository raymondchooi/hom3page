/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Hom3Vault,
  Hom3VaultInterface,
} from "../../../contracts/utils/Hom3Vault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "ghoToken_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "GHO_TOKEN",
    outputs: [
      {
        internalType: "contract IGhoToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040526000805460ff60a01b1916600160a01b17905534801561002357600080fd5b5060405161044b38038061044b833981016040819052610042916100d3565b338061006857604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61007181610083565b506001600160a01b0316608052610103565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100e557600080fd5b81516001600160a01b03811681146100fc57600080fd5b9392505050565b60805161032e61011d600039600060cd015261032e6000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063b1c660f711610050578063b1c660f7146100c8578063bfe22a01146100ef578063f2fde38b1461010257600080fd5b806322f3e2d414610077578063715018a6146100995780638da5cb5b146100a3575b600080fd5b600054600160a01b900460ff1660405190151581526020015b60405180910390f35b6100a1610115565b005b6000546001600160a01b03165b6040516001600160a01b039091168152602001610090565b6100b07f000000000000000000000000000000000000000000000000000000000000000081565b6100a16100fd3660046102a6565b610129565b6100a16101103660046102cf565b61013d565b61011d610196565b61012760006101dc565b565b610131610196565b61013a81610244565b50565b610145610196565b6001600160a01b03811661018d576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b61013a816101dc565b6000546001600160a01b03163314610127576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610184565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b83151590810291909117825560405190917fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b91a250565b6000602082840312156102b857600080fd5b813580151581146102c857600080fd5b9392505050565b6000602082840312156102e157600080fd5b81356001600160a01b03811681146102c857600080fdfea2646970667358221220b79f492b19904bca9d17413d11440349b0d1cd63ffc58d23601b1ba1ce89d81a64736f6c63430008140033";

type Hom3VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Hom3VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Hom3Vault__factory extends ContractFactory {
  constructor(...args: Hom3VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    ghoToken_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(ghoToken_, overrides || {});
  }
  override deploy(
    ghoToken_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(ghoToken_, overrides || {}) as Promise<
      Hom3Vault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Hom3Vault__factory {
    return super.connect(runner) as Hom3Vault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Hom3VaultInterface {
    return new Interface(_abi) as Hom3VaultInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Hom3Vault {
    return new Contract(address, _abi, runner) as unknown as Hom3Vault;
  }
}
