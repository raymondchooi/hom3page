/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  BlockToken,
  BlockTokenInterface,
} from "../../contracts/BlockToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mintAllBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526008805460ff60a01b1916600160a01b1790553480156200002457600080fd5b50336040518060400160405280600e81526020016d486f6d335061676520426c6f636b60901b81525060405180604001604052806005815260200164415a554b4960d81b81525081600290816200007c9190620001ca565b5060036200008b8282620001ca565b506000805550506001600160a01b038116620000c157604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000cc81620000d3565b5062000296565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200015057607f821691505b6020821081036200017157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001c557600081815260208120601f850160051c81016020861015620001a05750805b601f850160051c820191505b81811015620001c157828155600101620001ac565b5050505b505050565b81516001600160401b03811115620001e657620001e662000125565b620001fe81620001f784546200013b565b8462000177565b602080601f8311600181146200023657600084156200021d5750858301515b600019600386901b1c1916600185901b178555620001c1565b600085815260208120601f198616915b82811015620002675788860151825594840194600190910190840162000246565b5085821015620002865787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6112a180620002a66000396000f3fe6080604052600436106101445760003560e01c8063715018a6116100c0578063b88d4fde11610074578063c87b56dd11610059578063c87b56dd14610331578063e985e9c514610351578063f2fde38b1461039a57600080fd5b8063b88d4fde146102fe578063bfe22a011461031157600080fd5b80638da5cb5b116100a55780638da5cb5b146102ab57806395d89b41146102c9578063a22cb465146102de57600080fd5b8063715018a61461027657806379cfe7661461028b57600080fd5b806318160ddd1161011757806342842e0e116100fc57806342842e0e146102235780636352211e1461023657806370a082311461025657600080fd5b806318160ddd146101ed57806323b872dd1461021057600080fd5b806301ffc9a71461014957806306fdde031461017e578063081812fc146101a0578063095ea7b3146101d8575b600080fd5b34801561015557600080fd5b50610169610164366004610ef9565b6103ba565b60405190151581526020015b60405180910390f35b34801561018a57600080fd5b50610193610457565b6040516101759190610f66565b3480156101ac57600080fd5b506101c06101bb366004610f79565b6104e9565b6040516001600160a01b039091168152602001610175565b6101eb6101e6366004610fae565b610546565b005b3480156101f957600080fd5b50600154600054035b604051908152602001610175565b6101eb61021e366004610fd8565b61060c565b6101eb610231366004610fd8565b6107f0565b34801561024257600080fd5b506101c0610251366004610f79565b610810565b34801561026257600080fd5b50610202610271366004611014565b61081b565b34801561028257600080fd5b506101eb610883565b34801561029757600080fd5b506101eb6102a6366004610f79565b610897565b3480156102b757600080fd5b506008546001600160a01b03166101c0565b3480156102d557600080fd5b506101936108e9565b3480156102ea57600080fd5b506101eb6102f936600461103f565b6108f8565b6101eb61030c366004611088565b610964565b34801561031d57600080fd5b506101eb61032c366004611164565b6109ae565b34801561033d57600080fd5b5061019361034c366004610f79565b6109bf565b34801561035d57600080fd5b5061016961036c36600461117f565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b3480156103a657600080fd5b506101eb6103b5366004611014565b610a69565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316148061041d57507f80ac58cd000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b8061045157507f5b5e139f000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b606060028054610466906111a9565b80601f0160208091040260200160405190810160405280929190818152602001828054610492906111a9565b80156104df5780601f106104b4576101008083540402835291602001916104df565b820191906000526020600020905b8154815290600101906020018083116104c257829003601f168201915b5050505050905090565b60006104f482610ac2565b61052a576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061055182610810565b9050336001600160a01b038216146105a35761056d813361036c565b6105a3576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082815260066020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061061782610ae9565b9050836001600160a01b0316816001600160a01b031614610664576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b038816909114176106ca57610694863361036c565b6106ca576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03851661070a576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b801561071557600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b841690036107a7576001840160008181526004602052604081205490036107a55760005481146107a55760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b61080b83838360405180602001604052806000815250610964565b505050565b600061045182610ae9565b60006001600160a01b03821661085d576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b61088b610b69565b6108956000610baf565b565b600854600160a81b900460ff16156108ae57600080fd5b600880547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16600160a81b1790556108e63382610c0e565b50565b606060038054610466906111a9565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61096f84848461060c565b6001600160a01b0383163b156109a85761098b84848484610d3f565b6109a8576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6109b6610b69565b6108e681610e2a565b60606109ca82610ac2565b610a00576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610a1760408051602081019091526000815290565b90508051600003610a375760405180602001604052806000815250610a62565b80610a4184610e9f565b604051602001610a529291906111e3565b6040516020818303038152906040525b9392505050565b610a71610b69565b6001600160a01b038116610ab9576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b6108e681610baf565b6000805482108015610451575050600090815260046020526040902054600160e01b161590565b600081600054811015610b375760008181526004602052604081205490600160e01b82169003610b35575b80600003610a62575060001901600081815260046020526040902054610b14565b505b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6008546001600160a01b03163314610895576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610ab0565b600880546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000805490829003610c4c576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600490915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b818114610cfb57808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600101610cc3565b5081600003610d36576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005550505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610d74903390899088908890600401611212565b6020604051808303816000875af1925050508015610daf575060408051601f3d908101601f19168201909252610dac9181019061124e565b60015b610e0d573d808015610ddd576040519150601f19603f3d011682016040523d82523d6000602084013e610de2565b606091505b508051600003610e05576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b600880547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a900480610eb95750819003601f19909101908152919050565b6001600160e01b0319811681146108e657600080fd5b600060208284031215610f0b57600080fd5b8135610a6281610ee3565b60005b83811015610f31578181015183820152602001610f19565b50506000910152565b60008151808452610f52816020860160208601610f16565b601f01601f19169290920160200192915050565b602081526000610a626020830184610f3a565b600060208284031215610f8b57600080fd5b5035919050565b80356001600160a01b0381168114610fa957600080fd5b919050565b60008060408385031215610fc157600080fd5b610fca83610f92565b946020939093013593505050565b600080600060608486031215610fed57600080fd5b610ff684610f92565b925061100460208501610f92565b9150604084013590509250925092565b60006020828403121561102657600080fd5b610a6282610f92565b80358015158114610fa957600080fd5b6000806040838503121561105257600080fd5b61105b83610f92565b91506110696020840161102f565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561109e57600080fd5b6110a785610f92565b93506110b560208601610f92565b925060408501359150606085013567ffffffffffffffff808211156110d957600080fd5b818701915087601f8301126110ed57600080fd5b8135818111156110ff576110ff611072565b604051601f8201601f19908116603f0116810190838211818310171561112757611127611072565b816040528281528a602084870101111561114057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60006020828403121561117657600080fd5b610a628261102f565b6000806040838503121561119257600080fd5b61119b83610f92565b915061106960208401610f92565b600181811c908216806111bd57607f821691505b6020821081036111dd57634e487b7160e01b600052602260045260246000fd5b50919050565b600083516111f5818460208801610f16565b835190830190611209818360208801610f16565b01949350505050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526112446080830184610f3a565b9695505050505050565b60006020828403121561126057600080fd5b8151610a6281610ee356fea2646970667358221220defce07e35340b86da8be29b59222db18fc98c0f251ef6179ce76b7a3217d91864736f6c63430008140033";

type BlockTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockToken__factory extends ContractFactory {
  constructor(...args: BlockTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BlockToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlockToken__factory {
    return super.connect(runner) as BlockToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockTokenInterface {
    return new Interface(_abi) as BlockTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BlockToken {
    return new Contract(address, _abi, runner) as unknown as BlockToken;
  }
}
