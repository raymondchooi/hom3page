/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BlockSales,
  BlockSalesInterface,
} from "../../../contracts/shop/BlockSales";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "NFTAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "paymentToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ccipRouter_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractTringToMessage_",
        type: "address",
      },
    ],
    name: "MessageNotFromBlockSales",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainMessageOriginated",
        type: "uint64",
      },
    ],
    name: "MessageNotFromSalesChain",
    type: "error",
  },
  {
    inputs: [],
    name: "NotBlockSalesContract",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "calculatedFees",
        type: "uint256",
      },
    ],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderExceedsMaxAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderToLargeMax10",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ToManyElementsInBuyArray",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256[][]",
            name: "tokens_",
            type: "uint256[][]",
          },
          {
            internalType: "uint256",
            name: "totalItems_",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer_",
            type: "address",
          },
          {
            internalType: "bool",
            name: "multiBuy_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockSales.Sale",
        name: "payload",
        type: "tuple",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256[][]",
            name: "tokens_",
            type: "uint256[][]",
          },
          {
            internalType: "uint256",
            name: "totalItems_",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer_",
            type: "address",
          },
          {
            internalType: "bool",
            name: "multiBuy_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockSales.Sale",
        name: "payload",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "SaleMade",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "NFT",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYMENT_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "contractAddress_",
        type: "address",
      },
    ],
    name: "addBlockStore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowlistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "allowlistedSourceChains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[][]",
        name: "tokenIds_",
        type: "uint256[][]",
      },
    ],
    name: "buyBatchBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "externalPurchase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "getChainBlockStore",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "withdrawBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawAddress_",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e06040526001805460ff60a01b1916600160a01b1790553480156200002457600080fd5b50604051620020ff380380620020ff833981016040819052620000479162000157565b33816001600160a01b03811662000079576040516335fdcccd60e21b8152600060048201526024015b60405180910390fd5b6001600160a01b0390811660805260016000558116620000b057604051631e4fbdf760e01b81526000600482015260240162000070565b620000bb81620000e8565b50600280546001600160a01b0319166001600160a01b0392831617905591821660a0521660c052620001a1565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200015257600080fd5b919050565b6000806000606084860312156200016d57600080fd5b62000178846200013a565b925062000188602085016200013a565b915062000198604085016200013a565b90509250925092565b60805160a05160c051611ed36200022c60003960008181610373015281816106b2015281816107990152818161098101528181610a3601528181610c950152610d7d015260008181610307015281816105dd0152818161088401528181610e5f015281816112fd015281816113bc01526115120152600081816103f70152610ad50152611ed36000f3fe60806040526004361061014b5760003560e01c8063877c86fb116100b4578063b97ddd581161006e578063d2aac3b711610056578063d2aac3b714610447578063f2fde38b14610487578063fd8b9acb146104a757005b8063b97ddd581461041b578063bfe22a011461042757005b80639d7b8e681161009c5780639d7b8e68146103b3578063a13157ca146103c8578063b0f479a1146103e857005b8063877c86fb146103615780638da5cb5b1461039557005b806368742da61161010557806372875c2d116100ed57806372875c2d146102d55780637c0b8de2146102f557806385572ffb1461034157005b806368742da6146102a0578063715018a6146102c057005b80634030d521116101335780634030d5211461022057806354b58b1c146102505780636159ada11461027057005b806301ffc9a7146101c5578063028acce4146101fa57005b366101c35760405162461bcd60e51b815260206004820152603160248201527f426c6f636b53616c6573203a205b726563656976655d202d20596f752063616e60448201527f206b65657020796f757220746f6b656e7300000000000000000000000000000060648201526084015b60405180910390fd5b005b3480156101d157600080fd5b506101e56101e03660046116c6565b6104c7565b60405190151581526020015b60405180910390f35b34801561020657600080fd5b5068056bc75e2d631000005b6040519081526020016101f1565b34801561022c57600080fd5b506101e561023b366004611714565b60046020526000908152604090205460ff1681565b34801561025c57600080fd5b506101c361026b36600461172f565b610530565b34801561027c57600080fd5b506101e561028b36600461175d565b60056020526000908152604090205460ff1681565b3480156102ac57600080fd5b506101c36102bb36600461175d565b610948565b3480156102cc57600080fd5b506101c3610aaa565b3480156102e157600080fd5b506101c36102f036600461177a565b610abe565b34801561030157600080fd5b506103297f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101f1565b34801561034d57600080fd5b506101c361035c3660046117a6565b610aca565b34801561036d57600080fd5b506103297f000000000000000000000000000000000000000000000000000000000000000081565b3480156103a157600080fd5b506001546001600160a01b0316610329565b3480156103bf57600080fd5b50600654610212565b3480156103d457600080fd5b506101c36103e33660046117e1565b610b3f565b3480156103f457600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610329565b3480156101c357600080fd5b34801561043357600080fd5b506101c3610442366004611864565b610fb6565b34801561045357600080fd5b50610329610462366004611714565b67ffffffffffffffff166000908152600360205260409020546001600160a01b031690565b34801561049357600080fd5b506101c36104a236600461175d565b610fc7565b3480156104b357600080fd5b506101c36104c2366004611881565b61101b565b60006001600160e01b031982167f85572ffb00000000000000000000000000000000000000000000000000000000148061052a57506001600160e01b031982167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b61053861106a565b600154600160a01b900460ff166105a45760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084016101ba565b6040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810182905230906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa158015610624573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064891906118c3565b6001600160a01b03161461069e5760405162461bcd60e51b815260206004820152601360248201527f546f6b656e206e6f7420617661696c61626c650000000000000000000000000060448201526064016101ba565b68056bc75e2d631000006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561071c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074091906118e0565b1161078d5760405162461bcd60e51b815260206004820152601160248201527f496e636f7272656374207061796d656e7400000000000000000000000000000060448201526064016101ba565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015268056bc75e2d6310000060448201526064016020604051808303816000875af115801561081a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083e9190611904565b9050801561093a57604080517f23b872dd0000000000000000000000000000000000000000000000000000000081523060048201523360248201526044810184905290517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916323b872dd91606480830192600092919082900301818387803b1580156108d357600080fd5b505af11580156108e7573d6000803e3d6000fd5b5050600680549250905060006108fc83611937565b90915550506040516724f9b897ef58a9229060019033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a45b506109456001600055565b50565b6109506110ad565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156109d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f491906118e0565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038481166004830152602482018390529192507f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015610a81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa59190611904565b505050565b610ab26110ad565b610abc60006110f3565b565b610ac66110ad565b5050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b2e576040517fd7f733340000000000000000000000000000000000000000000000000000000081523360048201526024016101ba565b610945610b3a82611b32565b611152565b610b4761106a565b600154600160a01b900460ff16610bb35760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084016101ba565b600080826005811115610bf2576040517f298ebe3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a83108015610c0157508082105b15610c3857848483818110610c1857610c18611bdf565b9050602002810190610c2a9190611bf5565b935050600190910190610bf2565b600a831115610c73576040517f529a187000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610c888468056bc75e2d63100000611c46565b9050806001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610cff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2391906118e0565b1015610d715760405162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742046756e6473000000000000000000000000000060448201526064016101ba565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303816000875af1158015610df6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1a9190611904565b90508015610fa75760005b83811015610f575760005b888883818110610e4257610e42611bdf565b9050602002810190610e549190611bf5565b9050811015610f44577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd30338c8c87818110610ea057610ea0611bdf565b9050602002810190610eb29190611bf5565b86818110610ec257610ec2611bdf565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b158015610f1957600080fd5b505af1158015610f2d573d6000803e3d6000fd5b505050508080610f3c90611937565b915050610e30565b5080610f4f81611937565b915050610e25565b508460066000828254610f6a9190611c5d565b90915550506040516724f9b897ef58a92290869033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a45b5050505050610ac66001600055565b610fbe6110ad565b61094581611662565b610fcf6110ad565b6001600160a01b038116611012576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016101ba565b610945816110f3565b6110236110ad565b67ffffffffffffffff919091166000908152600360205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b6002600054036110a6576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600055565b6001546001600160a01b03163314610abc576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016101ba565b600180546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8060200151816040015180602001905181019061116f91906118c3565b67ffffffffffffffff821660009081526004602052604090205460ff166111cd576040517e651a9900000000000000000000000000000000000000000000000000000000815267ffffffffffffffff831660048201526024016101ba565b6001600160a01b03811660009081526005602052604090205460ff16611229576040517e0e48e30000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526024016101ba565b825160208085015160608601518051919260009261124d9290810182019101611c70565b90508167ffffffffffffffff16837ff1f456df9618defccc7e2efcf6e0ecba13d5b393128e586fdf16120664b2e36b886040015180602001905181019061129491906118c3565b846040516112a3929190611dcb565b60405180910390a380606001516114d957600081600001516000815181106112cd576112cd611bdf565b60200260200101516000815181106112e7576112e7611bdf565b60200260200101519050306001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636352211e836040518263ffffffff1660e01b815260040161134991815260200190565b602060405180830381865afa158015611366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138a91906118c3565b6001600160a01b0316146113b2576040805180820190915284815260006020909101526114d3565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd3033855180516000906113f6576113f6611bdf565b602002602001015160008151811061141057611410611bdf565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561146a57600080fd5b505af115801561147e573d6000803e3d6000fd5b50506006805492509050600061149383611937565b909155505060405167ffffffffffffffff84169060019033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a45b5061165a565b805151600090815b818110156116085760005b845180518390811061150057611500611bdf565b6020026020010151518110156115f5577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd30338860000151868151811061155757611557611bdf565b6020026020010151858151811061157057611570611bdf565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156115ca57600080fd5b505af11580156115de573d6000803e3d6000fd5b5050505080806115ed90611937565b9150506114ec565b508061160081611937565b9150506114e1565b50816006600082825461161b9190611c5d565b90915550506040516724f9b897ef58a92290839033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a450505b505050505050565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b6000602082840312156116d857600080fd5b81356001600160e01b0319811681146116f057600080fd5b9392505050565b803567ffffffffffffffff8116811461170f57600080fd5b919050565b60006020828403121561172657600080fd5b6116f0826116f7565b60006020828403121561174157600080fd5b5035919050565b6001600160a01b038116811461094557600080fd5b60006020828403121561176f57600080fd5b81356116f081611748565b6000806040838503121561178d57600080fd5b823561179881611748565b946020939093013593505050565b6000602082840312156117b857600080fd5b813567ffffffffffffffff8111156117cf57600080fd5b820160a081850312156116f057600080fd5b600080602083850312156117f457600080fd5b823567ffffffffffffffff8082111561180c57600080fd5b818501915085601f83011261182057600080fd5b81358181111561182f57600080fd5b8660208260051b850101111561184457600080fd5b60209290920196919550909350505050565b801515811461094557600080fd5b60006020828403121561187657600080fd5b81356116f081611856565b6000806040838503121561189457600080fd5b61189d836116f7565b915060208301356118ad81611748565b809150509250929050565b805161170f81611748565b6000602082840312156118d557600080fd5b81516116f081611748565b6000602082840312156118f257600080fd5b5051919050565b805161170f81611856565b60006020828403121561191657600080fd5b81516116f081611856565b634e487b7160e01b600052601160045260246000fd5b60006001820161194957611949611921565b5060010190565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561198957611989611950565b60405290565b60405160a0810167ffffffffffffffff8111828210171561198957611989611950565b6040516080810167ffffffffffffffff8111828210171561198957611989611950565b604051601f8201601f1916810167ffffffffffffffff811182821017156119fe576119fe611950565b604052919050565b600082601f830112611a1757600080fd5b813567ffffffffffffffff811115611a3157611a31611950565b611a44601f8201601f19166020016119d5565b818152846020838601011115611a5957600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff821115611a9057611a90611950565b5060051b60200190565b600082601f830112611aab57600080fd5b81356020611ac0611abb83611a76565b6119d5565b82815260069290921b84018101918181019086841115611adf57600080fd5b8286015b84811015611b275760408189031215611afc5760008081fd5b611b04611966565b8135611b0f81611748565b81528185013585820152835291830191604001611ae3565b509695505050505050565b600060a08236031215611b4457600080fd5b611b4c61198f565b82358152611b5c602084016116f7565b6020820152604083013567ffffffffffffffff80821115611b7c57600080fd5b611b8836838701611a06565b60408401526060850135915080821115611ba157600080fd5b611bad36838701611a06565b60608401526080850135915080821115611bc657600080fd5b50611bd336828601611a9a565b60808301525092915050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611c0c57600080fd5b83018035915067ffffffffffffffff821115611c2757600080fd5b6020019150600581901b3603821315611c3f57600080fd5b9250929050565b808202811582820484141761052a5761052a611921565b8082018082111561052a5761052a611921565b60006020808385031215611c8357600080fd5b825167ffffffffffffffff80821115611c9b57600080fd5b9084019060808287031215611caf57600080fd5b611cb76119b2565b825182811115611cc657600080fd5b8301601f81018813611cd757600080fd5b8051611ce5611abb82611a76565b81815260059190911b8201860190868101908a831115611d0457600080fd5b8784015b83811015611d9157805187811115611d1f57600080fd5b8501603f81018d13611d3057600080fd5b89810151611d40611abb82611a76565b81815260059190911b8201604001908b8101908f831115611d615760008081fd5b6040840193505b82841015611d815783518252928c0192908c0190611d68565b8652505050918801918801611d08565b5084525050508284015184820152611dab604084016118b8565b6040820152611dbc606084016118f9565b60608201529695505050505050565b6001600160a01b03831681526000602060408184015260c0830184516080604086015281815180845260e08701915060e08160051b880101935084830192506000805b82811015611e625788860360df19018452845180518088529088019088880190845b81811015611e4c5783518352928a0192918a0191600101611e30565b5090975050509386019392860192600101611e0e565b5050505091850151606085015260408501516001600160a01b03811660808601529150606085015180151560a086015291509594505050505056fea26469706673582212207c2049449a0b8ab1e83b5c740b8f5472995f6b31a2d4805aed55118c256ebb1564736f6c63430008140033";

type BlockSalesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockSalesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockSales__factory extends ContractFactory {
  constructor(...args: BlockSalesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    NFTAddress_: AddressLike,
    paymentToken_: AddressLike,
    ccipRouter_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      NFTAddress_,
      paymentToken_,
      ccipRouter_,
      overrides || {}
    );
  }
  override deploy(
    NFTAddress_: AddressLike,
    paymentToken_: AddressLike,
    ccipRouter_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      NFTAddress_,
      paymentToken_,
      ccipRouter_,
      overrides || {}
    ) as Promise<
      BlockSales & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlockSales__factory {
    return super.connect(runner) as BlockSales__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockSalesInterface {
    return new Interface(_abi) as BlockSalesInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BlockSales {
    return new Contract(address, _abi, runner) as unknown as BlockSales;
  }
}
