/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BlockSales,
  BlockSalesInterface,
} from "../../../contracts/shop/BlockSales";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "NFTAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "paymentToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ccipRouter_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractTringToMessage_",
        type: "address",
      },
    ],
    name: "MessageNotFromBlockSales",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainMessageOriginated",
        type: "uint64",
      },
    ],
    name: "MessageNotFromSalesChain",
    type: "error",
  },
  {
    inputs: [],
    name: "NotBlockSalesContract",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "calculatedFees",
        type: "uint256",
      },
    ],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderExceedsMaxAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderToLargeMax10",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ToManyElementsInBuyArray",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256[][]",
            name: "tokens_",
            type: "uint256[][]",
          },
          {
            internalType: "uint256",
            name: "totalItems_",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer_",
            type: "address",
          },
          {
            internalType: "bool",
            name: "multiBuy_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockSales.Sale",
        name: "payload",
        type: "tuple",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "salesMessageId_",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockSales.SaleRecipe",
        name: "payload",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "SaleMade",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "NFT",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYMENT_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[][]",
        name: "tokenIds_",
        type: "uint256[][]",
      },
    ],
    name: "buyBatchBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "getChainBlockStore",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "contractAddress_",
        type: "address",
      },
    ],
    name: "setBlockStore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "flag_",
        type: "bool",
      },
    ],
    name: "setBlockStoreActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "withdrawBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e06040526001805460ff60a01b1916600160a01b1790553480156200002457600080fd5b506040516200286438038062002864833981016040819052620000479162000157565b33816001600160a01b03811662000079576040516335fdcccd60e21b8152600060048201526024015b60405180910390fd5b6001600160a01b0390811660805260016000558116620000b057604051631e4fbdf760e01b81526000600482015260240162000070565b620000bb81620000e8565b50600280546001600160a01b0319166001600160a01b0392831617905591821660a0521660c052620001a1565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200015257600080fd5b919050565b6000806000606084860312156200016d57600080fd5b62000178846200013a565b925062000188602085016200013a565b915062000198604085016200013a565b90509250925092565b60805160a05160c051612631620002336000396000818161026c015281816106cb015281816107b201528181610ce10152610dc9015260008181610200015281816105fb0152818161087f0152818161097f01528181610a6c01528181610eab0152818161133c015281816114af0152818161168b01526117a00152600081816103100152610ad701526126316000f3fe60806040526004361061011a5760003560e01c80638b8fb4801161009c578063b0f479a11161006e578063bfe22a0111610056578063bfe22a0114610354578063d2aac3b714610374578063f2fde38b146103b457005b8063b0f479a114610301578063bfac0b461461033457005b80638b8fb4801461028e5780638da5cb5b146102ae5780639d7b8e68146102cc578063a13157ca146102e157005b8063715018a6116100ed5780637c0b8de2116100d55780637c0b8de2146101ee57806385572ffb1461023a578063877c86fb1461025a57005b8063715018a6146101b957806372875c2d146101ce57005b80620fa9fb1461012357806301ffc9a714610143578063028acce41461017857806354b58b1c1461019957005b3661012157005b005b34801561012f57600080fd5b5061012161013e366004611c78565b6103d4565b34801561014f57600080fd5b5061016361015e366004611cb1565b6104f9565b60405190151581526020015b60405180910390f35b34801561018457600080fd5b506305f5e1005b60405190815260200161016f565b3480156101a557600080fd5b506101216101b4366004611ce2565b610562565b3480156101c557600080fd5b50610121610943565b3480156101da57600080fd5b506101216101e9366004611cfb565b610957565b3480156101fa57600080fd5b506102227f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161016f565b34801561024657600080fd5b50610121610255366004611d27565b610acc565b34801561026657600080fd5b506102227f000000000000000000000000000000000000000000000000000000000000000081565b34801561029a57600080fd5b506101216102a9366004611d7f565b610b41565b3480156102ba57600080fd5b506001546001600160a01b0316610222565b3480156102d857600080fd5b5060055461018b565b3480156102ed57600080fd5b506101216102fc366004611d9b565b610b90565b34801561030d57600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610222565b34801561034057600080fd5b5061012161034f366004611e1e565b611006565b34801561036057600080fd5b5061012161036f366004611e4a565b61103a565b34801561038057600080fd5b5061022261038f366004611e67565b67ffffffffffffffff166000908152600360205260409020546001600160a01b031690565b3480156103c057600080fd5b506101216103cf366004611e82565b61104b565b6103dc61109f565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561043e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104629190611e9f565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018390529192509083169063a9059cbb906044016020604051808303816000875af11580156104ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f29190611ec3565b5050505050565b60006001600160e01b031982167f85572ffb00000000000000000000000000000000000000000000000000000000148061055c57506001600160e01b031982167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b61056a6110e5565b600154600160a01b900460ff166105db5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084015b60405180910390fd5b6040516331a9108f60e11b81526004810182905230906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa158015610642573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106669190611eeb565b6001600160a01b0316146106bc5760405162461bcd60e51b815260206004820152601360248201527f546f6b656e206e6f7420617661696c61626c650000000000000000000000000060448201526064016105d2565b6305f5e1006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610735573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107599190611e9f565b116107a65760405162461bcd60e51b815260206004820152601160248201527f496e636f7272656374207061796d656e7400000000000000000000000000000060448201526064016105d2565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b0390911660048201523060248201526305f5e10060448201526064016020604051808303816000875af115801561082e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108529190611ec3565b9050801561093557604080516323b872dd60e01b81523060048201523360248201526044810184905290517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916323b872dd91606480830192600092919082900301818387803b1580156108ce57600080fd5b505af11580156108e2573d6000803e3d6000fd5b5050600580549250905060006108f783611f1e565b90915550506040516724f9b897ef58a9229060019033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a45b506109406001600055565b50565b61094b61109f565b6109556000611128565b565b61095f61109f565b6040516331a9108f60e11b81526004810182905230906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa1580156109c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ea9190611eeb565b6001600160a01b031614610a405760405162461bcd60e51b815260206004820152601360248201527f546f6b656e206e6f7420617661696c61626c650000000000000000000000000060448201526064016105d2565b6040516323b872dd60e01b81523060048201526001600160a01b038381166024830152604482018390527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90606401600060405180830381600087803b158015610ab057600080fd5b505af1158015610ac4573d6000803e3d6000fd5b505050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b30576040517fd7f733340000000000000000000000000000000000000000000000000000000081523360048201526024016105d2565b610940610b3c82612119565b611187565b610b4961109f565b67ffffffffffffffff919091166000908152600360205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b610b986110e5565b600154600160a01b900460ff16610c045760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084016105d2565b600080826005811115610c43576040517f298ebe3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a83108015610c5257508082105b15610c8957848483818110610c6957610c696121c6565b9050602002810190610c7b91906121dc565b935050600190910190610c43565b600a831115610cc4576040517f529a187000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610cd4846305f5e10061222d565b9050806001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610d4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6f9190611e9f565b1015610dbd5760405162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742046756e6473000000000000000000000000000060448201526064016105d2565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303816000875af1158015610e42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e669190611ec3565b90508015610ff35760005b83811015610fa35760005b888883818110610e8e57610e8e6121c6565b9050602002810190610ea091906121dc565b9050811015610f90577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd30338c8c87818110610eec57610eec6121c6565b9050602002810190610efe91906121dc565b86818110610f0e57610f0e6121c6565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b158015610f6557600080fd5b505af1158015610f79573d6000803e3d6000fd5b505050508080610f8890611f1e565b915050610e7c565b5080610f9b81611f1e565b915050610e71565b508460056000828254610fb69190612244565b90915550506040516724f9b897ef58a92290869033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a45b50505050506110026001600055565b5050565b61100e61109f565b67ffffffffffffffff919091166000908152600460205260409020805460ff1916911515919091179055565b61104261109f565b61094081611610565b61105361109f565b6001600160a01b038116611096576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016105d2565b61094081611128565b6001546001600160a01b03163314610955576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016105d2565b600260005403611121576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600055565b600180546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b806020015181604001518060200190518101906111a49190611eeb565b67ffffffffffffffff821660009081526004602052604090205460ff16611202576040517e651a9900000000000000000000000000000000000000000000000000000000815267ffffffffffffffff831660048201526024016105d2565b67ffffffffffffffff82166000908152600360205260409020546001600160a01b03163314611267576040517e0e48e30000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526024016105d2565b825160208085015160608601518051919260009261128b9290810182019101612257565b90508167ffffffffffffffff16837ff1f456df9618defccc7e2efcf6e0ecba13d5b393128e586fdf16120664b2e36b88604001518060200190518101906112d29190611eeb565b846040516112e19291906123b2565b60405180910390a360006112fe8260000151836060015115611674565b9050806113295760408051808201909152848152600060208201526113239084611896565b50611607565b8160600151611476576001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd303385518051600090611376576113766121c6565b6020026020010151600081518110611390576113906121c6565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156113ea57600080fd5b505af11580156113fe573d6000803e3d6000fd5b50506005805492509050600061141383611f1e565b909155505060408051808201909152848152600160208201526114369084611896565b5060405167ffffffffffffffff84169060019033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a4611607565b815151600090815b818110156115945760005b855180518390811061149d5761149d6121c6565b60200260200101515181101561158b577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd3033896000015186815181106114f4576114f46121c6565b6020026020010151858151811061150d5761150d6121c6565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561156757600080fd5b505af115801561157b573d6000803e3d6000fd5b5050600190920191506114899050565b5060010161147e565b5081600560008282546115a79190612244565b909155505060408051808201909152868152600160208201526115ca9086611896565b5060405167ffffffffffffffff861690839033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a450505b50505050505050565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b8151600090821561188c57306001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636352211e866000815181106116cb576116cb6121c6565b60200260200101516000815181106116e5576116e56121c6565b60200260200101516040518263ffffffff1660e01b815260040161170b91815260200190565b602060405180830381865afa158015611728573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061174c9190611eeb565b6001600160a01b03161461176457600091505061055c565b60005b8181101561188a5760005b858281518110611784576117846121c6565b60200260200101515181101561188157306001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636352211e8885815181106117df576117df6121c6565b602002602001015184815181106117f8576117f86121c6565b60200260200101516040518263ffffffff1660e01b815260040161181e91815260200190565b602060405180830381865afa15801561183b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185f9190611eeb565b6001600160a01b031614611879576000935050505061055c565b600101611772565b50600101611767565b505b5060019392505050565b60006118a061109f565b67ffffffffffffffff82166000908152600360205260408120546118ce906001600160a01b03168583611ae9565b90506000306001600160a01b031663b0f479a16040518163ffffffff1660e01b8152600401602060405180830381865afa158015611910573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119349190611eeb565b90506000816001600160a01b03166320487ded86856040518363ffffffff1660e01b81526004016119669291906124ca565b602060405180830381865afa158015611983573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a79190611e9f565b9050478111156119ec576040517f8f0f4206000000000000000000000000000000000000000000000000000000008152476004820152602481018290526044016105d2565b6040517f96f4e9f90000000000000000000000000000000000000000000000000000000081526001600160a01b038316906396f4e9f9908390611a3590899088906004016124ca565b60206040518083038185885af1158015611a53573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611a789190611e9f565b67ffffffffffffffff8616600081815260036020526040808220549051939750919287927fe21ea937211610be148d84223ba82bdcdf532975fd2321b9374f5419bae4307192611ad8926001600160a01b03909216918c919088906125a4565b60405180910390a350505092915050565b611b246040518060a0016040528060608152602001606081526020016060815260200160006001600160a01b03168152602001606081525090565b6040805160a081019091526001600160a01b03851660c08201528060e08101604051602081830303815290604052815260200184604051602001611b6891906125e2565b60408051601f1981840301815291905281526020016000604051908082528060200260200182016040528015611bc457816020015b6040805180820190915260008082526020820152815260200190600190039081611b9d5790505b508152602001836001600160a01b03168152602001611c59604051806020016040528062030d4081525060408051915160248084019190915281518084039091018152604490920190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f97a657c90000000000000000000000000000000000000000000000000000000017905290565b9052949350505050565b6001600160a01b038116811461094057600080fd5b60008060408385031215611c8b57600080fd5b8235611c9681611c63565b91506020830135611ca681611c63565b809150509250929050565b600060208284031215611cc357600080fd5b81356001600160e01b031981168114611cdb57600080fd5b9392505050565b600060208284031215611cf457600080fd5b5035919050565b60008060408385031215611d0e57600080fd5b8235611d1981611c63565b946020939093013593505050565b600060208284031215611d3957600080fd5b813567ffffffffffffffff811115611d5057600080fd5b820160a08185031215611cdb57600080fd5b803567ffffffffffffffff81168114611d7a57600080fd5b919050565b60008060408385031215611d9257600080fd5b611c9683611d62565b60008060208385031215611dae57600080fd5b823567ffffffffffffffff80821115611dc657600080fd5b818501915085601f830112611dda57600080fd5b813581811115611de957600080fd5b8660208260051b8501011115611dfe57600080fd5b60209290920196919550909350505050565b801515811461094057600080fd5b60008060408385031215611e3157600080fd5b611e3a83611d62565b91506020830135611ca681611e10565b600060208284031215611e5c57600080fd5b8135611cdb81611e10565b600060208284031215611e7957600080fd5b611cdb82611d62565b600060208284031215611e9457600080fd5b8135611cdb81611c63565b600060208284031215611eb157600080fd5b5051919050565b8051611d7a81611e10565b600060208284031215611ed557600080fd5b8151611cdb81611e10565b8051611d7a81611c63565b600060208284031215611efd57600080fd5b8151611cdb81611c63565b634e487b7160e01b600052601160045260246000fd5b600060018201611f3057611f30611f08565b5060010190565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611f7057611f70611f37565b60405290565b60405160a0810167ffffffffffffffff81118282101715611f7057611f70611f37565b6040516080810167ffffffffffffffff81118282101715611f7057611f70611f37565b604051601f8201601f1916810167ffffffffffffffff81118282101715611fe557611fe5611f37565b604052919050565b600082601f830112611ffe57600080fd5b813567ffffffffffffffff81111561201857612018611f37565b61202b601f8201601f1916602001611fbc565b81815284602083860101111561204057600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff82111561207757612077611f37565b5060051b60200190565b600082601f83011261209257600080fd5b813560206120a76120a28361205d565b611fbc565b82815260069290921b840181019181810190868411156120c657600080fd5b8286015b8481101561210e57604081890312156120e35760008081fd5b6120eb611f4d565b81356120f681611c63565b815281850135858201528352918301916040016120ca565b509695505050505050565b600060a0823603121561212b57600080fd5b612133611f76565b8235815261214360208401611d62565b6020820152604083013567ffffffffffffffff8082111561216357600080fd5b61216f36838701611fed565b6040840152606085013591508082111561218857600080fd5b61219436838701611fed565b606084015260808501359150808211156121ad57600080fd5b506121ba36828601612081565b60808301525092915050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126121f357600080fd5b83018035915067ffffffffffffffff82111561220e57600080fd5b6020019150600581901b360382131561222657600080fd5b9250929050565b808202811582820484141761055c5761055c611f08565b8082018082111561055c5761055c611f08565b6000602080838503121561226a57600080fd5b825167ffffffffffffffff8082111561228257600080fd5b908401906080828703121561229657600080fd5b61229e611f99565b8251828111156122ad57600080fd5b8301601f810188136122be57600080fd5b80516122cc6120a28261205d565b81815260059190911b8201860190868101908a8311156122eb57600080fd5b8784015b838110156123785780518781111561230657600080fd5b8501603f81018d1361231757600080fd5b898101516123276120a28261205d565b81815260059190911b8201604001908b8101908f8311156123485760008081fd5b6040840193505b828410156123685783518252928c0192908c019061234f565b86525050509188019188016122ef565b508452505050828401518482015261239260408401611ee0565b60408201526123a360608401611eb8565b60608201529695505050505050565b6001600160a01b03831681526000602060408184015260c0830184516080604086015281815180845260e08701915060e08160051b880101935084830192506000805b828110156124495788860360df19018452845180518088529088019088880190845b818110156124335783518352928a0192918a0191600101612417565b50909750505093860193928601926001016123f5565b5050505091850151606085015260408501516001600160a01b03811660808601529150606085015180151560a0860152915095945050505050565b6000815180845260005b818110156124aa5760208185018101518683018201520161248e565b506000602082860101526020601f19601f83011685010191505092915050565b6000604067ffffffffffffffff8516835260208181850152845160a0838601526124f760e0860182612484565b905081860151603f19808784030160608801526125148383612484565b88860151888203830160808a01528051808352908601945060009350908501905b8084101561256757845180516001600160a01b0316835286015186830152938501936001939093019290860190612535565b5060608901516001600160a01b031660a08901526080890151888203830160c08a015295506125968187612484565b9a9950505050505050505050565b6001600160a01b03858116825260a08201906125cf6020840187805182526020908101511515910152565b9390931660608201526080015292915050565b815181526020808301511515908201526040810161055c56fea26469706673582212208e7a09966fc6729c84fc56f0f4d7f52102986afbcc790514370c085d45bfecc964736f6c63430008140033";

type BlockSalesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockSalesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockSales__factory extends ContractFactory {
  constructor(...args: BlockSalesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    NFTAddress_: AddressLike,
    paymentToken_: AddressLike,
    ccipRouter_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      NFTAddress_,
      paymentToken_,
      ccipRouter_,
      overrides || {}
    );
  }
  override deploy(
    NFTAddress_: AddressLike,
    paymentToken_: AddressLike,
    ccipRouter_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      NFTAddress_,
      paymentToken_,
      ccipRouter_,
      overrides || {}
    ) as Promise<
      BlockSales & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlockSales__factory {
    return super.connect(runner) as BlockSales__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockSalesInterface {
    return new Interface(_abi) as BlockSalesInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BlockSales {
    return new Contract(address, _abi, runner) as unknown as BlockSales;
  }
}
