/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BlockSales,
  BlockSalesInterface,
} from "../../../contracts/shop/BlockSales";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "NFTAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "paymentToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ccipRouter_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractTringToMessage_",
        type: "address",
      },
    ],
    name: "MessageNotFromBlockSales",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainMessageOriginated",
        type: "uint64",
      },
    ],
    name: "MessageNotFromSalesChain",
    type: "error",
  },
  {
    inputs: [],
    name: "NotBlockSalesContract",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "calculatedFees",
        type: "uint256",
      },
    ],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderExceedsMaxAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderToLargeMax10",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ToManyElementsInBuyArray",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256[][]",
            name: "tokens_",
            type: "uint256[][]",
          },
          {
            internalType: "uint256",
            name: "totalItems_",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer_",
            type: "address",
          },
          {
            internalType: "bool",
            name: "multiBuy_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockSales.Sale",
        name: "payload",
        type: "tuple",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "salesMessageId_",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockSales.SaleRecipe",
        name: "payload",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "SaleMade",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "NFT",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYMENT_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[][]",
        name: "tokenIds_",
        type: "uint256[][]",
      },
    ],
    name: "buyBatchBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "getChainBlockStore",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "contractAddress_",
        type: "address",
      },
    ],
    name: "setBlockStore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "flag_",
        type: "bool",
      },
    ],
    name: "setBlockStoreActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "withdrawBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawAddress_",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e06040526001805460ff60a01b1916600160a01b1790553480156200002457600080fd5b506040516200276b3803806200276b833981016040819052620000479162000157565b33816001600160a01b03811662000079576040516335fdcccd60e21b8152600060048201526024015b60405180910390fd5b6001600160a01b0390811660805260016000558116620000b057604051631e4fbdf760e01b81526000600482015260240162000070565b620000bb81620000e8565b50600280546001600160a01b0319166001600160a01b0392831617905591821660a0521660c052620001a1565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200015257600080fd5b919050565b6000806000606084860312156200016d57600080fd5b62000178846200013a565b925062000188602085016200013a565b915062000198604085016200013a565b90509250925092565b60805160a05160c05161253862000233600039600081816102e3015281816106360152818161071d01528181610905015281816109ba01528181610c680152610d50015260008181610277015281816105610152818161080801528181610e32015281816112be015281816113870152818161150601526115fd0152600081816103870152610a5901526125386000f3fe60806040526004361061011b5760003560e01c80638b8fb4801161009c578063b0f479a11161006e578063bfe22a0111610056578063bfe22a01146103cb578063d2aac3b7146103eb578063f2fde38b1461042b57005b8063b0f479a114610378578063bfac0b46146103ab57005b80638b8fb480146103055780638da5cb5b146103255780639d7b8e6814610343578063a13157ca1461035857005b8063715018a6116100ed5780637c0b8de2116100d55780637c0b8de21461026557806385572ffb146102b1578063877c86fb146102d157005b8063715018a61461023057806372875c2d1461024557005b806301ffc9a714610195578063028acce4146101ca57806354b58b1c146101f057806368742da61461021057005b366101935760405162461bcd60e51b815260206004820152603160248201527f426c6f636b53616c6573203a205b726563656976655d202d20596f752063616e60448201527f206b65657020796f757220746f6b656e7300000000000000000000000000000060648201526084015b60405180910390fd5b005b3480156101a157600080fd5b506101b56101b0366004611b88565b61044b565b60405190151581526020015b60405180910390f35b3480156101d657600080fd5b5068056bc75e2d631000005b6040519081526020016101c1565b3480156101fc57600080fd5b5061019361020b366004611bb9565b6104b4565b34801561021c57600080fd5b5061019361022b366004611be7565b6108cc565b34801561023c57600080fd5b50610193610a2e565b34801561025157600080fd5b50610193610260366004611c04565b610a42565b34801561027157600080fd5b506102997f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101c1565b3480156102bd57600080fd5b506101936102cc366004611c30565b610a4e565b3480156102dd57600080fd5b506102997f000000000000000000000000000000000000000000000000000000000000000081565b34801561031157600080fd5b50610193610320366004611c88565b610ac3565b34801561033157600080fd5b506001546001600160a01b0316610299565b34801561034f57600080fd5b506005546101e2565b34801561036457600080fd5b50610193610373366004611cbf565b610b12565b34801561038457600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610299565b3480156103b757600080fd5b506101936103c6366004611d42565b610f89565b3480156103d757600080fd5b506101936103e6366004611d6e565b610fbd565b3480156103f757600080fd5b50610299610406366004611d8b565b67ffffffffffffffff166000908152600360205260409020546001600160a01b031690565b34801561043757600080fd5b50610193610446366004611be7565b610fce565b60006001600160e01b031982167f85572ffb0000000000000000000000000000000000000000000000000000000014806104ae57506001600160e01b031982167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b6104bc611022565b600154600160a01b900460ff166105285760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b606482015260840161018a565b6040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810182905230906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa1580156105a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cc9190611db1565b6001600160a01b0316146106225760405162461bcd60e51b815260206004820152601360248201527f546f6b656e206e6f7420617661696c61626c6500000000000000000000000000604482015260640161018a565b68056bc75e2d631000006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156106a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c49190611dce565b116107115760405162461bcd60e51b815260206004820152601160248201527f496e636f7272656374207061796d656e74000000000000000000000000000000604482015260640161018a565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015268056bc75e2d6310000060448201526064016020604051808303816000875af115801561079e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c29190611df2565b905080156108be57604080517f23b872dd0000000000000000000000000000000000000000000000000000000081523060048201523360248201526044810184905290517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916323b872dd91606480830192600092919082900301818387803b15801561085757600080fd5b505af115801561086b573d6000803e3d6000fd5b50506005805492509050600061088083611e25565b90915550506040516724f9b897ef58a9229060019033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a45b506108c96001600055565b50565b6108d4611065565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610954573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109789190611dce565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038481166004830152602482018390529192507f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015610a05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a299190611df2565b505050565b610a36611065565b610a4060006110ab565b565b610a4a611065565b5050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ab2576040517fd7f7333400000000000000000000000000000000000000000000000000000000815233600482015260240161018a565b6108c9610abe82612020565b61110a565b610acb611065565b67ffffffffffffffff919091166000908152600360205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b610b1a611022565b600154600160a01b900460ff16610b865760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b606482015260840161018a565b600080826005811115610bc5576040517f298ebe3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a83108015610bd457508082105b15610c0b57848483818110610beb57610beb6120cd565b9050602002810190610bfd91906120e3565b935050600190910190610bc5565b600a831115610c46576040517f529a187000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610c5b8468056bc75e2d63100000612134565b9050806001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610cd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf69190611dce565b1015610d445760405162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742046756e64730000000000000000000000000000604482015260640161018a565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303816000875af1158015610dc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ded9190611df2565b90508015610f7a5760005b83811015610f2a5760005b888883818110610e1557610e156120cd565b9050602002810190610e2791906120e3565b9050811015610f17577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd30338c8c87818110610e7357610e736120cd565b9050602002810190610e8591906120e3565b86818110610e9557610e956120cd565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b158015610eec57600080fd5b505af1158015610f00573d6000803e3d6000fd5b505050508080610f0f90611e25565b915050610e03565b5080610f2281611e25565b915050610df8565b508460056000828254610f3d919061214b565b90915550506040516724f9b897ef58a92290869033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a45b5050505050610a4a6001600055565b610f91611065565b67ffffffffffffffff919091166000908152600460205260409020805460ff1916911515919091179055565b610fc5611065565b6108c981611757565b610fd6611065565b6001600160a01b038116611019576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526000600482015260240161018a565b6108c9816110ab565b60026000540361105e576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600055565b6001546001600160a01b03163314610a40576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240161018a565b600180546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b806020015181604001518060200190518101906111279190611db1565b67ffffffffffffffff821660009081526004602052604090205460ff16611185576040517e651a9900000000000000000000000000000000000000000000000000000000815267ffffffffffffffff8316600482015260240161018a565b67ffffffffffffffff82166000908152600360205260409020546001600160a01b031633146111ea576040517e0e48e30000000000000000000000000000000000000000000000000000000081526001600160a01b038216600482015260240161018a565b825160208085015160608601518051919260009261120e929081018201910161215e565b90508167ffffffffffffffff16837ff1f456df9618defccc7e2efcf6e0ecba13d5b393128e586fdf16120664b2e36b88604001518060200190518101906112559190611db1565b846040516112649291906122b9565b60405180910390a380606001516114c3576000816000015160008151811061128e5761128e6120cd565b60200260200101516000815181106112a8576112a86120cd565b60200260200101519050306001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636352211e836040518263ffffffff1660e01b815260040161130a91815260200190565b602060405180830381865afa158015611327573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134b9190611db1565b6001600160a01b03161461137d57604080518082019091528481526000602082015261137790846117bb565b506114bd565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd3033855180516000906113c1576113c16120cd565b60200260200101516000815181106113db576113db6120cd565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561143557600080fd5b505af1158015611449573d6000803e3d6000fd5b50506005805492509050600061145e83611e25565b9091555050604080518082019091528481526001602082015261148190846117bb565b5060405167ffffffffffffffff84169060019033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a45b5061174f565b805151600090815b818110156116de5760005b84518051839081106114ea576114ea6120cd565b6020026020010151518110156116d557306001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636352211e87600001518581518110611549576115496120cd565b60200260200101518481518110611562576115626120cd565b60200260200101516040518263ffffffff1660e01b815260040161158891815260200190565b602060405180830381865afa1580156115a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c99190611db1565b6001600160a01b0316146115fb5760408051808201909152878152600060208201526115f590876117bb565b506116d5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd303388600001518681518110611642576116426120cd565b6020026020010151858151811061165b5761165b6120cd565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156116b557600080fd5b505af11580156116c9573d6000803e3d6000fd5b505050506001016114d6565b506001016114cb565b5081600560008282546116f1919061214b565b9091555050604080518082019091528581526001602082015261171490856117bb565b506040516724f9b897ef58a92290839033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a450505b505050505050565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b60006117c5611065565b67ffffffffffffffff82166000908152600360205260408120546117f3906001600160a01b03168583611a0e565b90506000306001600160a01b031663b0f479a16040518163ffffffff1660e01b8152600401602060405180830381865afa158015611835573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118599190611db1565b90506000816001600160a01b03166320487ded86856040518363ffffffff1660e01b815260040161188b9291906123d1565b602060405180830381865afa1580156118a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118cc9190611dce565b905047811115611911576040517f8f0f42060000000000000000000000000000000000000000000000000000000081524760048201526024810182905260440161018a565b6040517f96f4e9f90000000000000000000000000000000000000000000000000000000081526001600160a01b038316906396f4e9f990839061195a90899088906004016123d1565b60206040518083038185885af1158015611978573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061199d9190611dce565b67ffffffffffffffff8616600081815260036020526040808220549051939750919287927fe21ea937211610be148d84223ba82bdcdf532975fd2321b9374f5419bae43071926119fd926001600160a01b03909216918c919088906124ab565b60405180910390a350505092915050565b611a496040518060a0016040528060608152602001606081526020016060815260200160006001600160a01b03168152602001606081525090565b6040805160a081019091526001600160a01b03851660c08201528060e08101604051602081830303815290604052815260200184604051602001611a8d91906124e9565b60408051601f1981840301815291905281526020016000604051908082528060200260200182016040528015611ae957816020015b6040805180820190915260008082526020820152815260200190600190039081611ac25790505b508152602001836001600160a01b03168152602001611b7e604051806020016040528062030d4081525060408051915160248084019190915281518084039091018152604490920190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f97a657c90000000000000000000000000000000000000000000000000000000017905290565b9052949350505050565b600060208284031215611b9a57600080fd5b81356001600160e01b031981168114611bb257600080fd5b9392505050565b600060208284031215611bcb57600080fd5b5035919050565b6001600160a01b03811681146108c957600080fd5b600060208284031215611bf957600080fd5b8135611bb281611bd2565b60008060408385031215611c1757600080fd5b8235611c2281611bd2565b946020939093013593505050565b600060208284031215611c4257600080fd5b813567ffffffffffffffff811115611c5957600080fd5b820160a08185031215611bb257600080fd5b803567ffffffffffffffff81168114611c8357600080fd5b919050565b60008060408385031215611c9b57600080fd5b611ca483611c6b565b91506020830135611cb481611bd2565b809150509250929050565b60008060208385031215611cd257600080fd5b823567ffffffffffffffff80821115611cea57600080fd5b818501915085601f830112611cfe57600080fd5b813581811115611d0d57600080fd5b8660208260051b8501011115611d2257600080fd5b60209290920196919550909350505050565b80151581146108c957600080fd5b60008060408385031215611d5557600080fd5b611d5e83611c6b565b91506020830135611cb481611d34565b600060208284031215611d8057600080fd5b8135611bb281611d34565b600060208284031215611d9d57600080fd5b611bb282611c6b565b8051611c8381611bd2565b600060208284031215611dc357600080fd5b8151611bb281611bd2565b600060208284031215611de057600080fd5b5051919050565b8051611c8381611d34565b600060208284031215611e0457600080fd5b8151611bb281611d34565b634e487b7160e01b600052601160045260246000fd5b600060018201611e3757611e37611e0f565b5060010190565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611e7757611e77611e3e565b60405290565b60405160a0810167ffffffffffffffff81118282101715611e7757611e77611e3e565b6040516080810167ffffffffffffffff81118282101715611e7757611e77611e3e565b604051601f8201601f1916810167ffffffffffffffff81118282101715611eec57611eec611e3e565b604052919050565b600082601f830112611f0557600080fd5b813567ffffffffffffffff811115611f1f57611f1f611e3e565b611f32601f8201601f1916602001611ec3565b818152846020838601011115611f4757600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff821115611f7e57611f7e611e3e565b5060051b60200190565b600082601f830112611f9957600080fd5b81356020611fae611fa983611f64565b611ec3565b82815260069290921b84018101918181019086841115611fcd57600080fd5b8286015b848110156120155760408189031215611fea5760008081fd5b611ff2611e54565b8135611ffd81611bd2565b81528185013585820152835291830191604001611fd1565b509695505050505050565b600060a0823603121561203257600080fd5b61203a611e7d565b8235815261204a60208401611c6b565b6020820152604083013567ffffffffffffffff8082111561206a57600080fd5b61207636838701611ef4565b6040840152606085013591508082111561208f57600080fd5b61209b36838701611ef4565b606084015260808501359150808211156120b457600080fd5b506120c136828601611f88565b60808301525092915050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126120fa57600080fd5b83018035915067ffffffffffffffff82111561211557600080fd5b6020019150600581901b360382131561212d57600080fd5b9250929050565b80820281158282048414176104ae576104ae611e0f565b808201808211156104ae576104ae611e0f565b6000602080838503121561217157600080fd5b825167ffffffffffffffff8082111561218957600080fd5b908401906080828703121561219d57600080fd5b6121a5611ea0565b8251828111156121b457600080fd5b8301601f810188136121c557600080fd5b80516121d3611fa982611f64565b81815260059190911b8201860190868101908a8311156121f257600080fd5b8784015b8381101561227f5780518781111561220d57600080fd5b8501603f81018d1361221e57600080fd5b8981015161222e611fa982611f64565b81815260059190911b8201604001908b8101908f83111561224f5760008081fd5b6040840193505b8284101561226f5783518252928c0192908c0190612256565b86525050509188019188016121f6565b508452505050828401518482015261229960408401611da6565b60408201526122aa60608401611de7565b60608201529695505050505050565b6001600160a01b03831681526000602060408184015260c0830184516080604086015281815180845260e08701915060e08160051b880101935084830192506000805b828110156123505788860360df19018452845180518088529088019088880190845b8181101561233a5783518352928a0192918a019160010161231e565b50909750505093860193928601926001016122fc565b5050505091850151606085015260408501516001600160a01b03811660808601529150606085015180151560a0860152915095945050505050565b6000815180845260005b818110156123b157602081850181015186830182015201612395565b506000602082860101526020601f19601f83011685010191505092915050565b6000604067ffffffffffffffff8516835260208181850152845160a0838601526123fe60e086018261238b565b905081860151603f198087840301606088015261241b838361238b565b88860151888203830160808a01528051808352908601945060009350908501905b8084101561246e57845180516001600160a01b031683528601518683015293850193600193909301929086019061243c565b5060608901516001600160a01b031660a08901526080890151888203830160c08a0152955061249d818761238b565b9a9950505050505050505050565b6001600160a01b03858116825260a08201906124d66020840187805182526020908101511515910152565b9390931660608201526080015292915050565b81518152602080830151151590820152604081016104ae56fea264697066735822122020f7dc83a8c6719c7eba7072ad8f57cc32da84aeb70e88a16467078039943e6f64736f6c63430008140033";

type BlockSalesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockSalesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockSales__factory extends ContractFactory {
  constructor(...args: BlockSalesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    NFTAddress_: AddressLike,
    paymentToken_: AddressLike,
    ccipRouter_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      NFTAddress_,
      paymentToken_,
      ccipRouter_,
      overrides || {}
    );
  }
  override deploy(
    NFTAddress_: AddressLike,
    paymentToken_: AddressLike,
    ccipRouter_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      NFTAddress_,
      paymentToken_,
      ccipRouter_,
      overrides || {}
    ) as Promise<
      BlockSales & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlockSales__factory {
    return super.connect(runner) as BlockSales__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockSalesInterface {
    return new Interface(_abi) as BlockSalesInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BlockSales {
    return new Contract(address, _abi, runner) as unknown as BlockSales;
  }
}
