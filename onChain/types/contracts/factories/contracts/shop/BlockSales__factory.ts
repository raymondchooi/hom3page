/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BlockSales,
  BlockSalesInterface,
} from "../../../contracts/shop/BlockSales";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "NFTAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "paymentToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ccipRouter_",
        type: "address",
      },
      {
        internalType: "address",
        name: "linkToken_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "note_",
        type: "string",
      },
    ],
    name: "DEVELOPMENT_ERROR",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractTringToMessage_",
        type: "address",
      },
    ],
    name: "MessageNotFromBlockSales",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainMessageOriginated",
        type: "uint64",
      },
    ],
    name: "MessageNotFromSalesChain",
    type: "error",
  },
  {
    inputs: [],
    name: "NotBlockSalesContract",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "calculatedFees",
        type: "uint256",
      },
    ],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderExceedsMaxAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderToLargeMax10",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ToManyElementsInBuyArray",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256[][]",
            name: "tokens_",
            type: "uint256[][]",
          },
          {
            internalType: "uint256",
            name: "totalItems_",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer_",
            type: "address",
          },
          {
            internalType: "bool",
            name: "multiBuy_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockSales.Sale",
        name: "payload",
        type: "tuple",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "salesMessageId_",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockSales.SaleRecipe",
        name: "payload",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "SaleMade",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "ETH_CHAIN_SELECTOR",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MATIC_CHAIN_SELECTOR",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NFT",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OP_CHAIN_SELECTOR",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYMENT_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SALES_CONTRACT_CHAIN",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[][]",
        name: "tokenIds_",
        type: "uint256[][]",
      },
    ],
    name: "buyBatchBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "contractAddress_",
        type: "address",
      },
    ],
    name: "setAddressAsAllowed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "flag_",
        type: "bool",
      },
    ],
    name: "setChainAllowed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newSetting_",
        type: "bool",
      },
    ],
    name: "setUseLinkForPaymentFlay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "withdrawBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress_",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e060405260018054600160a01b60ff60a01b1991821681179092556005805490911690911790553480156200003457600080fd5b50604051620023373803806200233783398101604081905262000057916200017c565b338282806001600160a01b0381166200008b576040516335fdcccd60e21b8152600060048201526024015b60405180910390fd5b6001600160a01b03908116608052600080549282166001600160a01b031993841617905560018054938216939092169290921781556004558116620000e757604051631e4fbdf760e01b81526000600482015260240162000082565b620000f2816200010d565b5050506001600160a01b0391821660a0521660c052620001d9565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200017757600080fd5b919050565b600080600080608085870312156200019357600080fd5b6200019e856200015f565b9350620001ae602086016200015f565b9250620001be604086016200015f565b9150620001ce606086016200015f565b905092959194509250565b60805160a05160c0516120cc6200026b60003960008181610310015281816106820152818161076901528181610d000152610de80152600081816102a4015281816105b201528181610836015281816109ea01528181610ad701528181610eca015281816115320152818161168601528181611828015261193d0152600081816103d00152610b4201526120cc6000f3fe6080604052600436106101775760003560e01c80639d7b8e68116100ca578063c007732811610079578063e14c45dd11610056578063e14c45dd14610470578063ebfbaa6b14610454578063f2fde38b1461049057005b8063c007732814610414578063c0a3c42014610434578063d0ffd7a71461045457005b8063af54d669116100a7578063af54d669146103a5578063b0f479a1146103c1578063bfe22a01146103f457005b80639d7b8e6814610350578063a13157ca14610365578063a522ad251461038557005b8063715018a61161012657806385572ffb1161010357806385572ffb146102de578063877c86fb146102fe5780638da5cb5b1461033257005b8063715018a61461025d57806372875c2d146102725780637c0b8de21461029257005b806354b58b1c1161015457806354b58b1c146101f557806368742da6146102155780636cf42b1d1461022857005b806301ffc9a714610180578063028acce4146101b557806322f3e2d4146101d657005b3661017e57005b005b34801561018c57600080fd5b506101a061019b366004611a33565b6104b0565b60405190151581526020015b60405180910390f35b3480156101c157600080fd5b506305f5e1005b6040519081526020016101ac565b3480156101e257600080fd5b50600554600160a01b900460ff166101a0565b34801561020157600080fd5b5061017e610210366004611a64565b610519565b61017e610223366004611a92565b6108fa565b34801561023457600080fd5b5061024467de41ba4fc9d91ad981565b60405167ffffffffffffffff90911681526020016101ac565b34801561026957600080fd5b5061017e6109ae565b34801561027e57600080fd5b5061017e61028d366004611aaf565b6109c2565b34801561029e57600080fd5b506102c67f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101ac565b3480156102ea57600080fd5b5061017e6102f9366004611adb565b610b37565b34801561030a57600080fd5b506102c67f000000000000000000000000000000000000000000000000000000000000000081565b34801561033e57600080fd5b506005546001600160a01b03166102c6565b34801561035c57600080fd5b506006546101c8565b34801561037157600080fd5b5061017e610380366004611b16565b610bac565b34801561039157600080fd5b5061017e6103a0366004611b8b565b611025565b3480156103b157600080fd5b5061024467adecc60412ce25a581565b3480156103cd57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102c6565b34801561040057600080fd5b5061017e61040f366004611bd2565b61114a565b34801561042057600080fd5b5061017e61042f366004611bd2565b61115b565b34801561044057600080fd5b5061017e61044f366004611c0c565b61117d565b34801561046057600080fd5b506102446724f9b897ef58a92281565b34801561047c57600080fd5b5061017e61048b366004611c38565b6111ae565b34801561049c57600080fd5b5061017e6104ab366004611a92565b6111f9565b60006001600160e01b031982167f85572ffb00000000000000000000000000000000000000000000000000000000148061051357506001600160e01b031982167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b61052161124d565b600554600160a01b900460ff166105925760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084015b60405180910390fd5b6040516331a9108f60e11b81526004810182905230906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa1580156105f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061d9190611c54565b6001600160a01b0316146106735760405162461bcd60e51b815260206004820152601360248201527f546f6b656e206e6f7420617661696c61626c65000000000000000000000000006044820152606401610589565b6305f5e1006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156106ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107109190611c71565b1161075d5760405162461bcd60e51b815260206004820152601160248201527f496e636f7272656374207061796d656e740000000000000000000000000000006044820152606401610589565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b0390911660048201523060248201526305f5e10060448201526064016020604051808303816000875af11580156107e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108099190611c8a565b905080156108ec57604080516323b872dd60e01b81523060048201523360248201526044810184905290517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916323b872dd91606480830192600092919082900301818387803b15801561088557600080fd5b505af1158015610899573d6000803e3d6000fd5b5050600680549250905060006108ae83611cbd565b90915550506040516724f9b897ef58a9229060019033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a45b506108f76001600455565b50565b610902611290565b604051479060009081906001600160a01b0385169084908381818185875af1925050503d8060008114610951576040519150601f19603f3d011682016040523d82523d6000602084013e610956565b606091505b5091509150816109a85760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e642045746865720000000000000000000000006044820152606401610589565b50505050565b6109b6611290565b6109c060006112d6565b565b6109ca611290565b6040516331a9108f60e11b81526004810182905230906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa158015610a31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a559190611c54565b6001600160a01b031614610aab5760405162461bcd60e51b815260206004820152601360248201527f546f6b656e206e6f7420617661696c61626c65000000000000000000000000006044820152606401610589565b6040516323b872dd60e01b81523060048201526001600160a01b038381166024830152604482018390527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90606401600060405180830381600087803b158015610b1b57600080fd5b505af1158015610b2f573d6000803e3d6000fd5b505050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b9b576040517fd7f73334000000000000000000000000000000000000000000000000000000008152336004820152602401610589565b6108f7610ba782611e86565b611335565b610bb461124d565b600554600160a01b900460ff16610c205760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b6064820152608401610589565b600080826005811115610c5f576040517f298ebe3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a83108015610c6e57508082105b15610ca857848483818110610c8557610c85611f33565b9050602002810190610c979190611f49565b939093019250600190910190610c5f565b600a831115610ce3576040517f529a187000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610cf3846305f5e100611f9a565b9050806001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610d6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8e9190611c71565b1015610ddc5760405162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742046756e647300000000000000000000000000006044820152606401610589565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303816000875af1158015610e61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e859190611c8a565b905080156110125760005b83811015610fc25760005b888883818110610ead57610ead611f33565b9050602002810190610ebf9190611f49565b9050811015610faf577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd30338c8c87818110610f0b57610f0b611f33565b9050602002810190610f1d9190611f49565b86818110610f2d57610f2d611f33565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b158015610f8457600080fd5b505af1158015610f98573d6000803e3d6000fd5b505050508080610fa790611cbd565b915050610e9b565b5080610fba81611cbd565b915050610e90565b508460066000828254610fd59190611fb1565b90915550506040516724f9b897ef58a92290869033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a45b50505050506110216001600455565b5050565b61102d611290565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561108f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b39190611c71565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018390529192509083169063a9059cbb906044016020604051808303816000875af115801561111f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111439190611c8a565b5050505050565b611152611290565b6108f7816117c8565b611163611290565b6001805460ff60a01b1916600160a01b8315150217905550565b611185611290565b67ffffffffffffffff82166000908152600360205260409020805460ff19168215151790555050565b6111b6611290565b67ffffffffffffffff82166000908152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383161790555050565b611201611290565b6001600160a01b038116611244576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610589565b6108f7816112d6565b600260045403611289576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600455565b6005546001600160a01b031633146109c0576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610589565b600580546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b806020015181604001518060200190518101906113529190611c54565b67ffffffffffffffff821660009081526003602052604090205460ff166113b0576040517e651a9900000000000000000000000000000000000000000000000000000000815267ffffffffffffffff83166004820152602401610589565b67ffffffffffffffff82166000908152600260205260409020546001600160a01b03828116911614611418576040517e0e48e30000000000000000000000000000000000000000000000000000000081526001600160a01b0382166004820152602401610589565b8251602080850151604080516080810182526060808252600094820185905291810184905290810192909252908167ffffffffffffffff16837ff1f456df9618defccc7e2efcf6e0ecba13d5b393128e586fdf16120664b2e36b886040015180602001905181019061148a9190611c54565b84604051611499929190611fc4565b60405180910390a360006114b68260000151836060015115611811565b90508061151f576040517f9518829e00000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4e6f74206f776e657273000000000000000000000000000000000000000000006044820152606401610589565b816060015161164d576001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd30338551805160009061156c5761156c611f33565b602002602001015160008151811061158657611586611f33565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156115e057600080fd5b505af11580156115f4573d6000803e3d6000fd5b50506006805492509050600061160983611cbd565b909155505060405167ffffffffffffffff84169060019033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a46117bf565b815151600090815b8181101561176b5760005b855180518390811061167457611674611f33565b602002602001015151811015611762577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd3033896000015186815181106116cb576116cb611f33565b602002602001015185815181106116e4576116e4611f33565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561173e57600080fd5b505af1158015611752573d6000803e3d6000fd5b5050600190920191506116609050565b50600101611655565b50816006600082825461177e9190611fb1565b909155505060405167ffffffffffffffff861690839033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a450505b50505050505050565b6005805460ff60a01b1916600160a01b831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b81516000908215611a2957306001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636352211e8660008151811061186857611868611f33565b602002602001015160008151811061188257611882611f33565b60200260200101516040518263ffffffff1660e01b81526004016118a891815260200190565b602060405180830381865afa1580156118c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e99190611c54565b6001600160a01b031614611901576000915050610513565b60005b81811015611a275760005b85828151811061192157611921611f33565b602002602001015151811015611a1e57306001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636352211e88858151811061197c5761197c611f33565b6020026020010151848151811061199557611995611f33565b60200260200101516040518263ffffffff1660e01b81526004016119bb91815260200190565b602060405180830381865afa1580156119d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119fc9190611c54565b6001600160a01b031614611a165760009350505050610513565b60010161190f565b50600101611904565b505b5060019392505050565b600060208284031215611a4557600080fd5b81356001600160e01b031981168114611a5d57600080fd5b9392505050565b600060208284031215611a7657600080fd5b5035919050565b6001600160a01b03811681146108f757600080fd5b600060208284031215611aa457600080fd5b8135611a5d81611a7d565b60008060408385031215611ac257600080fd5b8235611acd81611a7d565b946020939093013593505050565b600060208284031215611aed57600080fd5b813567ffffffffffffffff811115611b0457600080fd5b820160a08185031215611a5d57600080fd5b60008060208385031215611b2957600080fd5b823567ffffffffffffffff80821115611b4157600080fd5b818501915085601f830112611b5557600080fd5b813581811115611b6457600080fd5b8660208260051b8501011115611b7957600080fd5b60209290920196919550909350505050565b60008060408385031215611b9e57600080fd5b8235611ba981611a7d565b91506020830135611bb981611a7d565b809150509250929050565b80151581146108f757600080fd5b600060208284031215611be457600080fd5b8135611a5d81611bc4565b803567ffffffffffffffff81168114611c0757600080fd5b919050565b60008060408385031215611c1f57600080fd5b611c2883611bef565b91506020830135611bb981611bc4565b60008060408385031215611c4b57600080fd5b611ba983611bef565b600060208284031215611c6657600080fd5b8151611a5d81611a7d565b600060208284031215611c8357600080fd5b5051919050565b600060208284031215611c9c57600080fd5b8151611a5d81611bc4565b634e487b7160e01b600052601160045260246000fd5b600060018201611ccf57611ccf611ca7565b5060010190565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611d0f57611d0f611cd6565b60405290565b60405160a0810167ffffffffffffffff81118282101715611d0f57611d0f611cd6565b604051601f8201601f1916810167ffffffffffffffff81118282101715611d6157611d61611cd6565b604052919050565b600082601f830112611d7a57600080fd5b813567ffffffffffffffff811115611d9457611d94611cd6565b611da7601f8201601f1916602001611d38565b818152846020838601011115611dbc57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112611dea57600080fd5b8135602067ffffffffffffffff821115611e0657611e06611cd6565b611e14818360051b01611d38565b82815260069290921b84018101918181019086841115611e3357600080fd5b8286015b84811015611e7b5760408189031215611e505760008081fd5b611e58611cec565b8135611e6381611a7d565b81528185013585820152835291830191604001611e37565b509695505050505050565b600060a08236031215611e9857600080fd5b611ea0611d15565b82358152611eb060208401611bef565b6020820152604083013567ffffffffffffffff80821115611ed057600080fd5b611edc36838701611d69565b60408401526060850135915080821115611ef557600080fd5b611f0136838701611d69565b60608401526080850135915080821115611f1a57600080fd5b50611f2736828601611dd9565b60808301525092915050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611f6057600080fd5b83018035915067ffffffffffffffff821115611f7b57600080fd5b6020019150600581901b3603821315611f9357600080fd5b9250929050565b808202811582820484141761051357610513611ca7565b8082018082111561051357610513611ca7565b6001600160a01b03831681526000602060408184015260c0830184516080604086015281815180845260e08701915060e08160051b880101935084830192506000805b8281101561205b5788860360df19018452845180518088529088019088880190845b818110156120455783518352928a0192918a0191600101612029565b5090975050509386019392860192600101612007565b5050505091850151606085015260408501516001600160a01b03811660808601529150606085015180151560a086015291509594505050505056fea2646970667358221220e73322ccb7d0d909ae414865178759fdc031a53b7b8f264d8e78a572c4a9161f64736f6c63430008140033";

type BlockSalesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockSalesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockSales__factory extends ContractFactory {
  constructor(...args: BlockSalesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    NFTAddress_: AddressLike,
    paymentToken_: AddressLike,
    ccipRouter_: AddressLike,
    linkToken_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      NFTAddress_,
      paymentToken_,
      ccipRouter_,
      linkToken_,
      overrides || {}
    );
  }
  override deploy(
    NFTAddress_: AddressLike,
    paymentToken_: AddressLike,
    ccipRouter_: AddressLike,
    linkToken_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      NFTAddress_,
      paymentToken_,
      ccipRouter_,
      linkToken_,
      overrides || {}
    ) as Promise<
      BlockSales & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlockSales__factory {
    return super.connect(runner) as BlockSales__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockSalesInterface {
    return new Interface(_abi) as BlockSalesInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BlockSales {
    return new Contract(address, _abi, runner) as unknown as BlockSales;
  }
}
