/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BlockSales,
  BlockSalesInterface,
} from "../../../contracts/shop/BlockSales";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "NFTAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "paymentToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ccipRouter_",
        type: "address",
      },
      {
        internalType: "address",
        name: "linkToken_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "note_",
        type: "string",
      },
    ],
    name: "DEVELOPMENT_ERROR",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractTringToMessage_",
        type: "address",
      },
    ],
    name: "MessageNotFromBlockSales",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainMessageOriginated",
        type: "uint64",
      },
    ],
    name: "MessageNotFromSalesChain",
    type: "error",
  },
  {
    inputs: [],
    name: "NotBlockSalesContract",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "calculatedFees",
        type: "uint256",
      },
    ],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderExceedsMaxAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderToLargeMax10",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ToManyElementsInBuyArray",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256[][]",
            name: "tokens_",
            type: "uint256[][]",
          },
          {
            internalType: "uint256",
            name: "totalItems_",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer_",
            type: "address",
          },
          {
            internalType: "bool",
            name: "multiBuy_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockSales.Sale",
        name: "payload",
        type: "tuple",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId_",
        type: "bytes32",
      },
    ],
    name: "SaleFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "SaleMade",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "NFT",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYMENT_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[][]",
        name: "tokenIds_",
        type: "uint256[][]",
      },
    ],
    name: "buyBatchBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "getChainBlockStore",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "contractAddress_",
        type: "address",
      },
    ],
    name: "setBlockStore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "flag_",
        type: "bool",
      },
    ],
    name: "setBlockStoreActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "testSendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllToDev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "withdrawBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e06040526001805460ff60a01b1916600160a01b1790553480156200002457600080fd5b5060405162002c3638038062002c36833981016040819052620000479162000168565b33826001600160a01b03811662000079576040516335fdcccd60e21b8152600060048201526024015b60405180910390fd5b6001600160a01b0390811660805260016000558116620000b057604051631e4fbdf760e01b81526000600482015260240162000070565b620000bb81620000f9565b50600280546001600160a01b03199081166001600160a01b039485161790915593821660a05291811660c052600380549093169116179055620001c5565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200016357600080fd5b919050565b600080600080608085870312156200017f57600080fd5b6200018a856200014b565b93506200019a602086016200014b565b9250620001aa604086016200014b565b9150620001ba606086016200014b565b905092959194509250565b60805160a05160c0516129d86200025e600039600081816102e50152818161098701528181610a6e01528181610f270152818161100f0152611441015260008181610279015281816104b40152818161059f015281816108b701528181610b3b015281816110f1015281816117d2015281816118d301528181611a8e0152611efe01526000818161039e0152610c1e01526129d86000f3fe60806040526004361061016c5760003560e01c80638b8fb480116100ca578063bfac0b4611610079578063e8a6b60f11610056578063e8a6b60f14610442578063f2fde38b14610457578063fcb52e631461047757005b8063bfac0b46146103c2578063bfe22a01146103e2578063d2aac3b71461040257005b80639d7b8e68116100a75780639d7b8e681461035a578063a13157ca1461036f578063b0f479a11461038f57005b80638b8fb480146103075780638da5cb5b146103275780638dc654a21461034557005b806349df728c116101265780637c0b8de2116101035780637c0b8de21461026757806385572ffb146102b3578063877c86fb146102d357005b806349df728c1461021257806354b58b1c14610232578063715018a61461025257005b8063028acce411610154578063028acce4146101ca57806322f3e2d4146101eb57806324600fc31461020a57005b8063019554fd1461017557806301ffc9a71461019557005b3661017357005b005b34801561018157600080fd5b5061017361019036600461217d565b61048c565b3480156101a157600080fd5b506101b56101b0366004612196565b610609565b60405190151581526020015b60405180910390f35b3480156101d657600080fd5b506305f5e1005b6040519081526020016101c1565b3480156101f757600080fd5b50600154600160a01b900460ff166101b5565b610173610672565b34801561021e57600080fd5b5061017361022d3660046121dc565b610725565b34801561023e57600080fd5b5061017361024d36600461217d565b610823565b34801561025e57600080fd5b50610173610bff565b34801561027357600080fd5b5061029b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101c1565b3480156102bf57600080fd5b506101736102ce3660046121f9565b610c13565b3480156102df57600080fd5b5061029b7f000000000000000000000000000000000000000000000000000000000000000081565b34801561031357600080fd5b50610173610322366004612251565b610c88565b34801561033357600080fd5b506001546001600160a01b031661029b565b34801561035157600080fd5b50610173610cd7565b34801561036657600080fd5b506006546101dd565b34801561037b57600080fd5b5061017361038a366004612288565b610dd3565b34801561039b57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061029b565b3480156103ce57600080fd5b506101736103dd36600461230b565b61124c565b3480156103ee57600080fd5b506101736103fd366004612337565b611280565b34801561040e57600080fd5b5061029b61041d366004612354565b67ffffffffffffffff166000908152600460205260409020546001600160a01b031690565b34801561044e57600080fd5b50610173611291565b34801561046357600080fd5b506101736104723660046121dc565b611546565b34801561048357600080fd5b5061017361159a565b6104946115cc565b6040516331a9108f60e11b81526004810182905230906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa1580156104fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051f919061237a565b6001600160a01b03161461057a5760405162461bcd60e51b815260206004820152601360248201527f546f6b656e206e6f7420617661696c61626c650000000000000000000000000060448201526064015b60405180910390fd5b604080516323b872dd60e01b81523060048201523360248201526044810183905290517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916323b872dd91606480830192600092919082900301818387803b1580156105ee57600080fd5b505af1158015610602573d6000803e3d6000fd5b5050505050565b60006001600160e01b031982167f85572ffb00000000000000000000000000000000000000000000000000000000148061066c57506001600160e01b031982167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b61067a6115cc565b47600080336001600160a01b03168360405160006040518083038185875af1925050503d80600081146106c9576040519150601f19603f3d011682016040523d82523d6000602084013e6106ce565b606091505b5091509150816107205760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e642045746865720000000000000000000000006044820152606401610571565b505050565b61072d6115cc565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610776573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079a9190612397565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156107f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081d91906123bb565b50505050565b61082b611612565b600154600160a01b900460ff166108975760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b6064820152608401610571565b6040516331a9108f60e11b81526004810182905230906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa1580156108fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610922919061237a565b6001600160a01b0316146109785760405162461bcd60e51b815260206004820152601360248201527f546f6b656e206e6f7420617661696c61626c65000000000000000000000000006044820152606401610571565b6305f5e1006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156109f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a159190612397565b11610a625760405162461bcd60e51b815260206004820152601160248201527f496e636f7272656374207061796d656e740000000000000000000000000000006044820152606401610571565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b0390911660048201523060248201526305f5e10060448201526064016020604051808303816000875af1158015610aea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0e91906123bb565b90508015610bf157604080516323b872dd60e01b81523060048201523360248201526044810184905290517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916323b872dd91606480830192600092919082900301818387803b158015610b8a57600080fd5b505af1158015610b9e573d6000803e3d6000fd5b505060068054925090506000610bb3836123ee565b90915550506040516724f9b897ef58a9229060019033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a45b50610bfc6001600055565b50565b610c076115cc565b610c116000611655565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c77576040517fd7f73334000000000000000000000000000000000000000000000000000000008152336004820152602401610571565b610bfc610c83826125e9565b6116b4565b610c906115cc565b67ffffffffffffffff919091166000908152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b610cdf6115cc565b6003546040516370a0823160e01b81523060048201526001600160a01b039091169060009082906370a0823190602401602060405180830381865afa158015610d2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d509190612397565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610daf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072091906123bb565b610ddb611612565b600154600160a01b900460ff16610e475760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b6064820152608401610571565b600080826005811115610e86576040517f298ebe3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a83108015610e9557508082105b15610ecf57848483818110610eac57610eac612696565b9050602002810190610ebe91906126ac565b939093019250600190910190610e86565b600a831115610f0a576040517f529a187000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610f1a846305f5e1006126fd565b9050806001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610f91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb59190612397565b10156110035760405162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742046756e647300000000000000000000000000006044820152606401610571565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303816000875af1158015611088573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ac91906123bb565b905080156112395760005b838110156111e95760005b8888838181106110d4576110d4612696565b90506020028101906110e691906126ac565b90508110156111d6577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd30338c8c8781811061113257611132612696565b905060200281019061114491906126ac565b8681811061115457611154612696565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b1580156111ab57600080fd5b505af11580156111bf573d6000803e3d6000fd5b5050505080806111ce906123ee565b9150506110c2565b50806111e1816123ee565b9150506110b7565b5084600660008282546111fc9190612714565b90915550506040516724f9b897ef58a92290869033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a45b50505050506112486001600055565b5050565b6112546115cc565b67ffffffffffffffff919091166000908152600560205260409020805460ff1916911515919091179055565b6112886115cc565b610bfc81611be4565b6003546040516370a0823160e01b81523060048201526001600160a01b039091169060009082906370a0823190602401602060405180830381865afa1580156112de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113029190612397565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015611361573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138591906123bb565b5047600080336001600160a01b03168360405160006040518083038185875af1925050503d80600081146113d5576040519150601f19603f3d011682016040523d82523d6000602084013e6113da565b606091505b50915091508161142c5760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e642045746865720000000000000000000000006044820152606401610571565b6040516370a0823160e01b81523060048201527f0000000000000000000000000000000000000000000000000000000000000000906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611495573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b99190612397565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015611518573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153c91906123bb565b5050505050505050565b61154e6115cc565b6001600160a01b038116611591576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610571565b610bfc81611655565b6115a26115cc565b60408051808201909152600080825260016020830152906107208167adecc60412ce25a584611c48565b6001546001600160a01b03163314610c11576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610571565b60026000540361164e576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600055565b600180546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b806020015181604001518060200190518101906116d1919061237a565b67ffffffffffffffff821660009081526005602052604090205460ff1661172f576040517e651a9900000000000000000000000000000000000000000000000000000000815267ffffffffffffffff83166004820152602401610571565b67ffffffffffffffff82166000908152600460205260409020546001600160a01b03828116911614611797576040517e0e48e30000000000000000000000000000000000000000000000000000000081526001600160a01b0382166004820152602401610571565b82516020808501516060860151805191926000926117bb9290810182019101612727565b90508060600151611a0b57306001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636352211e836000015160008151811061181657611816612696565b602002602001015160008151811061183057611830612696565b60200260200101516040518263ffffffff1660e01b815260040161185691815260200190565b602060405180830381865afa158015611873573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611897919061237a565b6001600160a01b0316146118d1576118cb604051806040016040528085815260200160011515815250838360400151611c48565b50611bdc565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd308360400151846000015160008151811061191d5761191d612696565b602002602001015160008151811061193757611937612696565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561199157600080fd5b505af11580156119a5573d6000803e3d6000fd5b5050600680549250905060006119ba836123ee565b91905055508167ffffffffffffffff16600182604001516001600160a01b03167f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad260405160405180910390a4611bdc565b6000611a1a8260000151611ec0565b905080611a4d57611a47604051806040016040528086815260200160001515815250848460400151611c48565b50611bda565b815151600090815b81811015611b775760005b8551805183908110611a7457611a74612696565b602002602001015151811015611b6e5783806001019450507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd30886040015189600001518681518110611ad757611ad7612696565b60200260200101518581518110611af057611af0612696565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015611b4a57600080fd5b505af1158015611b5e573d6000803e3d6000fd5b505060019092019150611a609050565b50600101611a55565b508160066000828254611b8a9190612714565b925050819055508467ffffffffffffffff168285604001516001600160a01b03167f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad260405160405180910390a450505b505b505050505050565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b67ffffffffffffffff82166000908152600460205260408120548190611c78906001600160a01b03168683611fef565b90506000306001600160a01b031663b0f479a16040518163ffffffff1660e01b8152600401602060405180830381865afa158015611cba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cde919061237a565b90506000816001600160a01b03166320487ded87856040518363ffffffff1660e01b8152600401611d109291906128c8565b602060405180830381865afa158015611d2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d519190612397565b905047811115611d96576040517f8f0f420600000000000000000000000000000000000000000000000000000000815247600482015260248101829052604401610571565b6040517f96f4e9f90000000000000000000000000000000000000000000000000000000081526001600160a01b038316906396f4e9f9908390611ddf908a9088906004016128c8565b60206040518083038185885af1158015611dfd573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611e229190612397565b93508567ffffffffffffffff167fe119db35c2c014ed62b05ba53a4495bb3f61e64f7711d1f90f9f969bedeeeeae8860000151604051611e6491815260200190565b60405180910390a26040516001600160a01b038616815267ffffffffffffffff87169085907fd6b7de0a75c28230ed0cecf9a5f80bfd2c81047a14fc87f1b1203d7491c11e239060200160405180910390a35050509392505050565b6000805b8251811015611fe65760005b838281518110611ee257611ee2612696565b602002602001015151811015611fdd57306001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636352211e868581518110611f3d57611f3d612696565b60200260200101518481518110611f5657611f56612696565b60200260200101516040518263ffffffff1660e01b8152600401611f7c91815260200190565b602060405180830381865afa158015611f99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fbd919061237a565b6001600160a01b031614611fd5575060009392505050565b600101611ed0565b50600101611ec4565b50600192915050565b61202a6040518060a0016040528060608152602001606081526020016060815260200160006001600160a01b03168152602001606081525090565b6040805160a081019091526001600160a01b03851660c08201528060e0810160405160208183030381529060405281526020018460405160200161208291908151815260209182015115159181019190915260400190565b60408051601f19818403018152919052815260200160006040519080825280602002602001820160405280156120de57816020015b60408051808201909152600080825260208201528152602001906001900390816120b75790505b508152602001836001600160a01b0316815260200161217360405180602001604052806207a12081525060408051915160248084019190915281518084039091018152604490920190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f97a657c90000000000000000000000000000000000000000000000000000000017905290565b9052949350505050565b60006020828403121561218f57600080fd5b5035919050565b6000602082840312156121a857600080fd5b81356001600160e01b0319811681146121c057600080fd5b9392505050565b6001600160a01b0381168114610bfc57600080fd5b6000602082840312156121ee57600080fd5b81356121c0816121c7565b60006020828403121561220b57600080fd5b813567ffffffffffffffff81111561222257600080fd5b820160a081850312156121c057600080fd5b803567ffffffffffffffff8116811461224c57600080fd5b919050565b6000806040838503121561226457600080fd5b61226d83612234565b9150602083013561227d816121c7565b809150509250929050565b6000806020838503121561229b57600080fd5b823567ffffffffffffffff808211156122b357600080fd5b818501915085601f8301126122c757600080fd5b8135818111156122d657600080fd5b8660208260051b85010111156122eb57600080fd5b60209290920196919550909350505050565b8015158114610bfc57600080fd5b6000806040838503121561231e57600080fd5b61232783612234565b9150602083013561227d816122fd565b60006020828403121561234957600080fd5b81356121c0816122fd565b60006020828403121561236657600080fd5b6121c082612234565b805161224c816121c7565b60006020828403121561238c57600080fd5b81516121c0816121c7565b6000602082840312156123a957600080fd5b5051919050565b805161224c816122fd565b6000602082840312156123cd57600080fd5b81516121c0816122fd565b634e487b7160e01b600052601160045260246000fd5b600060018201612400576124006123d8565b5060010190565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561244057612440612407565b60405290565b60405160a0810167ffffffffffffffff8111828210171561244057612440612407565b6040516080810167ffffffffffffffff8111828210171561244057612440612407565b604051601f8201601f1916810167ffffffffffffffff811182821017156124b5576124b5612407565b604052919050565b600082601f8301126124ce57600080fd5b813567ffffffffffffffff8111156124e8576124e8612407565b6124fb601f8201601f191660200161248c565b81815284602083860101111561251057600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff82111561254757612547612407565b5060051b60200190565b600082601f83011261256257600080fd5b813560206125776125728361252d565b61248c565b82815260069290921b8401810191818101908684111561259657600080fd5b8286015b848110156125de57604081890312156125b35760008081fd5b6125bb61241d565b81356125c6816121c7565b8152818501358582015283529183019160400161259a565b509695505050505050565b600060a082360312156125fb57600080fd5b612603612446565b8235815261261360208401612234565b6020820152604083013567ffffffffffffffff8082111561263357600080fd5b61263f368387016124bd565b6040840152606085013591508082111561265857600080fd5b612664368387016124bd565b6060840152608085013591508082111561267d57600080fd5b5061268a36828601612551565b60808301525092915050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126126c357600080fd5b83018035915067ffffffffffffffff8211156126de57600080fd5b6020019150600581901b36038213156126f657600080fd5b9250929050565b808202811582820484141761066c5761066c6123d8565b8082018082111561066c5761066c6123d8565b6000602080838503121561273a57600080fd5b825167ffffffffffffffff8082111561275257600080fd5b908401906080828703121561276657600080fd5b61276e612469565b82518281111561277d57600080fd5b8301601f8101881361278e57600080fd5b805161279c6125728261252d565b81815260059190911b8201860190868101908a8311156127bb57600080fd5b8784015b83811015612848578051878111156127d657600080fd5b8501603f81018d136127e757600080fd5b898101516127f76125728261252d565b81815260059190911b8201604001908b8101908f8311156128185760008081fd5b6040840193505b828410156128385783518252928c0192908c019061281f565b86525050509188019188016127bf565b50845250505082840151848201526128626040840161236f565b6040820152612873606084016123b0565b60608201529695505050505050565b6000815180845260005b818110156128a85760208185018101518683018201520161288c565b506000602082860101526020601f19601f83011685010191505092915050565b6000604067ffffffffffffffff8516835260208181850152845160a0838601526128f560e0860182612882565b905081860151603f19808784030160608801526129128383612882565b88860151888203830160808a01528051808352908601945060009350908501905b8084101561296557845180516001600160a01b0316835286015186830152938501936001939093019290860190612933565b5060608901516001600160a01b031660a08901526080890151888203830160c08a015295506129948187612882565b9a995050505050505050505056fea2646970667358221220d060bbc2b5fae2fca7b4aa6c1130ce05a00470a51f8a535ec2a330c4ef738a9b64736f6c63430008140033";

type BlockSalesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockSalesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockSales__factory extends ContractFactory {
  constructor(...args: BlockSalesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    NFTAddress_: AddressLike,
    paymentToken_: AddressLike,
    ccipRouter_: AddressLike,
    linkToken_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      NFTAddress_,
      paymentToken_,
      ccipRouter_,
      linkToken_,
      overrides || {}
    );
  }
  override deploy(
    NFTAddress_: AddressLike,
    paymentToken_: AddressLike,
    ccipRouter_: AddressLike,
    linkToken_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      NFTAddress_,
      paymentToken_,
      ccipRouter_,
      linkToken_,
      overrides || {}
    ) as Promise<
      BlockSales & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlockSales__factory {
    return super.connect(runner) as BlockSales__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockSalesInterface {
    return new Interface(_abi) as BlockSalesInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BlockSales {
    return new Contract(address, _abi, runner) as unknown as BlockSales;
  }
}
