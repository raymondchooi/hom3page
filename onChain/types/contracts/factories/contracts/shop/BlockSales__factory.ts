/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BlockSales,
  BlockSalesInterface,
} from "../../../contracts/shop/BlockSales";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "NFTAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "paymentToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ccipRouter_",
        type: "address",
      },
      {
        internalType: "address",
        name: "linkToken_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "note_",
        type: "string",
      },
    ],
    name: "DEVELOPMENT_ERROR",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractTringToMessage_",
        type: "address",
      },
    ],
    name: "MessageNotFromBlockSales",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainMessageOriginated",
        type: "uint64",
      },
    ],
    name: "MessageNotFromSalesChain",
    type: "error",
  },
  {
    inputs: [],
    name: "NotBlockSalesContract",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "calculatedFees",
        type: "uint256",
      },
    ],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderExceedsMaxAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderToLargeMax10",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ToManyElementsInBuyArray",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256[][]",
            name: "tokens_",
            type: "uint256[][]",
          },
          {
            internalType: "uint256",
            name: "totalItems_",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer_",
            type: "address",
          },
          {
            internalType: "bool",
            name: "multiBuy_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockSales.Sale",
        name: "payload",
        type: "tuple",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "salesMessageId_",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "failed",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockSales.SaleRecipe",
        name: "payload",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "SaleMade",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "NFT",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYMENT_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[][]",
        name: "tokenIds_",
        type: "uint256[][]",
      },
    ],
    name: "buyBatchBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "getChainBlockStore",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "contractAddress_",
        type: "address",
      },
    ],
    name: "setBlockStore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "flag_",
        type: "bool",
      },
    ],
    name: "setBlockStoreActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "withdrawBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e06040526001805460ff60a01b1916600160a01b1790553480156200002457600080fd5b506040516200293238038062002932833981016040819052620000479162000168565b33826001600160a01b03811662000079576040516335fdcccd60e21b8152600060048201526024015b60405180910390fd5b6001600160a01b0390811660805260016000558116620000b057604051631e4fbdf760e01b81526000600482015260240162000070565b620000bb81620000f9565b50600280546001600160a01b03199081166001600160a01b039485161790915593821660a05291811660c052600380549093169116179055620001c5565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200016357600080fd5b919050565b600080600080608085870312156200017f57600080fd5b6200018a856200014b565b93506200019a602086016200014b565b9250620001aa604086016200014b565b9150620001ba606086016200014b565b905092959194509250565b60805160a05160c0516126db62000257600039600081816102cf0152818161094701528181610a2e01528181610ee70152610fcf015260008181610263015281816104740152818161055f0152818161087701528181610afb015281816110b1015281816114ab015281816115a4015281816117730152611bbe0152600081816103880152610bde01526126db6000f3fe6080604052600436106101565760003560e01c8063877c86fb116100bf578063a13157ca11610079578063bfe22a0111610056578063bfe22a01146103cc578063d2aac3b7146103ec578063f2fde38b1461042c57005b8063a13157ca14610359578063b0f479a114610379578063bfac0b46146103ac57005b80638da5cb5b116100a75780638da5cb5b146103115780638dc654a21461032f5780639d7b8e681461034457005b8063877c86fb146102bd5780638b8fb480146102f157005b806349df728c11610110578063715018a6116100f8578063715018a61461023c5780637c0b8de21461025157806385572ffb1461029d57005b806349df728c146101fc57806354b58b1c1461021c57005b8063028acce41161013e578063028acce4146101b457806322f3e2d4146101d557806324600fc3146101f457005b8063019554fd1461015f57806301ffc9a71461017f57005b3661015d57005b005b34801561016b57600080fd5b5061015d61017a366004611e29565b61044c565b34801561018b57600080fd5b5061019f61019a366004611e42565b6105c9565b60405190151581526020015b60405180910390f35b3480156101c057600080fd5b506305f5e1005b6040519081526020016101ab565b3480156101e157600080fd5b50600154600160a01b900460ff1661019f565b61015d610632565b34801561020857600080fd5b5061015d610217366004611e88565b6106e5565b34801561022857600080fd5b5061015d610237366004611e29565b6107e3565b34801561024857600080fd5b5061015d610bbf565b34801561025d57600080fd5b506102857f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101ab565b3480156102a957600080fd5b5061015d6102b8366004611ea5565b610bd3565b3480156102c957600080fd5b506102857f000000000000000000000000000000000000000000000000000000000000000081565b3480156102fd57600080fd5b5061015d61030c366004611efd565b610c48565b34801561031d57600080fd5b506001546001600160a01b0316610285565b34801561033b57600080fd5b5061015d610c97565b34801561035057600080fd5b506006546101c7565b34801561036557600080fd5b5061015d610374366004611f34565b610d93565b34801561038557600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610285565b3480156103b857600080fd5b5061015d6103c7366004611fb7565b61120c565b3480156103d857600080fd5b5061015d6103e7366004611fe3565b611240565b3480156103f857600080fd5b50610285610407366004612000565b67ffffffffffffffff166000908152600460205260409020546001600160a01b031690565b34801561043857600080fd5b5061015d610447366004611e88565b611251565b6104546112a5565b6040516331a9108f60e11b81526004810182905230906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa1580156104bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104df9190612026565b6001600160a01b03161461053a5760405162461bcd60e51b815260206004820152601360248201527f546f6b656e206e6f7420617661696c61626c650000000000000000000000000060448201526064015b60405180910390fd5b604080516323b872dd60e01b81523060048201523360248201526044810183905290517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916323b872dd91606480830192600092919082900301818387803b1580156105ae57600080fd5b505af11580156105c2573d6000803e3d6000fd5b5050505050565b60006001600160e01b031982167f85572ffb00000000000000000000000000000000000000000000000000000000148061062c57506001600160e01b031982167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b61063a6112a5565b47600080336001600160a01b03168360405160006040518083038185875af1925050503d8060008114610689576040519150601f19603f3d011682016040523d82523d6000602084013e61068e565b606091505b5091509150816106e05760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e642045746865720000000000000000000000006044820152606401610531565b505050565b6106ed6112a5565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075a9190612043565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156107b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107dd9190612067565b50505050565b6107eb6112eb565b600154600160a01b900460ff166108575760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b6064820152608401610531565b6040516331a9108f60e11b81526004810182905230906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa1580156108be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e29190612026565b6001600160a01b0316146109385760405162461bcd60e51b815260206004820152601360248201527f546f6b656e206e6f7420617661696c61626c65000000000000000000000000006044820152606401610531565b6305f5e1006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156109b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d59190612043565b11610a225760405162461bcd60e51b815260206004820152601160248201527f496e636f7272656374207061796d656e740000000000000000000000000000006044820152606401610531565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b0390911660048201523060248201526305f5e10060448201526064016020604051808303816000875af1158015610aaa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ace9190612067565b90508015610bb157604080516323b872dd60e01b81523060048201523360248201526044810184905290517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916323b872dd91606480830192600092919082900301818387803b158015610b4a57600080fd5b505af1158015610b5e573d6000803e3d6000fd5b505060068054925090506000610b738361209a565b90915550506040516724f9b897ef58a9229060019033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a45b50610bbc6001600055565b50565b610bc76112a5565b610bd1600061132e565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c37576040517fd7f73334000000000000000000000000000000000000000000000000000000008152336004820152602401610531565b610bbc610c4382612295565b61138d565b610c506112a5565b67ffffffffffffffff919091166000908152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b610c9f6112a5565b6003546040516370a0823160e01b81523060048201526001600160a01b039091169060009082906370a0823190602401602060405180830381865afa158015610cec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d109190612043565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610d6f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e09190612067565b610d9b6112eb565b600154600160a01b900460ff16610e075760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b6064820152608401610531565b600080826005811115610e46576040517f298ebe3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a83108015610e5557508082105b15610e8f57848483818110610e6c57610e6c612342565b9050602002810190610e7e9190612358565b939093019250600190910190610e46565b600a831115610eca576040517f529a187000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610eda846305f5e1006123a9565b9050806001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610f51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f759190612043565b1015610fc35760405162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742046756e647300000000000000000000000000006044820152606401610531565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303816000875af1158015611048573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106c9190612067565b905080156111f95760005b838110156111a95760005b88888381811061109457611094612342565b90506020028101906110a69190612358565b9050811015611196577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd30338c8c878181106110f2576110f2612342565b90506020028101906111049190612358565b8681811061111457611114612342565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b15801561116b57600080fd5b505af115801561117f573d6000803e3d6000fd5b50505050808061118e9061209a565b915050611082565b50806111a18161209a565b915050611077565b5084600660008282546111bc91906123c0565b90915550506040516724f9b897ef58a92290869033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a45b50505050506112086001600055565b5050565b6112146112a5565b67ffffffffffffffff919091166000908152600560205260409020805460ff1916911515919091179055565b6112486112a5565b610bbc816118c9565b6112596112a5565b6001600160a01b03811661129c576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610531565b610bbc8161132e565b6001546001600160a01b03163314610bd1576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610531565b600260005403611327576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600055565b600180546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b806020015181604001518060200190518101906113aa9190612026565b67ffffffffffffffff821660009081526005602052604090205460ff16611408576040517e651a9900000000000000000000000000000000000000000000000000000000815267ffffffffffffffff83166004820152602401610531565b67ffffffffffffffff82166000908152600460205260409020546001600160a01b03828116911614611470576040517e0e48e30000000000000000000000000000000000000000000000000000000081526001600160a01b0382166004820152602401610531565b825160208085015160608601518051919260009261149492908101820191016123d3565b905080606001516116dc57306001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636352211e83600001516000815181106114ef576114ef612342565b602002602001015160008151811061150957611509612342565b60200260200101516040518263ffffffff1660e01b815260040161152f91815260200190565b602060405180830381865afa15801561154c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115709190612026565b6001600160a01b0316146115a257604080518082019091528381526001602082015261159c908361192d565b506118c1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd30836040015184600001516000815181106115ee576115ee612342565b602002602001015160008151811061160857611608612342565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561166257600080fd5b505af1158015611676573d6000803e3d6000fd5b50506006805492509050600061168b8361209a565b91905055508167ffffffffffffffff16600182604001516001600160a01b03167f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad260405160405180910390a46118c1565b60006116eb8260000151611b80565b90508267ffffffffffffffff16600083604001516001600160a01b03167f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad260405160405180910390a480156118bf57815151600090815b8181101561185c5760005b855180518390811061176157611761612342565b602002602001015151811015611853577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd308860400151896000015186815181106117bc576117bc612342565b602002602001015185815181106117d5576117d5612342565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561182f57600080fd5b505af1158015611843573d6000803e3d6000fd5b50506001909201915061174d9050565b50600101611742565b50816006600082825461186f91906123c0565b925050819055508467ffffffffffffffff168285604001516001600160a01b03167f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad260405160405180910390a450505b505b505050505050565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b60006119376112a5565b67ffffffffffffffff8216600090815260046020526040812054611965906001600160a01b03168583611caf565b90506000306001600160a01b031663b0f479a16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119cb9190612026565b90506000816001600160a01b03166320487ded86856040518363ffffffff1660e01b81526004016119fd929190612574565b602060405180830381865afa158015611a1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3e9190612043565b905047811115611a83576040517f8f0f420600000000000000000000000000000000000000000000000000000000815247600482015260248101829052604401610531565b6040517f96f4e9f90000000000000000000000000000000000000000000000000000000081526001600160a01b038316906396f4e9f9908390611acc9089908890600401612574565b60206040518083038185885af1158015611aea573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611b0f9190612043565b67ffffffffffffffff8616600081815260046020526040808220549051939750919287927fe21ea937211610be148d84223ba82bdcdf532975fd2321b9374f5419bae4307192611b6f926001600160a01b03909216918c9190889061264e565b60405180910390a350505092915050565b6000805b8251811015611ca65760005b838281518110611ba257611ba2612342565b602002602001015151811015611c9d57306001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636352211e868581518110611bfd57611bfd612342565b60200260200101518481518110611c1657611c16612342565b60200260200101516040518263ffffffff1660e01b8152600401611c3c91815260200190565b602060405180830381865afa158015611c59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c7d9190612026565b6001600160a01b031614611c95575060009392505050565b600101611b90565b50600101611b84565b50600192915050565b611cea6040518060a0016040528060608152602001606081526020016060815260200160006001600160a01b03168152602001606081525090565b6040805160a081019091526001600160a01b03851660c08201528060e08101604051602081830303815290604052815260200184604051602001611d2e919061268c565b60408051601f1981840301815291905281526020016000604051908082528060200260200182016040528015611d8a57816020015b6040805180820190915260008082526020820152815260200190600190039081611d635790505b508152602001836001600160a01b03168152602001611e1f60405180602001604052806207a12081525060408051915160248084019190915281518084039091018152604490920190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f97a657c90000000000000000000000000000000000000000000000000000000017905290565b9052949350505050565b600060208284031215611e3b57600080fd5b5035919050565b600060208284031215611e5457600080fd5b81356001600160e01b031981168114611e6c57600080fd5b9392505050565b6001600160a01b0381168114610bbc57600080fd5b600060208284031215611e9a57600080fd5b8135611e6c81611e73565b600060208284031215611eb757600080fd5b813567ffffffffffffffff811115611ece57600080fd5b820160a08185031215611e6c57600080fd5b803567ffffffffffffffff81168114611ef857600080fd5b919050565b60008060408385031215611f1057600080fd5b611f1983611ee0565b91506020830135611f2981611e73565b809150509250929050565b60008060208385031215611f4757600080fd5b823567ffffffffffffffff80821115611f5f57600080fd5b818501915085601f830112611f7357600080fd5b813581811115611f8257600080fd5b8660208260051b8501011115611f9757600080fd5b60209290920196919550909350505050565b8015158114610bbc57600080fd5b60008060408385031215611fca57600080fd5b611fd383611ee0565b91506020830135611f2981611fa9565b600060208284031215611ff557600080fd5b8135611e6c81611fa9565b60006020828403121561201257600080fd5b611e6c82611ee0565b8051611ef881611e73565b60006020828403121561203857600080fd5b8151611e6c81611e73565b60006020828403121561205557600080fd5b5051919050565b8051611ef881611fa9565b60006020828403121561207957600080fd5b8151611e6c81611fa9565b634e487b7160e01b600052601160045260246000fd5b6000600182016120ac576120ac612084565b5060010190565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156120ec576120ec6120b3565b60405290565b60405160a0810167ffffffffffffffff811182821017156120ec576120ec6120b3565b6040516080810167ffffffffffffffff811182821017156120ec576120ec6120b3565b604051601f8201601f1916810167ffffffffffffffff81118282101715612161576121616120b3565b604052919050565b600082601f83011261217a57600080fd5b813567ffffffffffffffff811115612194576121946120b3565b6121a7601f8201601f1916602001612138565b8181528460208386010111156121bc57600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff8211156121f3576121f36120b3565b5060051b60200190565b600082601f83011261220e57600080fd5b8135602061222361221e836121d9565b612138565b82815260069290921b8401810191818101908684111561224257600080fd5b8286015b8481101561228a576040818903121561225f5760008081fd5b6122676120c9565b813561227281611e73565b81528185013585820152835291830191604001612246565b509695505050505050565b600060a082360312156122a757600080fd5b6122af6120f2565b823581526122bf60208401611ee0565b6020820152604083013567ffffffffffffffff808211156122df57600080fd5b6122eb36838701612169565b6040840152606085013591508082111561230457600080fd5b61231036838701612169565b6060840152608085013591508082111561232957600080fd5b50612336368286016121fd565b60808301525092915050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261236f57600080fd5b83018035915067ffffffffffffffff82111561238a57600080fd5b6020019150600581901b36038213156123a257600080fd5b9250929050565b808202811582820484141761062c5761062c612084565b8082018082111561062c5761062c612084565b600060208083850312156123e657600080fd5b825167ffffffffffffffff808211156123fe57600080fd5b908401906080828703121561241257600080fd5b61241a612115565b82518281111561242957600080fd5b8301601f8101881361243a57600080fd5b805161244861221e826121d9565b81815260059190911b8201860190868101908a83111561246757600080fd5b8784015b838110156124f45780518781111561248257600080fd5b8501603f81018d1361249357600080fd5b898101516124a361221e826121d9565b81815260059190911b8201604001908b8101908f8311156124c45760008081fd5b6040840193505b828410156124e45783518252928c0192908c01906124cb565b865250505091880191880161246b565b508452505050828401518482015261250e6040840161201b565b604082015261251f6060840161205c565b60608201529695505050505050565b6000815180845260005b8181101561255457602081850181015186830182015201612538565b506000602082860101526020601f19601f83011685010191505092915050565b6000604067ffffffffffffffff8516835260208181850152845160a0838601526125a160e086018261252e565b905081860151603f19808784030160608801526125be838361252e565b88860151888203830160808a01528051808352908601945060009350908501905b8084101561261157845180516001600160a01b03168352860151868301529385019360019390930192908601906125df565b5060608901516001600160a01b031660a08901526080890151888203830160c08a01529550612640818761252e565b9a9950505050505050505050565b6001600160a01b03858116825260a08201906126796020840187805182526020908101511515910152565b9390931660608201526080015292915050565b815181526020808301511515908201526040810161062c56fea26469706673582212200bf9f54b376d2b25ba27a22bf761b17ae7c494269dd948a8da19b6df629148ac64736f6c63430008140033";

type BlockSalesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockSalesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockSales__factory extends ContractFactory {
  constructor(...args: BlockSalesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    NFTAddress_: AddressLike,
    paymentToken_: AddressLike,
    ccipRouter_: AddressLike,
    linkToken_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      NFTAddress_,
      paymentToken_,
      ccipRouter_,
      linkToken_,
      overrides || {}
    );
  }
  override deploy(
    NFTAddress_: AddressLike,
    paymentToken_: AddressLike,
    ccipRouter_: AddressLike,
    linkToken_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      NFTAddress_,
      paymentToken_,
      ccipRouter_,
      linkToken_,
      overrides || {}
    ) as Promise<
      BlockSales & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlockSales__factory {
    return super.connect(runner) as BlockSales__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockSalesInterface {
    return new Interface(_abi) as BlockSalesInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BlockSales {
    return new Contract(address, _abi, runner) as unknown as BlockSales;
  }
}
