/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BlockSales,
  BlockSalesInterface,
} from "../../../contracts/shop/BlockSales";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "NFTAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "paymentToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ccipRouter_",
        type: "address",
      },
      {
        internalType: "address",
        name: "linkToken_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "note_",
        type: "string",
      },
    ],
    name: "DEVELOPMENT_ERROR",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractTringToMessage_",
        type: "address",
      },
    ],
    name: "MessageNotFromBlockSales",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainMessageOriginated",
        type: "uint64",
      },
    ],
    name: "MessageNotFromSalesChain",
    type: "error",
  },
  {
    inputs: [],
    name: "NotBlockSalesContract",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "calculatedFees",
        type: "uint256",
      },
    ],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderExceedsMaxAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderToLargeMax10",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ToManyElementsInBuyArray",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256[][]",
            name: "tokens_",
            type: "uint256[][]",
          },
          {
            internalType: "uint256",
            name: "totalItems_",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer_",
            type: "address",
          },
          {
            internalType: "bool",
            name: "multiBuy_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockSales.Sale",
        name: "payload",
        type: "tuple",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId_",
        type: "bytes32",
      },
    ],
    name: "SaleFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "SaleMade",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "NFT",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYMENT_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[][]",
        name: "tokenIds_",
        type: "uint256[][]",
      },
    ],
    name: "buyBatchBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "getChainBlockStore",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "contractAddress_",
        type: "address",
      },
    ],
    name: "setBlockStore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "flag_",
        type: "bool",
      },
    ],
    name: "setBlockStoreActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "testSendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllToDev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "withdrawBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e06040526001805460ff60a01b1916600160a01b1790553480156200002457600080fd5b5060405162002c4338038062002c43833981016040819052620000479162000168565b33826001600160a01b03811662000079576040516335fdcccd60e21b8152600060048201526024015b60405180910390fd5b6001600160a01b0390811660805260016000558116620000b057604051631e4fbdf760e01b81526000600482015260240162000070565b620000bb81620000f9565b50600280546001600160a01b03199081166001600160a01b039485161790915593821660a05291811660c052600380549093169116179055620001c5565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200016357600080fd5b919050565b600080600080608085870312156200017f57600080fd5b6200018a856200014b565b93506200019a602086016200014b565b9250620001aa604086016200014b565b9150620001ba606086016200014b565b905092959194509250565b60805160a05160c0516129e56200025e600039600081816102f20152818161099401528181610a7b01528181610f340152818161101c015261144e015260008181610286015281816104c1015281816105ac015281816108c401528181610b48015281816110fe015281816117df015281816118e001528181611a9b0152611f0b0152600081816103ab0152610c2b01526129e56000f3fe60806040526004361061016c5760003560e01c80638b8fb480116100ca578063bfac0b4611610079578063e8a6b60f11610056578063e8a6b60f1461044f578063f2fde38b14610464578063fcb52e631461048457005b8063bfac0b46146103cf578063bfe22a01146103ef578063d2aac3b71461040f57005b80639d7b8e68116100a75780639d7b8e6814610367578063a13157ca1461037c578063b0f479a11461039c57005b80638b8fb480146103145780638da5cb5b146103345780638dc654a21461035257005b806349df728c116101265780637c0b8de2116101035780637c0b8de21461027457806385572ffb146102c0578063877c86fb146102e057005b806349df728c1461021f57806354b58b1c1461023f578063715018a61461025f57005b8063028acce411610154578063028acce4146101ca57806322f3e2d4146101eb57806324600fc31461020a57005b8063019554fd1461017557806301ffc9a71461019557005b3661017357005b005b34801561018157600080fd5b5061017361019036600461218a565b610499565b3480156101a157600080fd5b506101b56101b03660046121a3565b610616565b60405190151581526020015b60405180910390f35b3480156101d657600080fd5b506305f5e1005b6040519081526020016101c1565b3480156101f757600080fd5b50600154600160a01b900460ff166101b5565b34801561021657600080fd5b5061017361067f565b34801561022b57600080fd5b5061017361023a3660046121e9565b610732565b34801561024b57600080fd5b5061017361025a36600461218a565b610830565b34801561026b57600080fd5b50610173610c0c565b34801561028057600080fd5b506102a87f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101c1565b3480156102cc57600080fd5b506101736102db366004612206565b610c20565b3480156102ec57600080fd5b506102a87f000000000000000000000000000000000000000000000000000000000000000081565b34801561032057600080fd5b5061017361032f36600461225e565b610c95565b34801561034057600080fd5b506001546001600160a01b03166102a8565b34801561035e57600080fd5b50610173610ce4565b34801561037357600080fd5b506006546101dd565b34801561038857600080fd5b50610173610397366004612295565b610de0565b3480156103a857600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102a8565b3480156103db57600080fd5b506101736103ea366004612318565b611259565b3480156103fb57600080fd5b5061017361040a366004612344565b61128d565b34801561041b57600080fd5b506102a861042a366004612361565b67ffffffffffffffff166000908152600460205260409020546001600160a01b031690565b34801561045b57600080fd5b5061017361129e565b34801561047057600080fd5b5061017361047f3660046121e9565b611553565b34801561049057600080fd5b506101736115a7565b6104a16115d9565b6040516331a9108f60e11b81526004810182905230906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa158015610508573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052c9190612387565b6001600160a01b0316146105875760405162461bcd60e51b815260206004820152601360248201527f546f6b656e206e6f7420617661696c61626c650000000000000000000000000060448201526064015b60405180910390fd5b604080516323b872dd60e01b81523060048201523360248201526044810183905290517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916323b872dd91606480830192600092919082900301818387803b1580156105fb57600080fd5b505af115801561060f573d6000803e3d6000fd5b5050505050565b60006001600160e01b031982167f85572ffb00000000000000000000000000000000000000000000000000000000148061067957506001600160e01b031982167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b6106876115d9565b47600080336001600160a01b03168360405160006040518083038185875af1925050503d80600081146106d6576040519150601f19603f3d011682016040523d82523d6000602084013e6106db565b606091505b50915091508161072d5760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e64204574686572000000000000000000000000604482015260640161057e565b505050565b61073a6115d9565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610783573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a791906123a4565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610806573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082a91906123c8565b50505050565b61083861161f565b600154600160a01b900460ff166108a45760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b606482015260840161057e565b6040516331a9108f60e11b81526004810182905230906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa15801561090b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092f9190612387565b6001600160a01b0316146109855760405162461bcd60e51b815260206004820152601360248201527f546f6b656e206e6f7420617661696c61626c6500000000000000000000000000604482015260640161057e565b6305f5e1006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156109fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2291906123a4565b11610a6f5760405162461bcd60e51b815260206004820152601160248201527f496e636f7272656374207061796d656e74000000000000000000000000000000604482015260640161057e565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b0390911660048201523060248201526305f5e10060448201526064016020604051808303816000875af1158015610af7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1b91906123c8565b90508015610bfe57604080516323b872dd60e01b81523060048201523360248201526044810184905290517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916323b872dd91606480830192600092919082900301818387803b158015610b9757600080fd5b505af1158015610bab573d6000803e3d6000fd5b505060068054925090506000610bc0836123fb565b90915550506040516724f9b897ef58a9229060019033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a45b50610c096001600055565b50565b610c146115d9565b610c1e6000611662565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c84576040517fd7f7333400000000000000000000000000000000000000000000000000000000815233600482015260240161057e565b610c09610c90826125f6565b6116c1565b610c9d6115d9565b67ffffffffffffffff919091166000908152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b610cec6115d9565b6003546040516370a0823160e01b81523060048201526001600160a01b039091169060009082906370a0823190602401602060405180830381865afa158015610d39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5d91906123a4565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610dbc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072d91906123c8565b610de861161f565b600154600160a01b900460ff16610e545760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b606482015260840161057e565b600080826005811115610e93576040517f298ebe3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a83108015610ea257508082105b15610edc57848483818110610eb957610eb96126a3565b9050602002810190610ecb91906126b9565b939093019250600190910190610e93565b600a831115610f17576040517f529a187000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610f27846305f5e10061270a565b9050806001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610f9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc291906123a4565b10156110105760405162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742046756e64730000000000000000000000000000604482015260640161057e565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303816000875af1158015611095573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b991906123c8565b905080156112465760005b838110156111f65760005b8888838181106110e1576110e16126a3565b90506020028101906110f391906126b9565b90508110156111e3577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd30338c8c8781811061113f5761113f6126a3565b905060200281019061115191906126b9565b86818110611161576111616126a3565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b1580156111b857600080fd5b505af11580156111cc573d6000803e3d6000fd5b5050505080806111db906123fb565b9150506110cf565b50806111ee816123fb565b9150506110c4565b5084600660008282546112099190612721565b90915550506040516724f9b897ef58a92290869033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a45b50505050506112556001600055565b5050565b6112616115d9565b67ffffffffffffffff919091166000908152600560205260409020805460ff1916911515919091179055565b6112956115d9565b610c0981611bf1565b6003546040516370a0823160e01b81523060048201526001600160a01b039091169060009082906370a0823190602401602060405180830381865afa1580156112eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130f91906123a4565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af115801561136e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139291906123c8565b5047600080336001600160a01b03168360405160006040518083038185875af1925050503d80600081146113e2576040519150601f19603f3d011682016040523d82523d6000602084013e6113e7565b606091505b5091509150816114395760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e64204574686572000000000000000000000000604482015260640161057e565b6040516370a0823160e01b81523060048201527f0000000000000000000000000000000000000000000000000000000000000000906000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156114a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c691906123a4565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015611525573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154991906123c8565b5050505050505050565b61155b6115d9565b6001600160a01b03811661159e576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526000600482015260240161057e565b610c0981611662565b6115af6115d9565b604080518082019091526000808252600160208301529061072d8167adecc60412ce25a584611c55565b6001546001600160a01b03163314610c1e576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240161057e565b60026000540361165b576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600055565b600180546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b806020015181604001518060200190518101906116de9190612387565b67ffffffffffffffff821660009081526005602052604090205460ff1661173c576040517e651a9900000000000000000000000000000000000000000000000000000000815267ffffffffffffffff8316600482015260240161057e565b67ffffffffffffffff82166000908152600460205260409020546001600160a01b038281169116146117a4576040517e0e48e30000000000000000000000000000000000000000000000000000000081526001600160a01b038216600482015260240161057e565b82516020808501516060860151805191926000926117c89290810182019101612734565b90508060600151611a1857306001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636352211e8360000151600081518110611823576118236126a3565b602002602001015160008151811061183d5761183d6126a3565b60200260200101516040518263ffffffff1660e01b815260040161186391815260200190565b602060405180830381865afa158015611880573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118a49190612387565b6001600160a01b0316146118de576118d8604051806040016040528085815260200160011515815250838360400151611c55565b50611be9565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd308360400151846000015160008151811061192a5761192a6126a3565b6020026020010151600081518110611944576119446126a3565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561199e57600080fd5b505af11580156119b2573d6000803e3d6000fd5b5050600680549250905060006119c7836123fb565b91905055508167ffffffffffffffff16600182604001516001600160a01b03167f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad260405160405180910390a4611be9565b6000611a278260000151611ecd565b905080611a5a57611a54604051806040016040528086815260200160001515815250848460400151611c55565b50611be7565b815151600090815b81811015611b845760005b8551805183908110611a8157611a816126a3565b602002602001015151811015611b7b5783806001019450507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd30886040015189600001518681518110611ae457611ae46126a3565b60200260200101518581518110611afd57611afd6126a3565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015611b5757600080fd5b505af1158015611b6b573d6000803e3d6000fd5b505060019092019150611a6d9050565b50600101611a62565b508160066000828254611b979190612721565b925050819055508467ffffffffffffffff168285604001516001600160a01b03167f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad260405160405180910390a450505b505b505050505050565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b67ffffffffffffffff82166000908152600460205260408120548190611c85906001600160a01b03168683611ffc565b90506000306001600160a01b031663b0f479a16040518163ffffffff1660e01b8152600401602060405180830381865afa158015611cc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ceb9190612387565b90506000816001600160a01b03166320487ded87856040518363ffffffff1660e01b8152600401611d1d9291906128d5565b602060405180830381865afa158015611d3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d5e91906123a4565b905047811115611da3576040517f8f0f42060000000000000000000000000000000000000000000000000000000081524760048201526024810182905260440161057e565b6040517f96f4e9f90000000000000000000000000000000000000000000000000000000081526001600160a01b038316906396f4e9f9908390611dec908a9088906004016128d5565b60206040518083038185885af1158015611e0a573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611e2f91906123a4565b93508567ffffffffffffffff167fe119db35c2c014ed62b05ba53a4495bb3f61e64f7711d1f90f9f969bedeeeeae8860000151604051611e7191815260200190565b60405180910390a26040516001600160a01b038616815267ffffffffffffffff87169085907fd6b7de0a75c28230ed0cecf9a5f80bfd2c81047a14fc87f1b1203d7491c11e239060200160405180910390a35050509392505050565b6000805b8251811015611ff35760005b838281518110611eef57611eef6126a3565b602002602001015151811015611fea57306001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636352211e868581518110611f4a57611f4a6126a3565b60200260200101518481518110611f6357611f636126a3565b60200260200101516040518263ffffffff1660e01b8152600401611f8991815260200190565b602060405180830381865afa158015611fa6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fca9190612387565b6001600160a01b031614611fe2575060009392505050565b600101611edd565b50600101611ed1565b50600192915050565b6120376040518060a0016040528060608152602001606081526020016060815260200160006001600160a01b03168152602001606081525090565b6040805160a081019091526001600160a01b03851660c08201528060e0810160405160208183030381529060405281526020018460405160200161208f91908151815260209182015115159181019190915260400190565b60408051601f19818403018152919052815260200160006040519080825280602002602001820160405280156120eb57816020015b60408051808201909152600080825260208201528152602001906001900390816120c45790505b508152602001836001600160a01b03168152602001612180604051806020016040528062030d4081525060408051915160248084019190915281518084039091018152604490920190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f97a657c90000000000000000000000000000000000000000000000000000000017905290565b9052949350505050565b60006020828403121561219c57600080fd5b5035919050565b6000602082840312156121b557600080fd5b81356001600160e01b0319811681146121cd57600080fd5b9392505050565b6001600160a01b0381168114610c0957600080fd5b6000602082840312156121fb57600080fd5b81356121cd816121d4565b60006020828403121561221857600080fd5b813567ffffffffffffffff81111561222f57600080fd5b820160a081850312156121cd57600080fd5b803567ffffffffffffffff8116811461225957600080fd5b919050565b6000806040838503121561227157600080fd5b61227a83612241565b9150602083013561228a816121d4565b809150509250929050565b600080602083850312156122a857600080fd5b823567ffffffffffffffff808211156122c057600080fd5b818501915085601f8301126122d457600080fd5b8135818111156122e357600080fd5b8660208260051b85010111156122f857600080fd5b60209290920196919550909350505050565b8015158114610c0957600080fd5b6000806040838503121561232b57600080fd5b61233483612241565b9150602083013561228a8161230a565b60006020828403121561235657600080fd5b81356121cd8161230a565b60006020828403121561237357600080fd5b6121cd82612241565b8051612259816121d4565b60006020828403121561239957600080fd5b81516121cd816121d4565b6000602082840312156123b657600080fd5b5051919050565b80516122598161230a565b6000602082840312156123da57600080fd5b81516121cd8161230a565b634e487b7160e01b600052601160045260246000fd5b60006001820161240d5761240d6123e5565b5060010190565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561244d5761244d612414565b60405290565b60405160a0810167ffffffffffffffff8111828210171561244d5761244d612414565b6040516080810167ffffffffffffffff8111828210171561244d5761244d612414565b604051601f8201601f1916810167ffffffffffffffff811182821017156124c2576124c2612414565b604052919050565b600082601f8301126124db57600080fd5b813567ffffffffffffffff8111156124f5576124f5612414565b612508601f8201601f1916602001612499565b81815284602083860101111561251d57600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff82111561255457612554612414565b5060051b60200190565b600082601f83011261256f57600080fd5b8135602061258461257f8361253a565b612499565b82815260069290921b840181019181810190868411156125a357600080fd5b8286015b848110156125eb57604081890312156125c05760008081fd5b6125c861242a565b81356125d3816121d4565b815281850135858201528352918301916040016125a7565b509695505050505050565b600060a0823603121561260857600080fd5b612610612453565b8235815261262060208401612241565b6020820152604083013567ffffffffffffffff8082111561264057600080fd5b61264c368387016124ca565b6040840152606085013591508082111561266557600080fd5b612671368387016124ca565b6060840152608085013591508082111561268a57600080fd5b506126973682860161255e565b60808301525092915050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126126d057600080fd5b83018035915067ffffffffffffffff8211156126eb57600080fd5b6020019150600581901b360382131561270357600080fd5b9250929050565b8082028115828204841417610679576106796123e5565b80820180821115610679576106796123e5565b6000602080838503121561274757600080fd5b825167ffffffffffffffff8082111561275f57600080fd5b908401906080828703121561277357600080fd5b61277b612476565b82518281111561278a57600080fd5b8301601f8101881361279b57600080fd5b80516127a961257f8261253a565b81815260059190911b8201860190868101908a8311156127c857600080fd5b8784015b83811015612855578051878111156127e357600080fd5b8501603f81018d136127f457600080fd5b8981015161280461257f8261253a565b81815260059190911b8201604001908b8101908f8311156128255760008081fd5b6040840193505b828410156128455783518252928c0192908c019061282c565b86525050509188019188016127cc565b508452505050828401518482015261286f6040840161237c565b6040820152612880606084016123bd565b60608201529695505050505050565b6000815180845260005b818110156128b557602081850181015186830182015201612899565b506000602082860101526020601f19601f83011685010191505092915050565b6000604067ffffffffffffffff8516835260208181850152845160a08386015261290260e086018261288f565b905081860151603f198087840301606088015261291f838361288f565b88860151888203830160808a01528051808352908601945060009350908501905b8084101561297257845180516001600160a01b0316835286015186830152938501936001939093019290860190612940565b5060608901516001600160a01b031660a08901526080890151888203830160c08a015295506129a1818761288f565b9a995050505050505050505056fea2646970667358221220d58f587255272697a3e819fc3ca64f3431aaeb0800a16636e8510b7587ba1f4764736f6c63430008140033";

type BlockSalesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockSalesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockSales__factory extends ContractFactory {
  constructor(...args: BlockSalesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    NFTAddress_: AddressLike,
    paymentToken_: AddressLike,
    ccipRouter_: AddressLike,
    linkToken_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      NFTAddress_,
      paymentToken_,
      ccipRouter_,
      linkToken_,
      overrides || {}
    );
  }
  override deploy(
    NFTAddress_: AddressLike,
    paymentToken_: AddressLike,
    ccipRouter_: AddressLike,
    linkToken_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      NFTAddress_,
      paymentToken_,
      ccipRouter_,
      linkToken_,
      overrides || {}
    ) as Promise<
      BlockSales & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlockSales__factory {
    return super.connect(runner) as BlockSales__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockSalesInterface {
    return new Interface(_abi) as BlockSalesInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BlockSales {
    return new Contract(address, _abi, runner) as unknown as BlockSales;
  }
}
