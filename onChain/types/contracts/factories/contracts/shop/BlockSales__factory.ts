/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BlockSales,
  BlockSalesInterface,
} from "../../../contracts/shop/BlockSales";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "NFTAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "paymentToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ccipRouter_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractTringToMessage_",
        type: "address",
      },
    ],
    name: "MessageNotFromBlockSales",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainMessageOriginated",
        type: "uint64",
      },
    ],
    name: "MessageNotFromSalesChain",
    type: "error",
  },
  {
    inputs: [],
    name: "NotBlockSalesContract",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "calculatedFees",
        type: "uint256",
      },
    ],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderExceedsMaxAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderToLargeMax10",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ToManyElementsInBuyArray",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256[][]",
            name: "tokens_",
            type: "uint256[][]",
          },
          {
            internalType: "uint256",
            name: "totalItems_",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer_",
            type: "address",
          },
          {
            internalType: "bool",
            name: "multiBuy_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockSales.Sale",
        name: "payload",
        type: "tuple",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256[][]",
            name: "tokens_",
            type: "uint256[][]",
          },
          {
            internalType: "uint256",
            name: "totalItems_",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer_",
            type: "address",
          },
          {
            internalType: "bool",
            name: "multiBuy_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockSales.Sale",
        name: "payload",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "SaleMade",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "NFT",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYMENT_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "contractAddress_",
        type: "address",
      },
    ],
    name: "addBlockStore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowlistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "allowlistedSourceChains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[][]",
        name: "tokenIds_",
        type: "uint256[][]",
      },
    ],
    name: "buyBatchBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "externalPurchase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "getChainBlockStore",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "withdrawBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawAddress_",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e06040526001805460ff60a01b1916600160a01b1790553480156200002457600080fd5b506040516200218538038062002185833981016040819052620000479162000157565b33816001600160a01b03811662000079576040516335fdcccd60e21b8152600060048201526024015b60405180910390fd5b6001600160a01b0390811660805260016000558116620000b057604051631e4fbdf760e01b81526000600482015260240162000070565b620000bb81620000e8565b50600280546001600160a01b0319166001600160a01b0392831617905591821660a0521660c052620001a1565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200015257600080fd5b919050565b6000806000606084860312156200016d57600080fd5b62000178846200013a565b925062000188602085016200013a565b915062000198604085016200013a565b90509250925092565b60805160a05160c051611f596200022c600039600081816103f9015281816107380152818161081f01528181610a0701528181610abc01528181610d1b0152610e0301526000818161038d015281816106630152818161090a01528181610ee50152818161138301528181611442015261159801526000818161047d0152610b5b0152611f596000f3fe6080604052600436106101635760003560e01c8063877c86fb116100c0578063b97ddd5811610074578063d2aac3b711610059578063d2aac3b7146104cd578063f2fde38b1461050d578063fd8b9acb1461052d576101db565b8063b97ddd58146104a1578063bfe22a01146104ad576101db565b80639d7b8e68116100a55780639d7b8e6814610439578063a13157ca1461044e578063b0f479a11461046e576101db565b8063877c86fb146103e75780638da5cb5b1461041b576101db565b806368742da61161011757806372875c2d116100fc57806372875c2d1461035b5780637c0b8de21461037b57806385572ffb146103c7576101db565b806368742da614610326578063715018a614610346576101db565b80634030d521116101485780634030d521146102a457806354b58b1c146102d45780636159ada1146102f6576101db565b806301ffc9a714610249578063028acce41461027e576101db565b366101db5760405162461bcd60e51b815260206004820152603160248201527f426c6f636b53616c6573203a205b726563656976655d202d20596f752063616e60448201527f206b65657020796f757220746f6b656e7300000000000000000000000000000060648201526084015b60405180910390fd5b60405162461bcd60e51b815260206004820152603060248201527f426c6f636b53616c6573203a205b66616c6c6261636b5d202d20576520646f6e60448201527f27742077616e7420796f7572204554480000000000000000000000000000000060648201526084016101d2565b34801561025557600080fd5b5061026961026436600461174c565b61054d565b60405190151581526020015b60405180910390f35b34801561028a57600080fd5b5068056bc75e2d631000005b604051908152602001610275565b3480156102b057600080fd5b506102696102bf36600461179a565b60046020526000908152604090205460ff1681565b3480156102e057600080fd5b506102f46102ef3660046117b5565b6105b6565b005b34801561030257600080fd5b506102696103113660046117e3565b60056020526000908152604090205460ff1681565b34801561033257600080fd5b506102f46103413660046117e3565b6109ce565b34801561035257600080fd5b506102f4610b30565b34801561036757600080fd5b506102f4610376366004611800565b610b44565b34801561038757600080fd5b506103af7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610275565b3480156103d357600080fd5b506102f46103e236600461182c565b610b50565b3480156103f357600080fd5b506103af7f000000000000000000000000000000000000000000000000000000000000000081565b34801561042757600080fd5b506001546001600160a01b03166103af565b34801561044557600080fd5b50600654610296565b34801561045a57600080fd5b506102f4610469366004611867565b610bc5565b34801561047a57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006103af565b3480156102f457600080fd5b3480156104b957600080fd5b506102f46104c83660046118ea565b61103c565b3480156104d957600080fd5b506103af6104e836600461179a565b67ffffffffffffffff166000908152600360205260409020546001600160a01b031690565b34801561051957600080fd5b506102f46105283660046117e3565b61104d565b34801561053957600080fd5b506102f4610548366004611907565b6110a1565b60006001600160e01b031982167f85572ffb0000000000000000000000000000000000000000000000000000000014806105b057506001600160e01b031982167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b6105be6110f0565b600154600160a01b900460ff1661062a5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084016101d2565b6040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810182905230906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa1580156106aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ce9190611949565b6001600160a01b0316146107245760405162461bcd60e51b815260206004820152601360248201527f546f6b656e206e6f7420617661696c61626c650000000000000000000000000060448201526064016101d2565b68056bc75e2d631000006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156107a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c69190611966565b116108135760405162461bcd60e51b815260206004820152601160248201527f496e636f7272656374207061796d656e7400000000000000000000000000000060448201526064016101d2565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015268056bc75e2d6310000060448201526064016020604051808303816000875af11580156108a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c4919061198a565b905080156109c057604080517f23b872dd0000000000000000000000000000000000000000000000000000000081523060048201523360248201526044810184905290517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916323b872dd91606480830192600092919082900301818387803b15801561095957600080fd5b505af115801561096d573d6000803e3d6000fd5b505060068054925090506000610982836119bd565b90915550506040516724f9b897ef58a9229060019033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a45b506109cb6001600055565b50565b6109d6611133565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610a56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7a9190611966565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038481166004830152602482018390529192507f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015610b07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2b919061198a565b505050565b610b38611133565b610b426000611179565b565b610b4c611133565b5050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610bb4576040517fd7f733340000000000000000000000000000000000000000000000000000000081523360048201526024016101d2565b6109cb610bc082611bb8565b6111d8565b610bcd6110f0565b600154600160a01b900460ff16610c395760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084016101d2565b600080826005811115610c78576040517f298ebe3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a83108015610c8757508082105b15610cbe57848483818110610c9e57610c9e611c65565b9050602002810190610cb09190611c7b565b935050600190910190610c78565b600a831115610cf9576040517f529a187000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610d0e8468056bc75e2d63100000611ccc565b9050806001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610d85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da99190611966565b1015610df75760405162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742046756e6473000000000000000000000000000060448201526064016101d2565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303816000875af1158015610e7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea0919061198a565b9050801561102d5760005b83811015610fdd5760005b888883818110610ec857610ec8611c65565b9050602002810190610eda9190611c7b565b9050811015610fca577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd30338c8c87818110610f2657610f26611c65565b9050602002810190610f389190611c7b565b86818110610f4857610f48611c65565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b158015610f9f57600080fd5b505af1158015610fb3573d6000803e3d6000fd5b505050508080610fc2906119bd565b915050610eb6565b5080610fd5816119bd565b915050610eab565b508460066000828254610ff09190611ce3565b90915550506040516724f9b897ef58a92290869033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a45b5050505050610b4c6001600055565b611044611133565b6109cb816116e8565b611055611133565b6001600160a01b038116611098576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016101d2565b6109cb81611179565b6110a9611133565b67ffffffffffffffff919091166000908152600360205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b60026000540361112c576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600055565b6001546001600160a01b03163314610b42576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016101d2565b600180546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b806020015181604001518060200190518101906111f59190611949565b67ffffffffffffffff821660009081526004602052604090205460ff16611253576040517e651a9900000000000000000000000000000000000000000000000000000000815267ffffffffffffffff831660048201526024016101d2565b6001600160a01b03811660009081526005602052604090205460ff166112af576040517e0e48e30000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526024016101d2565b82516020808501516060860151805191926000926112d39290810182019101611cf6565b90508167ffffffffffffffff16837ff1f456df9618defccc7e2efcf6e0ecba13d5b393128e586fdf16120664b2e36b886040015180602001905181019061131a9190611949565b84604051611329929190611e51565b60405180910390a3806060015161155f576000816000015160008151811061135357611353611c65565b602002602001015160008151811061136d5761136d611c65565b60200260200101519050306001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636352211e836040518263ffffffff1660e01b81526004016113cf91815260200190565b602060405180830381865afa1580156113ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114109190611949565b6001600160a01b03161461143857604080518082019091528481526000602090910152611559565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd30338551805160009061147c5761147c611c65565b602002602001015160008151811061149657611496611c65565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156114f057600080fd5b505af1158015611504573d6000803e3d6000fd5b505060068054925090506000611519836119bd565b909155505060405167ffffffffffffffff84169060019033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a45b506116e0565b805151600090815b8181101561168e5760005b845180518390811061158657611586611c65565b60200260200101515181101561167b577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd3033886000015186815181106115dd576115dd611c65565b602002602001015185815181106115f6576115f6611c65565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561165057600080fd5b505af1158015611664573d6000803e3d6000fd5b505050508080611673906119bd565b915050611572565b5080611686816119bd565b915050611567565b5081600660008282546116a19190611ce3565b90915550506040516724f9b897ef58a92290839033907f047841b20d72ff4d89c31178c8efbca759323fd200d8b7694334bccc3fb99ad290600090a450505b505050505050565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b60006020828403121561175e57600080fd5b81356001600160e01b03198116811461177657600080fd5b9392505050565b803567ffffffffffffffff8116811461179557600080fd5b919050565b6000602082840312156117ac57600080fd5b6117768261177d565b6000602082840312156117c757600080fd5b5035919050565b6001600160a01b03811681146109cb57600080fd5b6000602082840312156117f557600080fd5b8135611776816117ce565b6000806040838503121561181357600080fd5b823561181e816117ce565b946020939093013593505050565b60006020828403121561183e57600080fd5b813567ffffffffffffffff81111561185557600080fd5b820160a0818503121561177657600080fd5b6000806020838503121561187a57600080fd5b823567ffffffffffffffff8082111561189257600080fd5b818501915085601f8301126118a657600080fd5b8135818111156118b557600080fd5b8660208260051b85010111156118ca57600080fd5b60209290920196919550909350505050565b80151581146109cb57600080fd5b6000602082840312156118fc57600080fd5b8135611776816118dc565b6000806040838503121561191a57600080fd5b6119238361177d565b91506020830135611933816117ce565b809150509250929050565b8051611795816117ce565b60006020828403121561195b57600080fd5b8151611776816117ce565b60006020828403121561197857600080fd5b5051919050565b8051611795816118dc565b60006020828403121561199c57600080fd5b8151611776816118dc565b634e487b7160e01b600052601160045260246000fd5b6000600182016119cf576119cf6119a7565b5060010190565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611a0f57611a0f6119d6565b60405290565b60405160a0810167ffffffffffffffff81118282101715611a0f57611a0f6119d6565b6040516080810167ffffffffffffffff81118282101715611a0f57611a0f6119d6565b604051601f8201601f1916810167ffffffffffffffff81118282101715611a8457611a846119d6565b604052919050565b600082601f830112611a9d57600080fd5b813567ffffffffffffffff811115611ab757611ab76119d6565b611aca601f8201601f1916602001611a5b565b818152846020838601011115611adf57600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff821115611b1657611b166119d6565b5060051b60200190565b600082601f830112611b3157600080fd5b81356020611b46611b4183611afc565b611a5b565b82815260069290921b84018101918181019086841115611b6557600080fd5b8286015b84811015611bad5760408189031215611b825760008081fd5b611b8a6119ec565b8135611b95816117ce565b81528185013585820152835291830191604001611b69565b509695505050505050565b600060a08236031215611bca57600080fd5b611bd2611a15565b82358152611be26020840161177d565b6020820152604083013567ffffffffffffffff80821115611c0257600080fd5b611c0e36838701611a8c565b60408401526060850135915080821115611c2757600080fd5b611c3336838701611a8c565b60608401526080850135915080821115611c4c57600080fd5b50611c5936828601611b20565b60808301525092915050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611c9257600080fd5b83018035915067ffffffffffffffff821115611cad57600080fd5b6020019150600581901b3603821315611cc557600080fd5b9250929050565b80820281158282048414176105b0576105b06119a7565b808201808211156105b0576105b06119a7565b60006020808385031215611d0957600080fd5b825167ffffffffffffffff80821115611d2157600080fd5b9084019060808287031215611d3557600080fd5b611d3d611a38565b825182811115611d4c57600080fd5b8301601f81018813611d5d57600080fd5b8051611d6b611b4182611afc565b81815260059190911b8201860190868101908a831115611d8a57600080fd5b8784015b83811015611e1757805187811115611da557600080fd5b8501603f81018d13611db657600080fd5b89810151611dc6611b4182611afc565b81815260059190911b8201604001908b8101908f831115611de75760008081fd5b6040840193505b82841015611e075783518252928c0192908c0190611dee565b8652505050918801918801611d8e565b5084525050508284015184820152611e316040840161193e565b6040820152611e426060840161197f565b60608201529695505050505050565b6001600160a01b03831681526000602060408184015260c0830184516080604086015281815180845260e08701915060e08160051b880101935084830192506000805b82811015611ee85788860360df19018452845180518088529088019088880190845b81811015611ed25783518352928a0192918a0191600101611eb6565b5090975050509386019392860192600101611e94565b5050505091850151606085015260408501516001600160a01b03811660808601529150606085015180151560a086015291509594505050505056fea2646970667358221220ce0db2e6f6b56614fd8847ddeb41b54712188b34145ebca8c0db64623392aab864736f6c63430008140033";

type BlockSalesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockSalesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockSales__factory extends ContractFactory {
  constructor(...args: BlockSalesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    NFTAddress_: AddressLike,
    paymentToken_: AddressLike,
    ccipRouter_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      NFTAddress_,
      paymentToken_,
      ccipRouter_,
      overrides || {}
    );
  }
  override deploy(
    NFTAddress_: AddressLike,
    paymentToken_: AddressLike,
    ccipRouter_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      NFTAddress_,
      paymentToken_,
      ccipRouter_,
      overrides || {}
    ) as Promise<
      BlockSales & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlockSales__factory {
    return super.connect(runner) as BlockSales__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockSalesInterface {
    return new Interface(_abi) as BlockSalesInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BlockSales {
    return new Contract(address, _abi, runner) as unknown as BlockSales;
  }
}
