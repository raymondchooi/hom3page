/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BlockStore,
  BlockStoreInterface,
} from "../../../contracts/shop/BlockStore";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ghoTokenAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "blockSalesContract_",
        type: "address",
      },
      {
        internalType: "address",
        name: "linkToken_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "note_",
        type: "string",
      },
    ],
    name: "DEVELOPMENT_ERROR",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractTringToMessage_",
        type: "address",
      },
    ],
    name: "MessageNotFromBlockSales",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainMessageOriginated",
        type: "uint64",
      },
    ],
    name: "MessageNotFromSalesChain",
    type: "error",
  },
  {
    inputs: [],
    name: "NotBlockSalesContract",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "calculatedFees",
        type: "uint256",
      },
    ],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderExceedsMaxAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderToLargeMax10",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ToManyElementsInBuyArray",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "salesMessageId_",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "failed_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockStore.SaleRecipe",
        name: "payload",
        type: "tuple",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256[][]",
            name: "tokens_",
            type: "uint256[][]",
          },
          {
            internalType: "uint256",
            name: "totalItems_",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer_",
            type: "address",
          },
          {
            internalType: "bool",
            name: "multiBuy_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockStore.Sale",
        name: "payload",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId_",
        type: "bytes32",
      },
    ],
    name: "SaleFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "SaleMade",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "PAYMENT_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[][]",
        name: "tokenIds_",
        type: "uint256[][]",
      },
    ],
    name: "buyBatchBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "buyBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "saleId_",
        type: "bytes32",
      },
    ],
    name: "getSaleStatus",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256[][]",
                name: "tokens_",
                type: "uint256[][]",
              },
              {
                internalType: "uint256",
                name: "totalItems_",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "buyer_",
                type: "address",
              },
              {
                internalType: "bool",
                name: "multiBuy_",
                type: "bool",
              },
            ],
            internalType: "struct IBlockStore.Sale",
            name: "saleData_",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "messageId_",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "saleComplete_",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "saleFailed_",
            type: "bool",
          },
        ],
        internalType: "struct IBlockStore.SaleStore",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSalesContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress_",
        type: "address",
      },
    ],
    name: "setSalesContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllToDev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040526001805460ff60a01b1916600160a01b1790553480156200002457600080fd5b506040516200263d3803806200263d833981016040819052620000479162000174565b33846001600160a01b03811662000079576040516335fdcccd60e21b8152600060048201526024015b60405180910390fd5b6001600160a01b0390811660805260016000558116620000b057604051631e4fbdf760e01b81526000600482015260240162000070565b620000bb8162000105565b50600380546001600160a01b039586166001600160a01b03199182161790915592841660a052600580549285169284169290921790915560048054919093169116179055620001d1565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200016f57600080fd5b919050565b600080600080608085870312156200018b57600080fd5b620001968562000157565b9350620001a66020860162000157565b9250620001b66040860162000157565b9150620001c66060860162000157565b905092959194509250565b60805160a05161241562000228600039600081816102b7015281816107ef015281816108d601528181610c7101528181610d590152818161101f015261160f01526000818161035b0152610a7c01526124156000f3fe60806040526004361061014b5760003560e01c8063877c86fb116100b4578063b0f479a11161006e578063e8a6b60f11610056578063e8a6b60f1461039f578063f2fde38b146103b4578063fac62be4146103d457005b8063b0f479a11461034c578063bfe22a011461037f57005b80639b5719a61161009c5780639b5719a6146102f75780639d7b8e6814610317578063a13157ca1461032c57005b8063877c86fb146102a55780638da5cb5b146102d957005b806349df728c1161010557806358c75e88116100ed57806358c75e881461023e578063715018a61461027057806385572ffb1461028557005b806349df728c146101fe57806354b58b1c1461021e57005b806322f3e2d41161013357806322f3e2d4146101aa57806324600fc3146101c9578063422dca36146101d157005b806301ffc9a714610154578063028acce41461018957005b3661015257005b005b34801561016057600080fd5b5061017461016f366004611baa565b6103e9565b60405190151581526020015b60405180910390f35b34801561019557600080fd5b506305f5e1005b604051908152602001610180565b3480156101b657600080fd5b50600154600160a01b900460ff16610174565b610152610452565b3480156101dd57600080fd5b506101f16101ec366004611bdb565b61050a565b6040516101809190611cba565b34801561020a57600080fd5b50610152610219366004611d19565b61066e565b34801561022a57600080fd5b50610152610239366004611bdb565b61076c565b34801561024a57600080fd5b506005546001600160a01b03165b6040516001600160a01b039091168152602001610180565b34801561027c57600080fd5b50610152610a5d565b34801561029157600080fd5b506101526102a0366004611d36565b610a71565b3480156102b157600080fd5b506102587f000000000000000000000000000000000000000000000000000000000000000081565b3480156102e557600080fd5b506001546001600160a01b0316610258565b34801561030357600080fd5b50610152610312366004611d19565b610ae6565b34801561032357600080fd5b5060025461019c565b34801561033857600080fd5b50610152610347366004611d71565b610b1d565b34801561035857600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610258565b34801561038b57600080fd5b5061015261039a366004611df4565b610e5d565b3480156103ab57600080fd5b50610152610e6e565b3480156103c057600080fd5b506101526103cf366004611d19565b611124565b3480156103e057600080fd5b50610152611178565b60006001600160e01b031982167f85572ffb00000000000000000000000000000000000000000000000000000000148061044c57506001600160e01b031982167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b61045a611275565b47600080336001600160a01b03168360405160006040518083038185875af1925050503d80600081146104a9576040519150601f19603f3d011682016040523d82523d6000602084013e6104ae565b606091505b5091509150816105055760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e6420457468657200000000000000000000000060448201526064015b60405180910390fd5b505050565b6040805161010081018252606060808201818152600060a0840181905260c0840181905260e084018190529083526020830181905292820183905281019190915260008281526006602090815260408083208151815461012094810282018501909352610100810183815290949193859360808501938693859390928592909188015b828210156105f9576000848152602090819020830180546040805182850281018501909152818152928301828280156105e557602002820191906000526020600020905b8154815260200190600101908083116105d1575b50505050508152602001906001019061058d565b5050509082525060018201546020808301919091526002909201546001600160a01b03811660408084019190915260ff600160a01b9092048216151560609384015293855260038601549285019290925260049094015480821615159284019290925261010090910416151591015292915050565b610676611275565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156106bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e39190611e11565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610742573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107669190611e2a565b50505050565b6107746112bb565b600154600160a01b900460ff166107e05760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084016104fc565b6305f5e1006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610859573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087d9190611e11565b116108ca5760405162461bcd60e51b815260206004820152601160248201527f496e636f7272656374207061796d656e7400000000000000000000000000000060448201526064016104fc565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b0390911660048201523060248201526305f5e10060448201526064016020604051808303816000875af1158015610952573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109769190611e2a565b90508015610a4f576040805160018082528183019092526000916020808301908036833701905050905082816000815181106109b4576109b4611e5d565b6020908102919091010152604080516001808252818301909252600091816020015b60608152602001906001900390816109d65790505090508181600081518110610a0157610a01611e5d565b60200260200101819052506000604051806080016040528083815260200160018152602001610a2d3390565b6001600160a01b0316815260006020909101529050610a4b816112fe565b5050505b50610a5a6001600055565b50565b610a65611275565b610a6f6000611409565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ad5576040517fd7f733340000000000000000000000000000000000000000000000000000000081523360048201526024016104fc565b610a5a610ae182612039565b611468565b610aee611275565b6005805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610b256112bb565b600154600160a01b900460ff16610b915760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084016104fc565b600080826005811115610bd0576040517f298ebe3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a83108015610bdf57508082105b15610c1957848483818110610bf657610bf6611e5d565b9050602002810190610c0891906120e6565b939093019250600190910190610bd0565b600a831115610c54576040517f529a187000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610c64846305f5e100612137565b9050806001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610cdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cff9190611e11565b1015610d4d5760405162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742046756e6473000000000000000000000000000060448201526064016104fc565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303816000875af1158015610dd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df69190611e2a565b90508015610e4a5760006040518060800160405280898990610e18919061215c565b8152602001878152602001610e2a3390565b6001600160a01b0316815260016020909101529050610e48816112fe565b505b5050505050610e596001600055565b5050565b610e65611275565b610a5a816116c0565b600480546040516370a0823160e01b815230928101929092526001600160a01b03169060009082906370a0823190602401602060405180830381865afa158015610ebc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee09190611e11565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610f3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f639190611e2a565b5047600080336001600160a01b03168360405160006040518083038185875af1925050503d8060008114610fb3576040519150601f19603f3d011682016040523d82523d6000602084013e610fb8565b606091505b50915091508161100a5760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e6420457468657200000000000000000000000060448201526064016104fc565b6040516370a0823160e01b81523060048201527f0000000000000000000000000000000000000000000000000000000000000000906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611073573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110979190611e11565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156110f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111a9190611e2a565b5050505050505050565b61112c611275565b6001600160a01b03811661116f576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016104fc565b610a5a81611409565b611180611275565b600480546040516370a0823160e01b815230928101929092526001600160a01b03169060009082906370a0823190602401602060405180830381865afa1580156111ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f29190611e11565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015611251573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105059190611e2a565b6001546001600160a01b03163314610a6f576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016104fc565b6002600054036112f7576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600055565b6005546000906113219067adecc60412ce25a5906001600160a01b031684611724565b6040805160808101825284815260208082018490526000828401819052606083018190528481526006825292909220815180518051959650929491939092849261136e9284920190611ab6565b506020828101516001830155604080840151600290930180546060958601511515600160a01b027fffffffffffffffffffffff0000000000000000000000000000000000000000009091166001600160a01b039095169490941793909317909255840151600384015583015160049092018054939091015115156101000261ff00199215159290921661ffff19909316929092171790555050565b600180546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80604001518060200190518101906114809190612222565b60208201516005546001600160a01b038381169116146114d6576040517e0e48e30000000000000000000000000000000000000000000000000000000081526001600160a01b03831660048201526024016104fc565b67ffffffffffffffff811667adecc60412ce25a51461152c576040517e651a9900000000000000000000000000000000000000000000000000000000815267ffffffffffffffff821660048201526024016104fc565b82516060840151805160009161154a9181016020908101910161223f565b9050846020015167ffffffffffffffff16827fb88ce2d04299f9522d2b89873660c7d0ead5d1243e708bd6adb2179ee0e3d8e587604001518060200190518101906115959190612222565b604080516001600160a01b039092168252855160208084019190915286015115159082015260600160405180910390a36000828152600660209081526040909120600401805460ff19166001179055810151156116b957600082815260066020526040902060028101546001909101546001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263a9059cbb92911690611648906305f5e100612137565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611693573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b79190611e2a565b505b5050505050565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b600061172e611275565b600061173c8484600061193c565b90506000306001600160a01b031663b0f479a16040518163ffffffff1660e01b8152600401602060405180830381865afa15801561177e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a29190612222565b90506000816001600160a01b03166320487ded88856040518363ffffffff1660e01b81526004016117d49291906122bd565b602060405180830381865afa1580156117f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118159190611e11565b90504781111561185a576040517f8f0f4206000000000000000000000000000000000000000000000000000000008152476004820152602481018290526044016104fc565b6040517f96f4e9f90000000000000000000000000000000000000000000000000000000081526001600160a01b038316906396f4e9f99083906118a3908b9088906004016122bd565b60206040518083038185885af11580156118c1573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906118e69190611e11565b93508667ffffffffffffffff16847ff3daec95947ed2daeaa18ee62a717c54cde3c080724a84a0b867fd53bd26b08f888860008660405161192a9493929190612397565b60405180910390a35050509392505050565b6119776040518060a0016040528060608152602001606081526020016060815260200160006001600160a01b03168152602001606081525090565b6040805160a081019091526001600160a01b03851660c08201528060e081016040516020818303038152906040528152602001846040516020016119bb91906123cc565b60408051601f1981840301815291905281526020016000604051908082528060200260200182016040528015611a1757816020015b60408051808201909152600080825260208201528152602001906001900390816119f05790505b508152602001836001600160a01b03168152602001611aac6040518060200160405280620f424081525060408051915160248084019190915281518084039091018152604490920190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f97a657c90000000000000000000000000000000000000000000000000000000017905290565b9052949350505050565b828054828255906000526020600020908101928215611b03579160200282015b82811115611b035782518051611af3918491602090910190611b13565b5091602001919060010190611ad6565b50611b0f929150611b5a565b5090565b828054828255906000526020600020908101928215611b4e579160200282015b82811115611b4e578251825591602001919060010190611b33565b50611b0f929150611b77565b80821115611b0f576000611b6e8282611b8c565b50600101611b5a565b5b80821115611b0f5760008155600101611b78565b5080546000825590600052602060002090810190610a5a9190611b77565b600060208284031215611bbc57600080fd5b81356001600160e01b031981168114611bd457600080fd5b9392505050565b600060208284031215611bed57600080fd5b5035919050565b60006080830182516080855281815180845260a08701915060a08160051b8801019350602080840193506000805b83811015611c7657898703609f19018552855180518089529084019084890190845b81811015611c6057835183529286019291860191600101611c44565b5090985050509482019493820193600101611c22565b50508087015181890152505050506040830151611c9e60408601826001600160a01b03169052565b506060830151611cb2606086018215159052565b509392505050565b602081526000825160806020840152611cd660a0840182611bf4565b9050602084015160408401526040840151151560608401526060840151151560808401528091505092915050565b6001600160a01b0381168114610a5a57600080fd5b600060208284031215611d2b57600080fd5b8135611bd481611d04565b600060208284031215611d4857600080fd5b813567ffffffffffffffff811115611d5f57600080fd5b820160a08185031215611bd457600080fd5b60008060208385031215611d8457600080fd5b823567ffffffffffffffff80821115611d9c57600080fd5b818501915085601f830112611db057600080fd5b813581811115611dbf57600080fd5b8660208260051b8501011115611dd457600080fd5b60209290920196919550909350505050565b8015158114610a5a57600080fd5b600060208284031215611e0657600080fd5b8135611bd481611de6565b600060208284031215611e2357600080fd5b5051919050565b600060208284031215611e3c57600080fd5b8151611bd481611de6565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6040805190810167ffffffffffffffff81118282101715611e9657611e96611e47565b60405290565b60405160a0810167ffffffffffffffff81118282101715611e9657611e96611e47565b604051601f8201601f1916810167ffffffffffffffff81118282101715611ee857611ee8611e47565b604052919050565b803567ffffffffffffffff81168114611f0857600080fd5b919050565b600082601f830112611f1e57600080fd5b813567ffffffffffffffff811115611f3857611f38611e47565b611f4b601f8201601f1916602001611ebf565b818152846020838601011115611f6057600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff821115611f9757611f97611e47565b5060051b60200190565b600082601f830112611fb257600080fd5b81356020611fc7611fc283611f7d565b611ebf565b82815260069290921b84018101918181019086841115611fe657600080fd5b8286015b8481101561202e57604081890312156120035760008081fd5b61200b611e73565b813561201681611d04565b81528185013585820152835291830191604001611fea565b509695505050505050565b600060a0823603121561204b57600080fd5b612053611e9c565b8235815261206360208401611ef0565b6020820152604083013567ffffffffffffffff8082111561208357600080fd5b61208f36838701611f0d565b604084015260608501359150808211156120a857600080fd5b6120b436838701611f0d565b606084015260808501359150808211156120cd57600080fd5b506120da36828601611fa1565b60808301525092915050565b6000808335601e198436030181126120fd57600080fd5b83018035915067ffffffffffffffff82111561211857600080fd5b6020019150600581901b360382131561213057600080fd5b9250929050565b808202811582820484141761044c57634e487b7160e01b600052601160045260246000fd5b600061216a611fc284611f7d565b83815260208082019190600586811b86013681111561218857600080fd5b865b8181101561221557803567ffffffffffffffff8111156121aa5760008081fd5b880136601f8201126121bc5760008081fd5b80356121ca611fc282611f7d565b81815290851b820186019086810190368311156121e75760008081fd5b928701925b82841015612205578335825292870192908701906121ec565b895250505094830194830161218a565b5092979650505050505050565b60006020828403121561223457600080fd5b8151611bd481611d04565b60006040828403121561225157600080fd5b612259611e73565b82518152602083015161226b81611de6565b60208201529392505050565b6000815180845260005b8181101561229d57602081850181015186830182015201612281565b506000602082860101526020601f19601f83011685010191505092915050565b6000604067ffffffffffffffff8516835260208181850152845160a0838601526122ea60e0860182612277565b905081860151603f19808784030160608801526123078383612277565b88860151888203830160808a01528051808352908601945060009350908501905b8084101561235a57845180516001600160a01b0316835286015186830152938501936001939093019290860190612328565b5060608901516001600160a01b031660a08901526080890151888203830160c08a015295506123898187612277565b9a9950505050505050505050565b60006001600160a01b038087168352608060208401526123ba6080840187611bf4565b94166040830152506060015292915050565b602081526000611bd46020830184611bf456fea26469706673582212209ec00bb0bac70b276fd78f494fc4569614d72ce1479f8435f8461125009a055564736f6c63430008140033";

type BlockStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockStore__factory extends ContractFactory {
  constructor(...args: BlockStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router_: AddressLike,
    ghoTokenAddress_: AddressLike,
    blockSalesContract_: AddressLike,
    linkToken_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      router_,
      ghoTokenAddress_,
      blockSalesContract_,
      linkToken_,
      overrides || {}
    );
  }
  override deploy(
    router_: AddressLike,
    ghoTokenAddress_: AddressLike,
    blockSalesContract_: AddressLike,
    linkToken_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      router_,
      ghoTokenAddress_,
      blockSalesContract_,
      linkToken_,
      overrides || {}
    ) as Promise<
      BlockStore & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlockStore__factory {
    return super.connect(runner) as BlockStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockStoreInterface {
    return new Interface(_abi) as BlockStoreInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BlockStore {
    return new Contract(address, _abi, runner) as unknown as BlockStore;
  }
}
