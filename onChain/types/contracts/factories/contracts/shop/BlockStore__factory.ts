/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BlockStore,
  BlockStoreInterface,
} from "../../../contracts/shop/BlockStore";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ghoTokenAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "blockSalesContract_",
        type: "address",
      },
      {
        internalType: "address",
        name: "linkToken_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "note_",
        type: "string",
      },
    ],
    name: "DEVELOPMENT_ERROR",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractTringToMessage_",
        type: "address",
      },
    ],
    name: "MessageNotFromBlockSales",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainMessageOriginated",
        type: "uint64",
      },
    ],
    name: "MessageNotFromSalesChain",
    type: "error",
  },
  {
    inputs: [],
    name: "NotBlockSalesContract",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "calculatedFees",
        type: "uint256",
      },
    ],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderExceedsMaxAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderToLargeMax10",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ToManyElementsInBuyArray",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "salesMessageId_",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "failed_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockStore.SaleRecipe",
        name: "payload",
        type: "tuple",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256[][]",
            name: "tokens_",
            type: "uint256[][]",
          },
          {
            internalType: "uint256",
            name: "totalItems_",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer_",
            type: "address",
          },
          {
            internalType: "bool",
            name: "multiBuy_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockStore.Sale",
        name: "payload",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "SaleMade",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "GHO",
    outputs: [
      {
        internalType: "contract IGhoToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[][]",
        name: "tokenIds_",
        type: "uint256[][]",
      },
    ],
    name: "buyBatchBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "buyBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "saleId_",
        type: "bytes32",
      },
    ],
    name: "getSaleStatus",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256[][]",
                name: "tokens_",
                type: "uint256[][]",
              },
              {
                internalType: "uint256",
                name: "totalItems_",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "buyer_",
                type: "address",
              },
              {
                internalType: "bool",
                name: "multiBuy_",
                type: "bool",
              },
            ],
            internalType: "struct IBlockStore.Sale",
            name: "saleData_",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "messageId_",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "saleComplete_",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "saleFailed_",
            type: "bool",
          },
        ],
        internalType: "struct IBlockStore.SaleStore",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSalesContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress_",
        type: "address",
      },
    ],
    name: "setSalesContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040526001805460ff60a01b1916600160a01b1790553480156200002457600080fd5b506040516200235338038062002353833981016040819052620000479162000174565b33846001600160a01b03811662000079576040516335fdcccd60e21b8152600060048201526024015b60405180910390fd5b6001600160a01b0390811660805260016000558116620000b057604051631e4fbdf760e01b81526000600482015260240162000070565b620000bb8162000105565b50600380546001600160a01b039586166001600160a01b03199182161790915592841660a052600580549285169284169290921790915560048054919093169116179055620001d1565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200016f57600080fd5b919050565b600080600080608085870312156200018b57600080fd5b620001968562000157565b9350620001a66020860162000157565b9250620001b66040860162000157565b9150620001c66060860162000157565b905092959194509250565b60805160a0516121326200022160003960008181610345015281816107c2015281816108a901528181610c4401528181610d2c015261132c01526000818161030f0152610a4f01526121326000f3fe6080604052600436106101335760003560e01c806385572ffb116100b4578063b0f479a11161006e578063bfe22a0111610056578063bfe22a0114610367578063f2fde38b14610387578063fac62be4146103a757005b8063b0f479a114610300578063b8d008f31461033357005b80639b5719a61161009c5780639b5719a6146102ab5780639d7b8e68146102cb578063a13157ca146102e057005b806385572ffb1461026d5780638da5cb5b1461028d57005b8063422dca361161010557806354b58b1c116100ed57806354b58b1c1461020657806358c75e8814610226578063715018a61461025857005b8063422dca36146101b957806349df728c146101e657005b806301ffc9a71461013c578063028acce41461017157806322f3e2d41461019257806324600fc3146101b157005b3661013a57005b005b34801561014857600080fd5b5061015c6101573660046118c7565b6103bc565b60405190151581526020015b60405180910390f35b34801561017d57600080fd5b506305f5e1005b604051908152602001610168565b34801561019e57600080fd5b50600154600160a01b900460ff1661015c565b61013a610425565b3480156101c557600080fd5b506101d96101d43660046118f8565b6104dd565b60405161016891906119d7565b3480156101f257600080fd5b5061013a610201366004611a36565b610641565b34801561021257600080fd5b5061013a6102213660046118f8565b61073f565b34801561023257600080fd5b506005546001600160a01b03165b6040516001600160a01b039091168152602001610168565b34801561026457600080fd5b5061013a610a30565b34801561027957600080fd5b5061013a610288366004611a53565b610a44565b34801561029957600080fd5b506001546001600160a01b0316610240565b3480156102b757600080fd5b5061013a6102c6366004611a36565b610ab9565b3480156102d757600080fd5b50600254610184565b3480156102ec57600080fd5b5061013a6102fb366004611a8e565b610af0565b34801561030c57600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610240565b34801561033f57600080fd5b506102407f000000000000000000000000000000000000000000000000000000000000000081565b34801561037357600080fd5b5061013a610382366004611b11565b610e30565b34801561039357600080fd5b5061013a6103a2366004611a36565b610e41565b3480156103b357600080fd5b5061013a610e95565b60006001600160e01b031982167f85572ffb00000000000000000000000000000000000000000000000000000000148061041f57506001600160e01b031982167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b61042d610f92565b47600080336001600160a01b03168360405160006040518083038185875af1925050503d806000811461047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b606091505b5091509150816104d85760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e6420457468657200000000000000000000000060448201526064015b60405180910390fd5b505050565b6040805161010081018252606060808201818152600060a0840181905260c0840181905260e084018190529083526020830181905292820183905281019190915260008281526006602090815260408083208151815461012094810282018501909352610100810183815290949193859360808501938693859390928592909188015b828210156105cc576000848152602090819020830180546040805182850281018501909152818152928301828280156105b857602002820191906000526020600020905b8154815260200190600101908083116105a4575b505050505081526020019060010190610560565b5050509082525060018201546020808301919091526002909201546001600160a01b03811660408084019190915260ff600160a01b9092048216151560609384015293855260038601549285019290925260049094015480821615159284019290925261010090910416151591015292915050565b610649610f92565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610692573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b69190611b2e565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610715573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107399190611b47565b50505050565b610747610fd8565b600154600160a01b900460ff166107b35760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084016104cf565b6305f5e1006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561082c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108509190611b2e565b1161089d5760405162461bcd60e51b815260206004820152601160248201527f496e636f7272656374207061796d656e7400000000000000000000000000000060448201526064016104cf565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b0390911660048201523060248201526305f5e10060448201526064016020604051808303816000875af1158015610925573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109499190611b47565b90508015610a225760408051600180825281830190925260009160208083019080368337019050509050828160008151811061098757610987611b7a565b6020908102919091010152604080516001808252818301909252600091816020015b60608152602001906001900390816109a957905050905081816000815181106109d4576109d4611b7a565b60200260200101819052506000604051806080016040528083815260200160018152602001610a003390565b6001600160a01b0316815260006020909101529050610a1e8161101b565b5050505b50610a2d6001600055565b50565b610a38610f92565b610a426000611126565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610aa8576040517fd7f733340000000000000000000000000000000000000000000000000000000081523360048201526024016104cf565b610a2d610ab482611d56565b611185565b610ac1610f92565b6005805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610af8610fd8565b600154600160a01b900460ff16610b645760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084016104cf565b600080826005811115610ba3576040517f298ebe3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a83108015610bb257508082105b15610bec57848483818110610bc957610bc9611b7a565b9050602002810190610bdb9190611e03565b939093019250600190910190610ba3565b600a831115610c27576040517f529a187000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610c37846305f5e100611e54565b9050806001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610cae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd29190611b2e565b1015610d205760405162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742046756e6473000000000000000000000000000060448201526064016104cf565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303816000875af1158015610da5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc99190611b47565b90508015610e1d5760006040518060800160405280898990610deb9190611e79565b8152602001878152602001610dfd3390565b6001600160a01b0316815260016020909101529050610e1b8161101b565b505b5050505050610e2c6001600055565b5050565b610e38610f92565b610a2d816113dd565b610e49610f92565b6001600160a01b038116610e8c576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016104cf565b610a2d81611126565b610e9d610f92565b600480546040516370a0823160e01b815230928101929092526001600160a01b03169060009082906370a0823190602401602060405180830381865afa158015610eeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0f9190611b2e565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610f6e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d89190611b47565b6001546001600160a01b03163314610a42576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016104cf565b600260005403611014576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600055565b60055460009061103e9067adecc60412ce25a5906001600160a01b031684611441565b6040805160808101825284815260208082018490526000828401819052606083018190528481526006825292909220815180518051959650929491939092849261108b92849201906117d3565b506020828101516001830155604080840151600290930180546060958601511515600160a01b027fffffffffffffffffffffff0000000000000000000000000000000000000000009091166001600160a01b039095169490941793909317909255840151600384015583015160049092018054939091015115156101000261ff00199215159290921661ffff19909316929092171790555050565b600180546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b806040015180602001905181019061119d9190611f3f565b60208201516005546001600160a01b038381169116146111f3576040517e0e48e30000000000000000000000000000000000000000000000000000000081526001600160a01b03831660048201526024016104cf565b67ffffffffffffffff811667adecc60412ce25a514611249576040517e651a9900000000000000000000000000000000000000000000000000000000815267ffffffffffffffff821660048201526024016104cf565b82516060840151805160009161126791810160209081019101611f5c565b9050846020015167ffffffffffffffff16827fb88ce2d04299f9522d2b89873660c7d0ead5d1243e708bd6adb2179ee0e3d8e587604001518060200190518101906112b29190611f3f565b604080516001600160a01b039092168252855160208084019190915286015115159082015260600160405180910390a36000828152600660209081526040909120600401805460ff19166001179055810151156113d657600082815260066020526040902060028101546001909101546001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263a9059cbb92911690611365906305f5e100611e54565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156113b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d49190611b47565b505b5050505050565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b600061144b610f92565b600061145984846000611659565b90506000306001600160a01b031663b0f479a16040518163ffffffff1660e01b8152600401602060405180830381865afa15801561149b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114bf9190611f3f565b90506000816001600160a01b03166320487ded88856040518363ffffffff1660e01b81526004016114f1929190611fda565b602060405180830381865afa15801561150e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115329190611b2e565b905047811115611577576040517f8f0f4206000000000000000000000000000000000000000000000000000000008152476004820152602481018290526044016104cf565b6040517f96f4e9f90000000000000000000000000000000000000000000000000000000081526001600160a01b038316906396f4e9f99083906115c0908b908890600401611fda565b60206040518083038185885af11580156115de573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906116039190611b2e565b93508667ffffffffffffffff16847ff3daec95947ed2daeaa18ee62a717c54cde3c080724a84a0b867fd53bd26b08f888860008660405161164794939291906120b4565b60405180910390a35050509392505050565b6116946040518060a0016040528060608152602001606081526020016060815260200160006001600160a01b03168152602001606081525090565b6040805160a081019091526001600160a01b03851660c08201528060e081016040516020818303038152906040528152602001846040516020016116d891906120e9565b60408051601f198184030181529190528152602001600060405190808252806020026020018201604052801561173457816020015b604080518082019091526000808252602082015281526020019060019003908161170d5790505b508152602001836001600160a01b031681526020016117c96040518060200160405280620f424081525060408051915160248084019190915281518084039091018152604490920190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f97a657c90000000000000000000000000000000000000000000000000000000017905290565b9052949350505050565b828054828255906000526020600020908101928215611820579160200282015b828111156118205782518051611810918491602090910190611830565b50916020019190600101906117f3565b5061182c929150611877565b5090565b82805482825590600052602060002090810192821561186b579160200282015b8281111561186b578251825591602001919060010190611850565b5061182c929150611894565b8082111561182c57600061188b82826118a9565b50600101611877565b5b8082111561182c5760008155600101611895565b5080546000825590600052602060002090810190610a2d9190611894565b6000602082840312156118d957600080fd5b81356001600160e01b0319811681146118f157600080fd5b9392505050565b60006020828403121561190a57600080fd5b5035919050565b60006080830182516080855281815180845260a08701915060a08160051b8801019350602080840193506000805b8381101561199357898703609f19018552855180518089529084019084890190845b8181101561197d57835183529286019291860191600101611961565b509098505050948201949382019360010161193f565b505080870151818901525050505060408301516119bb60408601826001600160a01b03169052565b5060608301516119cf606086018215159052565b509392505050565b6020815260008251608060208401526119f360a0840182611911565b9050602084015160408401526040840151151560608401526060840151151560808401528091505092915050565b6001600160a01b0381168114610a2d57600080fd5b600060208284031215611a4857600080fd5b81356118f181611a21565b600060208284031215611a6557600080fd5b813567ffffffffffffffff811115611a7c57600080fd5b820160a081850312156118f157600080fd5b60008060208385031215611aa157600080fd5b823567ffffffffffffffff80821115611ab957600080fd5b818501915085601f830112611acd57600080fd5b813581811115611adc57600080fd5b8660208260051b8501011115611af157600080fd5b60209290920196919550909350505050565b8015158114610a2d57600080fd5b600060208284031215611b2357600080fd5b81356118f181611b03565b600060208284031215611b4057600080fd5b5051919050565b600060208284031215611b5957600080fd5b81516118f181611b03565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6040805190810167ffffffffffffffff81118282101715611bb357611bb3611b64565b60405290565b60405160a0810167ffffffffffffffff81118282101715611bb357611bb3611b64565b604051601f8201601f1916810167ffffffffffffffff81118282101715611c0557611c05611b64565b604052919050565b803567ffffffffffffffff81168114611c2557600080fd5b919050565b600082601f830112611c3b57600080fd5b813567ffffffffffffffff811115611c5557611c55611b64565b611c68601f8201601f1916602001611bdc565b818152846020838601011115611c7d57600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff821115611cb457611cb4611b64565b5060051b60200190565b600082601f830112611ccf57600080fd5b81356020611ce4611cdf83611c9a565b611bdc565b82815260069290921b84018101918181019086841115611d0357600080fd5b8286015b84811015611d4b5760408189031215611d205760008081fd5b611d28611b90565b8135611d3381611a21565b81528185013585820152835291830191604001611d07565b509695505050505050565b600060a08236031215611d6857600080fd5b611d70611bb9565b82358152611d8060208401611c0d565b6020820152604083013567ffffffffffffffff80821115611da057600080fd5b611dac36838701611c2a565b60408401526060850135915080821115611dc557600080fd5b611dd136838701611c2a565b60608401526080850135915080821115611dea57600080fd5b50611df736828601611cbe565b60808301525092915050565b6000808335601e19843603018112611e1a57600080fd5b83018035915067ffffffffffffffff821115611e3557600080fd5b6020019150600581901b3603821315611e4d57600080fd5b9250929050565b808202811582820484141761041f57634e487b7160e01b600052601160045260246000fd5b6000611e87611cdf84611c9a565b83815260208082019190600586811b860136811115611ea557600080fd5b865b81811015611f3257803567ffffffffffffffff811115611ec75760008081fd5b880136601f820112611ed95760008081fd5b8035611ee7611cdf82611c9a565b81815290851b82018601908681019036831115611f045760008081fd5b928701925b82841015611f2257833582529287019290870190611f09565b8952505050948301948301611ea7565b5092979650505050505050565b600060208284031215611f5157600080fd5b81516118f181611a21565b600060408284031215611f6e57600080fd5b611f76611b90565b825181526020830151611f8881611b03565b60208201529392505050565b6000815180845260005b81811015611fba57602081850181015186830182015201611f9e565b506000602082860101526020601f19601f83011685010191505092915050565b6000604067ffffffffffffffff8516835260208181850152845160a08386015261200760e0860182611f94565b905081860151603f19808784030160608801526120248383611f94565b88860151888203830160808a01528051808352908601945060009350908501905b8084101561207757845180516001600160a01b0316835286015186830152938501936001939093019290860190612045565b5060608901516001600160a01b031660a08901526080890151888203830160c08a015295506120a68187611f94565b9a9950505050505050505050565b60006001600160a01b038087168352608060208401526120d76080840187611911565b94166040830152506060015292915050565b6020815260006118f1602083018461191156fea2646970667358221220eb1f957d329bd3dce67e9e702cb1645e8f1a9ce51af32e6dc191765c74191a4064736f6c63430008140033";

type BlockStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockStore__factory extends ContractFactory {
  constructor(...args: BlockStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router_: AddressLike,
    ghoTokenAddress_: AddressLike,
    blockSalesContract_: AddressLike,
    linkToken_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      router_,
      ghoTokenAddress_,
      blockSalesContract_,
      linkToken_,
      overrides || {}
    );
  }
  override deploy(
    router_: AddressLike,
    ghoTokenAddress_: AddressLike,
    blockSalesContract_: AddressLike,
    linkToken_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      router_,
      ghoTokenAddress_,
      blockSalesContract_,
      linkToken_,
      overrides || {}
    ) as Promise<
      BlockStore & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlockStore__factory {
    return super.connect(runner) as BlockStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockStoreInterface {
    return new Interface(_abi) as BlockStoreInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BlockStore {
    return new Contract(address, _abi, runner) as unknown as BlockStore;
  }
}
