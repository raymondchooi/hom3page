/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BlockStore,
  BlockStoreInterface,
} from "../../../contracts/shop/BlockStore";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ghoTokenAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "blockSalesContract_",
        type: "address",
      },
      {
        internalType: "address",
        name: "linkToken_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "note_",
        type: "string",
      },
    ],
    name: "DEVELOPMENT_ERROR",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractTringToMessage_",
        type: "address",
      },
    ],
    name: "MessageNotFromBlockSales",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainMessageOriginated",
        type: "uint64",
      },
    ],
    name: "MessageNotFromSalesChain",
    type: "error",
  },
  {
    inputs: [],
    name: "NotBlockSalesContract",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "calculatedFees",
        type: "uint256",
      },
    ],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderExceedsMaxAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderToLargeMax10",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ToManyElementsInBuyArray",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId_",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sourceChainId_",
        type: "uint64",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "salesMessageId_",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "failed_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockStore.SaleRecipe",
        name: "payload",
        type: "tuple",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId_",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "destinationChain_",
        type: "uint64",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256[][]",
            name: "tokens_",
            type: "uint256[][]",
          },
          {
            internalType: "uint256",
            name: "totalItems_",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer_",
            type: "address",
          },
          {
            internalType: "bool",
            name: "multiBuy_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockStore.Sale",
        name: "payload",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId_",
        type: "bytes32",
      },
    ],
    name: "SaleFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "SaleMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId_",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
    ],
    name: "SaleSubmitted",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "ETH_CHAIN_SELECTOR",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MATIC_CHAIN_SELECTOR",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OP_CHAIN_SELECTOR",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYMENT_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SALES_CONTRACT_CHAIN",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[][]",
        name: "tokenIds_",
        type: "uint256[][]",
      },
    ],
    name: "buyBatchBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "buyBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "saleId_",
        type: "bytes32",
      },
    ],
    name: "getSaleStatus",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256[][]",
                name: "tokens_",
                type: "uint256[][]",
              },
              {
                internalType: "uint256",
                name: "totalItems_",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "buyer_",
                type: "address",
              },
              {
                internalType: "bool",
                name: "multiBuy_",
                type: "bool",
              },
            ],
            internalType: "struct IBlockStore.Sale",
            name: "saleData_",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "messageId_",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "saleComplete_",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "saleFailed_",
            type: "bool",
          },
        ],
        internalType: "struct IBlockStore.SaleStore",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSalesContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "contractAddress_",
        type: "address",
      },
    ],
    name: "setBlockStore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "flag_",
        type: "bool",
      },
    ],
    name: "setBlockStoreActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress_",
        type: "address",
      },
    ],
    name: "setSalesContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllToDev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040526001805460ff60a01b1990811690915560058054909116600160a01b1790553480156200003057600080fd5b5060405162002a7138038062002a718339810160408190526200005391620001f3565b338185806001600160a01b03811662000087576040516335fdcccd60e21b8152600060048201526024015b60405180910390fd5b6001600160a01b03908116608052600080549282166001600160a01b031993841617905560018054938216939092169290921781556004558116620000e357604051631e4fbdf760e01b8152600060048201526024016200007e565b620000ee8162000184565b50506001600160a01b0391821660a052600780546001600160a01b031990811692909316918217905567adecc60412ce25a56000527fea5cc84ce79ed728d5255c7ed3fbe8b32d166d192d4b92e8633d9f9bd37f7975805460ff1916600117905560026020527f5de57993c647d212515e5a98200b0028dcf596e6a85a7176fe22188f7b1dbdfc80549092161790555062000250565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620001ee57600080fd5b919050565b600080600080608085870312156200020a57600080fd5b6200021585620001d6565b93506200022560208601620001d6565b92506200023560408601620001d6565b91506200024560608601620001d6565b905092959194509250565b60805160a0516127ca620002a76000396000818161033b015281816108eb015281816109d201528181610eb701528181610f9f01528181611290015261181e0152600081816104300152610b7801526127ca6000f3fe60806040526004361061018d5760003560e01c80638da5cb5b116100d5578063b0f479a111610084578063d0ffd7a711610061578063d0ffd7a714610405578063e8a6b60f14610494578063ebfbaa6b146104a9578063f2fde38b146104c557005b8063b0f479a114610421578063bfac0b4614610454578063bfe22a011461047457005b80639d7b8e68116100b25780639d7b8e68146103d0578063a13157ca146103e5578063af54d6691461040557005b80638da5cb5b1461037d5780638dc654a21461039b5780639b5719a6146103b057005b806354b58b1c1161013c578063715018a611610119578063715018a6146102f457806385572ffb14610309578063877c86fb146103295780638b8fb4801461035d57005b806354b58b1c1461026d57806358c75e881461028d5780636cf42b1d146102bf57005b806324600fc31161016a57806324600fc31461020b578063422dca361461022057806349df728c1461024d57005b806301ffc9a714610196578063028acce4146101cb57806322f3e2d4146101ec57005b3661019457005b005b3480156101a257600080fd5b506101b66101b1366004611f38565b6104e5565b60405190151581526020015b60405180910390f35b3480156101d757600080fd5b506305f5e1005b6040519081526020016101c2565b3480156101f857600080fd5b50600554600160a01b900460ff166101b6565b34801561021757600080fd5b5061019461054e565b34801561022c57600080fd5b5061024061023b366004611f69565b610606565b6040516101c29190612048565b34801561025957600080fd5b506101946102683660046120a7565b61076a565b34801561027957600080fd5b50610194610288366004611f69565b610868565b34801561029957600080fd5b506007546001600160a01b03165b6040516001600160a01b0390911681526020016101c2565b3480156102cb57600080fd5b506102db67de41ba4fc9d91ad981565b60405167ffffffffffffffff90911681526020016101c2565b34801561030057600080fd5b50610194610b59565b34801561031557600080fd5b506101946103243660046120c4565b610b6d565b34801561033557600080fd5b506102a77f000000000000000000000000000000000000000000000000000000000000000081565b34801561036957600080fd5b5061019461037836600461211c565b610be2565b34801561038957600080fd5b506005546001600160a01b03166102a7565b3480156103a757600080fd5b50610194610c31565b3480156103bc57600080fd5b506101946103cb3660046120a7565b610d2c565b3480156103dc57600080fd5b506006546101de565b3480156103f157600080fd5b50610194610400366004612153565b610d63565b34801561041157600080fd5b506102db67adecc60412ce25a581565b34801561042d57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102a7565b34801561046057600080fd5b5061019461046f3660046121d6565b61109f565b34801561048057600080fd5b5061019461048f366004612202565b6110d0565b3480156104a057600080fd5b506101946110e1565b3480156104b557600080fd5b506102db6724f9b897ef58a92281565b3480156104d157600080fd5b506101946104e03660046120a7565b611394565b60006001600160e01b031982167f85572ffb00000000000000000000000000000000000000000000000000000000148061054857506001600160e01b031982167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b6105566113e8565b47600080336001600160a01b03168360405160006040518083038185875af1925050503d80600081146105a5576040519150601f19603f3d011682016040523d82523d6000602084013e6105aa565b606091505b5091509150816106015760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e6420457468657200000000000000000000000060448201526064015b60405180910390fd5b505050565b6040805161010081018252606060808201818152600060a0840181905260c0840181905260e084018190529083526020830181905292820183905281019190915260008281526008602090815260408083208151815461012094810282018501909352610100810183815290949193859360808501938693859390928592909188015b828210156106f5576000848152602090819020830180546040805182850281018501909152818152928301828280156106e157602002820191906000526020600020905b8154815260200190600101908083116106cd575b505050505081526020019060010190610689565b5050509082525060018201546020808301919091526002909201546001600160a01b03811660408084019190915260ff600160a01b9092048216151560609384015293855260038601549285019290925260049094015480821615159284019290925261010090910416151591015292915050565b6107726113e8565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156107bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107df919061221f565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af115801561083e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108629190612238565b50505050565b61087061142e565b600554600160a01b900460ff166108dc5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084016105f8565b6305f5e1006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610955573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610979919061221f565b116109c65760405162461bcd60e51b815260206004820152601160248201527f496e636f7272656374207061796d656e7400000000000000000000000000000060448201526064016105f8565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b0390911660048201523060248201526305f5e10060448201526064016020604051808303816000875af1158015610a4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a729190612238565b90508015610b4b57604080516001808252818301909252600091602080830190803683370190505090508281600081518110610ab057610ab061226b565b6020908102919091010152604080516001808252818301909252600091816020015b6060815260200190600190039081610ad25790505090508181600081518110610afd57610afd61226b565b60200260200101819052506000604051806080016040528083815260200160018152602001610b293390565b6001600160a01b0316815260006020909101529050610b4781611471565b5050505b50610b566001600455565b50565b610b616113e8565b610b6b60006115f9565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610bd1576040517fd7f733340000000000000000000000000000000000000000000000000000000081523360048201526024016105f8565b610b56610bdd8261242a565b611658565b610bea6113e8565b67ffffffffffffffff82166000908152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383161790555050565b5050565b610c396113e8565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610c82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca6919061221f565b6001549091506001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610d08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2d9190612238565b610d346113e8565b6007805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610d6b61142e565b600554600160a01b900460ff16610dd75760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084016105f8565b600080826005811115610e16576040517f298ebe3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a83108015610e2557508082105b15610e5f57848483818110610e3c57610e3c61226b565b9050602002810190610e4e91906124d7565b939093019250600190910190610e16565b600a831115610e9a576040517f529a187000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610eaa846305f5e100612521565b9050806001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610f21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f45919061221f565b1015610f935760405162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742046756e6473000000000000000000000000000060448201526064016105f8565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303816000875af1158015611018573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103c9190612238565b90508015611090576000604051806080016040528089899061105e9190612546565b81526020018781526020016110703390565b6001600160a01b031681526001602090910152905061108e81611471565b505b5050505050610c2d6001600455565b6110a76113e8565b67ffffffffffffffff82166000908152600360205260409020805460ff19168215151790555050565b6110d86113e8565b610b56816118ed565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561112a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114e919061221f565b6001549091506001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156111b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d49190612238565b5047600080336001600160a01b03168360405160006040518083038185875af1925050503d8060008114611224576040519150601f19603f3d011682016040523d82523d6000602084013e611229565b606091505b50915091508161127b5760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e6420457468657200000000000000000000000060448201526064016105f8565b6040516370a0823160e01b81523060048201527f0000000000000000000000000000000000000000000000000000000000000000906000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156112e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611308919061221f565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015611367573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138b9190612238565b50505050505050565b61139c6113e8565b6001600160a01b0381166113df576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016105f8565b610b56816115f9565b6005546001600160a01b03163314610b6b576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016105f8565b60026004540361146a576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600455565b6007546040516000916114b0916001600160a01b039091169061149890859060200161260c565b604051602081830303815290604052621e8480611951565b905060006114c667adecc60412ce25a583611aa7565b9050807f43ccb67192c8495f6c3929fa31dddb58ffc5726cd01b81e14b1b3fbdd0413a1a846040015160405161150b91906001600160a01b0391909116815260200190565b60405180910390a26040805160808101825284815260208082018490526000828401819052606083018190528481526008825292909220815180518051939492939192849261155d9284920190611e44565b506020828101516001830155604080840151600290930180546060958601511515600160a01b027fffffffffffffffffffffff0000000000000000000000000000000000000000009091166001600160a01b039095169490941793909317909255840151600384015583015160049092018054939091015115156101000261ff00199215159290921661ffff1990931692909217179055505050565b600580546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80602001518160400151806020019051810190611675919061261f565b67ffffffffffffffff821660009081526003602052604090205460ff166116d3576040517e651a9900000000000000000000000000000000000000000000000000000000815267ffffffffffffffff831660048201526024016105f8565b67ffffffffffffffff82166000908152600260205260409020546001600160a01b0382811691161461173b576040517e0e48e30000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526024016105f8565b8251606084015180516000916117599181016020908101910161263c565b9050846020015167ffffffffffffffff16827fb88ce2d04299f9522d2b89873660c7d0ead5d1243e708bd6adb2179ee0e3d8e587604001518060200190518101906117a4919061261f565b604080516001600160a01b039092168252855160208084019190915286015115159082015260600160405180910390a36000828152600860209081526040909120600401805460ff19166001179055810151156118e657600082815260086020526040902060028101546001909101546001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263a9059cbb92911690611857906305f5e100612521565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156118a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118c69190612238565b506000828152600860205260409020600401805461ff0019166101001790555b5050505050565b600580547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b61198c6040518060a0016040528060608152602001606081526020016060815260200160006001600160a01b03168152602001606081525090565b6040805160a081019091526001600160a01b03851660c08201528060e0810160408051808303601f190181529181529082526020808301879052815160008082529181018352929091019190611a04565b60408051808201909152600080825260208201528152602001906001900390816119dd5790505b508152602001611a12611ac0565b6001600160a01b03168152602001611a9d60405180602001604052808681525060408051915160248084019190915281518084039091018152604490920190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f97a657c90000000000000000000000000000000000000000000000000000000017905290565b9052949350505050565b6000806000611ab68585611aeb565b5095945050505050565b600154600090600160a01b900460ff1615611ae557506001546001600160a01b031690565b50600090565b6000806000306001600160a01b031663b0f479a16040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b52919061261f565b6040517f20487ded0000000000000000000000000000000000000000000000000000000081529091506001600160a01b038216906320487ded90611b9c90889088906004016126ba565b602060405180830381865afa158015611bb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bdd919061221f565b600154909250600090600160a01b900460ff1615611d97576001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611c3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c61919061221f565b905080831115611c8e57604051634787a10360e11b815260048101829052602481018490526044016105f8565b6001546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b038481166004830152602482018690529091169063095ea7b3906044016020604051808303816000875af1158015611cfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d1e9190612238565b506040516396f4e9f960e01b81526001600160a01b038316906396f4e9f990611d4d90899089906004016126ba565b6020604051808303816000875af1158015611d6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d90919061221f565b9350611e3a565b504780831115611dc457604051634787a10360e11b815260048101829052602481018490526044016105f8565b6040516396f4e9f960e01b81526001600160a01b038316906396f4e9f9908590611df4908a908a906004016126ba565b60206040518083038185885af1158015611e12573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611e37919061221f565b93505b50505b9250929050565b828054828255906000526020600020908101928215611e91579160200282015b82811115611e915782518051611e81918491602090910190611ea1565b5091602001919060010190611e64565b50611e9d929150611ee8565b5090565b828054828255906000526020600020908101928215611edc579160200282015b82811115611edc578251825591602001919060010190611ec1565b50611e9d929150611f05565b80821115611e9d576000611efc8282611f1a565b50600101611ee8565b5b80821115611e9d5760008155600101611f06565b5080546000825590600052602060002090810190610b569190611f05565b600060208284031215611f4a57600080fd5b81356001600160e01b031981168114611f6257600080fd5b9392505050565b600060208284031215611f7b57600080fd5b5035919050565b60006080830182516080855281815180845260a08701915060a08160051b8801019350602080840193506000805b8381101561200457898703609f19018552855180518089529084019084890190845b81811015611fee57835183529286019291860191600101611fd2565b5090985050509482019493820193600101611fb0565b5050808701518189015250505050604083015161202c60408601826001600160a01b03169052565b506060830151612040606086018215159052565b509392505050565b60208152600082516080602084015261206460a0840182611f82565b9050602084015160408401526040840151151560608401526060840151151560808401528091505092915050565b6001600160a01b0381168114610b5657600080fd5b6000602082840312156120b957600080fd5b8135611f6281612092565b6000602082840312156120d657600080fd5b813567ffffffffffffffff8111156120ed57600080fd5b820160a08185031215611f6257600080fd5b803567ffffffffffffffff8116811461211757600080fd5b919050565b6000806040838503121561212f57600080fd5b612138836120ff565b9150602083013561214881612092565b809150509250929050565b6000806020838503121561216657600080fd5b823567ffffffffffffffff8082111561217e57600080fd5b818501915085601f83011261219257600080fd5b8135818111156121a157600080fd5b8660208260051b85010111156121b657600080fd5b60209290920196919550909350505050565b8015158114610b5657600080fd5b600080604083850312156121e957600080fd5b6121f2836120ff565b91506020830135612148816121c8565b60006020828403121561221457600080fd5b8135611f62816121c8565b60006020828403121561223157600080fd5b5051919050565b60006020828403121561224a57600080fd5b8151611f62816121c8565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6040805190810167ffffffffffffffff811182821017156122a4576122a4612255565b60405290565b60405160a0810167ffffffffffffffff811182821017156122a4576122a4612255565b604051601f8201601f1916810167ffffffffffffffff811182821017156122f6576122f6612255565b604052919050565b600082601f83011261230f57600080fd5b813567ffffffffffffffff81111561232957612329612255565b61233c601f8201601f19166020016122cd565b81815284602083860101111561235157600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff82111561238857612388612255565b5060051b60200190565b600082601f8301126123a357600080fd5b813560206123b86123b38361236e565b6122cd565b82815260069290921b840181019181810190868411156123d757600080fd5b8286015b8481101561241f57604081890312156123f45760008081fd5b6123fc612281565b813561240781612092565b815281850135858201528352918301916040016123db565b509695505050505050565b600060a0823603121561243c57600080fd5b6124446122aa565b82358152612454602084016120ff565b6020820152604083013567ffffffffffffffff8082111561247457600080fd5b612480368387016122fe565b6040840152606085013591508082111561249957600080fd5b6124a5368387016122fe565b606084015260808501359150808211156124be57600080fd5b506124cb36828601612392565b60808301525092915050565b6000808335601e198436030181126124ee57600080fd5b83018035915067ffffffffffffffff82111561250957600080fd5b6020019150600581901b3603821315611e3d57600080fd5b808202811582820484141761054857634e487b7160e01b600052601160045260246000fd5b60006125546123b38461236e565b83815260208082019190600586811b86013681111561257257600080fd5b865b818110156125ff57803567ffffffffffffffff8111156125945760008081fd5b880136601f8201126125a65760008081fd5b80356125b46123b38261236e565b81815290851b820186019086810190368311156125d15760008081fd5b928701925b828410156125ef578335825292870192908701906125d6565b8952505050948301948301612574565b5092979650505050505050565b602081526000611f626020830184611f82565b60006020828403121561263157600080fd5b8151611f6281612092565b60006040828403121561264e57600080fd5b612656612281565b825181526020830151612668816121c8565b60208201529392505050565b6000815180845260005b8181101561269a5760208185018101518683018201520161267e565b506000602082860101526020601f19601f83011685010191505092915050565b6000604067ffffffffffffffff8516835260208181850152845160a0838601526126e760e0860182612674565b905081860151603f19808784030160608801526127048383612674565b88860151888203830160808a01528051808352908601945060009350908501905b8084101561275757845180516001600160a01b0316835286015186830152938501936001939093019290860190612725565b5060608901516001600160a01b031660a08901526080890151888203830160c08a015295506127868187612674565b9a995050505050505050505056fea26469706673582212205cee737605d11f03e4402fc9e6c35492e19794862b6dee1e116e54cbd05f0b9164736f6c63430008140033";

type BlockStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockStore__factory extends ContractFactory {
  constructor(...args: BlockStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router_: AddressLike,
    ghoTokenAddress_: AddressLike,
    blockSalesContract_: AddressLike,
    linkToken_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      router_,
      ghoTokenAddress_,
      blockSalesContract_,
      linkToken_,
      overrides || {}
    );
  }
  override deploy(
    router_: AddressLike,
    ghoTokenAddress_: AddressLike,
    blockSalesContract_: AddressLike,
    linkToken_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      router_,
      ghoTokenAddress_,
      blockSalesContract_,
      linkToken_,
      overrides || {}
    ) as Promise<
      BlockStore & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlockStore__factory {
    return super.connect(runner) as BlockStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockStoreInterface {
    return new Interface(_abi) as BlockStoreInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BlockStore {
    return new Contract(address, _abi, runner) as unknown as BlockStore;
  }
}
