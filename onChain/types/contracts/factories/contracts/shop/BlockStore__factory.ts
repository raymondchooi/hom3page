/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BlockStore,
  BlockStoreInterface,
} from "../../../contracts/shop/BlockStore";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ghoTokenAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "blockSalesContract_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractTringToMessage_",
        type: "address",
      },
    ],
    name: "MessageNotFromBLockSales",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainMessageOriginated",
        type: "uint64",
      },
    ],
    name: "MessageNotFromSalesChain",
    type: "error",
  },
  {
    inputs: [],
    name: "NotBlockSalesContract",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "calculatedFees",
        type: "uint256",
      },
    ],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderExceedsMaxAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderToLargeMax10",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ToManyElementsInBuyArray",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "salesMessageId_",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockStore.SaleRecipe",
        name: "payload",
        type: "tuple",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256[][]",
            name: "tokens_",
            type: "uint256[][]",
          },
          {
            internalType: "uint256",
            name: "totalItems_",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer_",
            type: "address",
          },
          {
            internalType: "bool",
            name: "multiBuy_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockStore.Sale",
        name: "payload",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "SaleMade",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "GHO",
    outputs: [
      {
        internalType: "contract IGhoToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[][]",
        name: "tokenIds_",
        type: "uint256[][]",
      },
    ],
    name: "buyBatchBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "buyBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "saleId_",
        type: "bytes32",
      },
    ],
    name: "getSaleStatus",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256[][]",
                name: "tokens_",
                type: "uint256[][]",
              },
              {
                internalType: "uint256",
                name: "totalItems_",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "buyer_",
                type: "address",
              },
              {
                internalType: "bool",
                name: "multiBuy_",
                type: "bool",
              },
            ],
            internalType: "struct IBlockStore.Sale",
            name: "saleData_",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "messageId_",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "saleComplete_",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "saleFailed_",
            type: "bool",
          },
        ],
        internalType: "struct IBlockStore.SaleStore",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress_",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e06040526001805460ff60a01b1916600160a01b1790553480156200002457600080fd5b506040516200212038038062002120833981016040819052620000479162000157565b33836001600160a01b03811662000079576040516335fdcccd60e21b8152600060048201526024015b60405180910390fd5b6001600160a01b0390811660805260016000558116620000b057604051631e4fbdf760e01b81526000600482015260240162000070565b620000bb81620000e8565b50600380546001600160a01b0319166001600160a01b0394851617905590821660a0521660c052620001a1565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200015257600080fd5b919050565b6000806000606084860312156200016d57600080fd5b62000178846200013a565b925062000188602085016200013a565b915062000198604085016200013a565b90509250925092565b60805160a05160c051611f1e6200020260003960008181610e080152610fe40152600081816102cf0152818161058b0152818161067201528181610a9101528181610b7901526111b001526000818161029901526108d10152611f1e6000f3fe6080604052600436106100eb5760003560e01c80638da5cb5b11610084578063b0f479a111610056578063b0f479a11461028a578063b8d008f3146102bd578063bfe22a01146102f1578063f2fde38b1461031157005b80638da5cb5b146102035780639d7b8e6814610235578063a13157ca1461024a578063a522ad251461026a57005b806354b58b1c116100bd57806354b58b1c1461019b57806368742da6146101bb578063715018a6146101ce57806385572ffb146101e357005b806301ffc9a7146100f4578063028acce41461012957806322f3e2d41461014f578063422dca361461016e57005b366100f257005b005b34801561010057600080fd5b5061011461010f36600461174f565b610331565b60405190151581526020015b60405180910390f35b34801561013557600080fd5b5068056bc75e2d631000005b604051908152602001610120565b34801561015b57600080fd5b50600154600160a01b900460ff16610114565b34801561017a57600080fd5b5061018e610189366004611780565b61039a565b604051610120919061185f565b3480156101a757600080fd5b506100f26101b6366004611780565b6104fe565b6100f26101c93660046118be565b6107fe565b3480156101da57600080fd5b506100f26108b2565b3480156101ef57600080fd5b506100f26101fe3660046118db565b6108c6565b34801561020f57600080fd5b506001546001600160a01b03165b6040516001600160a01b039091168152602001610120565b34801561024157600080fd5b50600254610141565b34801561025657600080fd5b506100f2610265366004611916565b61093b565b34801561027657600080fd5b506100f261028536600461198b565b610c2b565b34801561029657600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061021d565b3480156102c957600080fd5b5061021d7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102fd57600080fd5b506100f261030c3660046119d2565b610d50565b34801561031d57600080fd5b506100f261032c3660046118be565b610d61565b60006001600160e01b031982167f85572ffb00000000000000000000000000000000000000000000000000000000148061039457506001600160e01b031982167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b6040805161010081018252606060808201818152600060a0840181905260c0840181905260e084018190529083526020830181905292820183905281019190915260008281526005602090815260408083208151815461012094810282018501909352610100810183815290949193859360808501938693859390928592909188015b828210156104895760008481526020908190208301805460408051828502810185019091528181529283018282801561047557602002820191906000526020600020905b815481526020019060010190808311610461575b50505050508152602001906001019061041d565b5050509082525060018201546020808301919091526002909201546001600160a01b03811660408084019190915260ff600160a01b9092048216151560609384015293855260038601549285019290925260049094015480821615159284019290925261010090910416151591015292915050565b610506610db5565b600154600160a01b900460ff166105775760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084015b60405180910390fd5b68056bc75e2d631000006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156105f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061991906119ef565b116106665760405162461bcd60e51b815260206004820152601160248201527f496e636f7272656374207061796d656e74000000000000000000000000000000604482015260640161056e565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015268056bc75e2d6310000060448201526064016020604051808303816000875af11580156106f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107179190611a08565b905080156107f05760408051600180825281830190925260009160208083019080368337019050509050828160008151811061075557610755611a3b565b6020908102919091010152604080516001808252818301909252600091816020015b606081526020019060019003908161077757905050905081816000815181106107a2576107a2611a3b565b602002602001018190525060006040518060800160405280838152602001600181526020016107ce3390565b6001600160a01b03168152600060209091015290506107ec81610df8565b5050505b506107fb6001600055565b50565b610806610f15565b604051479060009081906001600160a01b0385169084908381818185875af1925050503d8060008114610855576040519150601f19603f3d011682016040523d82523d6000602084013e61085a565b606091505b5091509150816108ac5760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e64204574686572000000000000000000000000604482015260640161056e565b50505050565b6108ba610f15565b6108c46000610f5b565b565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461092a576040517fd7f7333400000000000000000000000000000000000000000000000000000000815233600482015260240161056e565b6107fb61093682611c08565b610fc5565b610943610db5565b600154600160a01b900460ff166109af5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b606482015260840161056e565b6000808260058111156109ee576040517f298ebe3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a831080156109fd57508082105b15610a3457848483818110610a1457610a14611a3b565b9050602002810190610a269190611cb5565b9350506001909101906109ee565b600a831115610a6f576040517f529a187000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610a848468056bc75e2d63100000611d06565b9050806001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610afb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1f91906119ef565b1015610b6d5760405162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742046756e64730000000000000000000000000000604482015260640161056e565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303816000875af1158015610bf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c169190611a08565b90505050505050610c276001600055565b5050565b610c33610f15565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610c95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb991906119ef565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018390529192509083169063a9059cbb906044016020604051808303816000875af1158015610d25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d499190611a08565b5050505050565b610d58610f15565b6107fb81611265565b610d69610f15565b6001600160a01b038116610dac576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526000600482015260240161056e565b6107fb81610f5b565b600260005403610df1576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600055565b6000610e2d6724f9b897ef58a9227f0000000000000000000000000000000000000000000000000000000000000000846112c9565b60408051608081018252848152602080820184905260008284018190526060830181905284815260058252929092208151805180519596509294919390928492610e7a928492019061165b565b506020828101516001830155604080840151600290930180546060958601511515600160a01b027fffffffffffffffffffffff0000000000000000000000000000000000000000009091166001600160a01b039095169490941793909317909255840151600384015583015160049092018054939091015115156101000261ff00199215159290921661ffff19909316929092171790555050565b6001546001600160a01b031633146108c4576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240161056e565b600180546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8060400151806020019051810190610fdd9190611d2b565b81602001517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614611058576040517fd5de6c100000000000000000000000000000000000000000000000000000000081526001600160a01b038316600482015260240161056e565b67ffffffffffffffff81166724f9b897ef58a922146110ae576040517e651a9900000000000000000000000000000000000000000000000000000000815267ffffffffffffffff8216600482015260240161056e565b8251606084015180516000916110cc91810160209081019101611d48565b9050846020015167ffffffffffffffff16827fb88ce2d04299f9522d2b89873660c7d0ead5d1243e708bd6adb2179ee0e3d8e587604001518060200190518101906111179190611d2b565b604080516001600160a01b039092168252855160208084019190915286015115159082015260600160405180910390a36000828152600560209081526040909120600401805460ff191660011790558101511561118d576000828152600560205260409020600401805461ff0019169055610d49565b600082815260056020526040902060028101546001909101546001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263a9059cbb929116906111ee9068056bc75e2d63100000611d06565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611239573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125d9190611a08565b505050505050565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b60006112d3610f15565b60006112e1848460006114e1565b90506000306001600160a01b031663b0f479a16040518163ffffffff1660e01b8152600401602060405180830381865afa158015611323573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113479190611d2b565b90506000816001600160a01b03166320487ded88856040518363ffffffff1660e01b8152600401611379929190611dc6565b602060405180830381865afa158015611396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ba91906119ef565b9050478111156113ff576040517f8f0f42060000000000000000000000000000000000000000000000000000000081524760048201526024810182905260440161056e565b6040517f96f4e9f90000000000000000000000000000000000000000000000000000000081526001600160a01b038316906396f4e9f9908390611448908b908890600401611dc6565b60206040518083038185885af1158015611466573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061148b91906119ef565b93508667ffffffffffffffff16847ff3daec95947ed2daeaa18ee62a717c54cde3c080724a84a0b867fd53bd26b08f88886000866040516114cf9493929190611ea0565b60405180910390a35050509392505050565b61151c6040518060a0016040528060608152602001606081526020016060815260200160006001600160a01b03168152602001606081525090565b6040805160a081019091526001600160a01b03851660c08201528060e081016040516020818303038152906040528152602001846040516020016115609190611ed5565b60408051601f19818403018152919052815260200160006040519080825280602002602001820160405280156115bc57816020015b60408051808201909152600080825260208201528152602001906001900390816115955790505b508152602001836001600160a01b031681526020016116516040518060200160405280621e848081525060408051915160248084019190915281518084039091018152604490920190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f97a657c90000000000000000000000000000000000000000000000000000000017905290565b9052949350505050565b8280548282559060005260206000209081019282156116a8579160200282015b828111156116a857825180516116989184916020909101906116b8565b509160200191906001019061167b565b506116b49291506116ff565b5090565b8280548282559060005260206000209081019282156116f3579160200282015b828111156116f35782518255916020019190600101906116d8565b506116b492915061171c565b808211156116b45760006117138282611731565b506001016116ff565b5b808211156116b4576000815560010161171d565b50805460008255906000526020600020908101906107fb919061171c565b60006020828403121561176157600080fd5b81356001600160e01b03198116811461177957600080fd5b9392505050565b60006020828403121561179257600080fd5b5035919050565b60006080830182516080855281815180845260a08701915060a08160051b8801019350602080840193506000805b8381101561181b57898703609f19018552855180518089529084019084890190845b81811015611805578351835292860192918601916001016117e9565b50909850505094820194938201936001016117c7565b5050808701518189015250505050604083015161184360408601826001600160a01b03169052565b506060830151611857606086018215159052565b509392505050565b60208152600082516080602084015261187b60a0840182611799565b9050602084015160408401526040840151151560608401526060840151151560808401528091505092915050565b6001600160a01b03811681146107fb57600080fd5b6000602082840312156118d057600080fd5b8135611779816118a9565b6000602082840312156118ed57600080fd5b813567ffffffffffffffff81111561190457600080fd5b820160a0818503121561177957600080fd5b6000806020838503121561192957600080fd5b823567ffffffffffffffff8082111561194157600080fd5b818501915085601f83011261195557600080fd5b81358181111561196457600080fd5b8660208260051b850101111561197957600080fd5b60209290920196919550909350505050565b6000806040838503121561199e57600080fd5b82356119a9816118a9565b915060208301356119b9816118a9565b809150509250929050565b80151581146107fb57600080fd5b6000602082840312156119e457600080fd5b8135611779816119c4565b600060208284031215611a0157600080fd5b5051919050565b600060208284031215611a1a57600080fd5b8151611779816119c4565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6040805190810167ffffffffffffffff81118282101715611a7457611a74611a25565b60405290565b60405160a0810167ffffffffffffffff81118282101715611a7457611a74611a25565b604051601f8201601f1916810167ffffffffffffffff81118282101715611ac657611ac6611a25565b604052919050565b803567ffffffffffffffff81168114611ae657600080fd5b919050565b600082601f830112611afc57600080fd5b813567ffffffffffffffff811115611b1657611b16611a25565b611b29601f8201601f1916602001611a9d565b818152846020838601011115611b3e57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112611b6c57600080fd5b8135602067ffffffffffffffff821115611b8857611b88611a25565b611b96818360051b01611a9d565b82815260069290921b84018101918181019086841115611bb557600080fd5b8286015b84811015611bfd5760408189031215611bd25760008081fd5b611bda611a51565b8135611be5816118a9565b81528185013585820152835291830191604001611bb9565b509695505050505050565b600060a08236031215611c1a57600080fd5b611c22611a7a565b82358152611c3260208401611ace565b6020820152604083013567ffffffffffffffff80821115611c5257600080fd5b611c5e36838701611aeb565b60408401526060850135915080821115611c7757600080fd5b611c8336838701611aeb565b60608401526080850135915080821115611c9c57600080fd5b50611ca936828601611b5b565b60808301525092915050565b6000808335601e19843603018112611ccc57600080fd5b83018035915067ffffffffffffffff821115611ce757600080fd5b6020019150600581901b3603821315611cff57600080fd5b9250929050565b808202811582820484141761039457634e487b7160e01b600052601160045260246000fd5b600060208284031215611d3d57600080fd5b8151611779816118a9565b600060408284031215611d5a57600080fd5b611d62611a51565b825181526020830151611d74816119c4565b60208201529392505050565b6000815180845260005b81811015611da657602081850181015186830182015201611d8a565b506000602082860101526020601f19601f83011685010191505092915050565b6000604067ffffffffffffffff8516835260208181850152845160a083860152611df360e0860182611d80565b905081860151603f1980878403016060880152611e108383611d80565b88860151888203830160808a01528051808352908601945060009350908501905b80841015611e6357845180516001600160a01b0316835286015186830152938501936001939093019290860190611e31565b5060608901516001600160a01b031660a08901526080890151888203830160c08a01529550611e928187611d80565b9a9950505050505050505050565b60006001600160a01b03808716835260806020840152611ec36080840187611799565b94166040830152506060015292915050565b602081526000611779602083018461179956fea2646970667358221220abbcc2771dc195c380784a4b04989f7d6fc58f09ba5437926546b94cc8e8497164736f6c63430008140033";

type BlockStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockStore__factory extends ContractFactory {
  constructor(...args: BlockStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router_: AddressLike,
    ghoTokenAddress_: AddressLike,
    blockSalesContract_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      router_,
      ghoTokenAddress_,
      blockSalesContract_,
      overrides || {}
    );
  }
  override deploy(
    router_: AddressLike,
    ghoTokenAddress_: AddressLike,
    blockSalesContract_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      router_,
      ghoTokenAddress_,
      blockSalesContract_,
      overrides || {}
    ) as Promise<
      BlockStore & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlockStore__factory {
    return super.connect(runner) as BlockStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockStoreInterface {
    return new Interface(_abi) as BlockStoreInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BlockStore {
    return new Contract(address, _abi, runner) as unknown as BlockStore;
  }
}
