/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BlockStore,
  BlockStoreInterface,
} from "../../../contracts/shop/BlockStore";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ghoTokenAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "blockSalesContract_",
        type: "address",
      },
      {
        internalType: "address",
        name: "linkToken_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "note_",
        type: "string",
      },
    ],
    name: "DEVELOPMENT_ERROR",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractTringToMessage_",
        type: "address",
      },
    ],
    name: "MessageNotFromBlockSales",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainMessageOriginated",
        type: "uint64",
      },
    ],
    name: "MessageNotFromSalesChain",
    type: "error",
  },
  {
    inputs: [],
    name: "NotBlockSalesContract",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "calculatedFees",
        type: "uint256",
      },
    ],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderExceedsMaxAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderToLargeMax10",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ToManyElementsInBuyArray",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "salesMessageId_",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "failed_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockStore.SaleRecipe",
        name: "payload",
        type: "tuple",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256[][]",
            name: "tokens_",
            type: "uint256[][]",
          },
          {
            internalType: "uint256",
            name: "totalItems_",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer_",
            type: "address",
          },
          {
            internalType: "bool",
            name: "multiBuy_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockStore.Sale",
        name: "payload",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId_",
        type: "bytes32",
      },
    ],
    name: "SaleFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "SaleMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId_",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
    ],
    name: "SaleSubmitted",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "PAYMENT_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[][]",
        name: "tokenIds_",
        type: "uint256[][]",
      },
    ],
    name: "buyBatchBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "buyBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "saleId_",
        type: "bytes32",
      },
    ],
    name: "getSaleStatus",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256[][]",
                name: "tokens_",
                type: "uint256[][]",
              },
              {
                internalType: "uint256",
                name: "totalItems_",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "buyer_",
                type: "address",
              },
              {
                internalType: "bool",
                name: "multiBuy_",
                type: "bool",
              },
            ],
            internalType: "struct IBlockStore.Sale",
            name: "saleData_",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "messageId_",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "saleComplete_",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "saleFailed_",
            type: "bool",
          },
        ],
        internalType: "struct IBlockStore.SaleStore",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSalesContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress_",
        type: "address",
      },
    ],
    name: "setSalesContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllToDev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040526001805460ff60a01b1916600160a01b1790553480156200002457600080fd5b506040516200261438038062002614833981016040819052620000479162000174565b33846001600160a01b03811662000079576040516335fdcccd60e21b8152600060048201526024015b60405180910390fd5b6001600160a01b0390811660805260016000558116620000b057604051631e4fbdf760e01b81526000600482015260240162000070565b620000bb8162000105565b50600380546001600160a01b039586166001600160a01b03199182161790915592841660a052600580549285169284169290921790915560048054919093169116179055620001d1565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200016f57600080fd5b919050565b600080600080608085870312156200018b57600080fd5b620001968562000157565b9350620001a66020860162000157565b9250620001b66040860162000157565b9150620001c66060860162000157565b905092959194509250565b60805160a0516123ec62000228600039600081816102c4015281816107fc015281816108e301528181610c7e01528181610d660152818161102c01526116660152600081816103680152610a8901526123ec6000f3fe60806040526004361061014b5760003560e01c8063877c86fb116100b4578063b0f479a11161006e578063e8a6b60f11610056578063e8a6b60f146103ac578063f2fde38b146103c1578063fac62be4146103e157005b8063b0f479a114610359578063bfe22a011461038c57005b80639b5719a61161009c5780639b5719a6146103045780639d7b8e6814610324578063a13157ca1461033957005b8063877c86fb146102b25780638da5cb5b146102e657005b806349df728c1161010557806358c75e88116100ed57806358c75e881461024b578063715018a61461027d57806385572ffb1461029257005b806349df728c1461020b57806354b58b1c1461022b57005b806322f3e2d41161013357806322f3e2d4146101aa57806324600fc3146101c9578063422dca36146101de57005b806301ffc9a714610154578063028acce41461018957005b3661015257005b005b34801561016057600080fd5b5061017461016f366004611bb6565b6103f6565b60405190151581526020015b60405180910390f35b34801561019557600080fd5b506305f5e1005b604051908152602001610180565b3480156101b657600080fd5b50600154600160a01b900460ff16610174565b3480156101d557600080fd5b5061015261045f565b3480156101ea57600080fd5b506101fe6101f9366004611be7565b610517565b6040516101809190611cc6565b34801561021757600080fd5b50610152610226366004611d25565b61067b565b34801561023757600080fd5b50610152610246366004611be7565b610779565b34801561025757600080fd5b506005546001600160a01b03165b6040516001600160a01b039091168152602001610180565b34801561028957600080fd5b50610152610a6a565b34801561029e57600080fd5b506101526102ad366004611d42565b610a7e565b3480156102be57600080fd5b506102657f000000000000000000000000000000000000000000000000000000000000000081565b3480156102f257600080fd5b506001546001600160a01b0316610265565b34801561031057600080fd5b5061015261031f366004611d25565b610af3565b34801561033057600080fd5b5060025461019c565b34801561034557600080fd5b50610152610354366004611d7d565b610b2a565b34801561036557600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610265565b34801561039857600080fd5b506101526103a7366004611e00565b610e6a565b3480156103b857600080fd5b50610152610e7b565b3480156103cd57600080fd5b506101526103dc366004611d25565b611131565b3480156103ed57600080fd5b50610152611185565b60006001600160e01b031982167f85572ffb00000000000000000000000000000000000000000000000000000000148061045957506001600160e01b031982167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b610467611282565b47600080336001600160a01b03168360405160006040518083038185875af1925050503d80600081146104b6576040519150601f19603f3d011682016040523d82523d6000602084013e6104bb565b606091505b5091509150816105125760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e6420457468657200000000000000000000000060448201526064015b60405180910390fd5b505050565b6040805161010081018252606060808201818152600060a0840181905260c0840181905260e084018190529083526020830181905292820183905281019190915260008281526006602090815260408083208151815461012094810282018501909352610100810183815290949193859360808501938693859390928592909188015b82821015610606576000848152602090819020830180546040805182850281018501909152818152928301828280156105f257602002820191906000526020600020905b8154815260200190600101908083116105de575b50505050508152602001906001019061059a565b5050509082525060018201546020808301919091526002909201546001600160a01b03811660408084019190915260ff600160a01b9092048216151560609384015293855260038601549285019290925260049094015480821615159284019290925261010090910416151591015292915050565b610683611282565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156106cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f09190611e1d565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af115801561074f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107739190611e36565b50505050565b6107816112c8565b600154600160a01b900460ff166107ed5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b6064820152608401610509565b6305f5e1006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610866573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088a9190611e1d565b116108d75760405162461bcd60e51b815260206004820152601160248201527f496e636f7272656374207061796d656e740000000000000000000000000000006044820152606401610509565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b0390911660048201523060248201526305f5e10060448201526064016020604051808303816000875af115801561095f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109839190611e36565b90508015610a5c576040805160018082528183019092526000916020808301908036833701905050905082816000815181106109c1576109c1611e69565b6020908102919091010152604080516001808252818301909252600091816020015b60608152602001906001900390816109e35790505090508181600081518110610a0e57610a0e611e69565b60200260200101819052506000604051806080016040528083815260200160018152602001610a3a3390565b6001600160a01b0316815260006020909101529050610a588161130b565b5050505b50610a676001600055565b50565b610a72611282565b610a7c6000611460565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ae2576040517fd7f73334000000000000000000000000000000000000000000000000000000008152336004820152602401610509565b610a67610aee82612045565b6114bf565b610afb611282565b6005805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610b326112c8565b600154600160a01b900460ff16610b9e5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b6064820152608401610509565b600080826005811115610bdd576040517f298ebe3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a83108015610bec57508082105b15610c2657848483818110610c0357610c03611e69565b9050602002810190610c1591906120f2565b939093019250600190910190610bdd565b600a831115610c61576040517f529a187000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610c71846305f5e100612143565b9050806001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610ce8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0c9190611e1d565b1015610d5a5760405162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742046756e647300000000000000000000000000006044820152606401610509565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303816000875af1158015610ddf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e039190611e36565b90508015610e575760006040518060800160405280898990610e259190612168565b8152602001878152602001610e373390565b6001600160a01b0316815260016020909101529050610e558161130b565b505b5050505050610e666001600055565b5050565b610e72611282565b610a6781611717565b600480546040516370a0823160e01b815230928101929092526001600160a01b03169060009082906370a0823190602401602060405180830381865afa158015610ec9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eed9190611e1d565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610f4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f709190611e36565b5047600080336001600160a01b03168360405160006040518083038185875af1925050503d8060008114610fc0576040519150601f19603f3d011682016040523d82523d6000602084013e610fc5565b606091505b5091509150816110175760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e642045746865720000000000000000000000006044820152606401610509565b6040516370a0823160e01b81523060048201527f0000000000000000000000000000000000000000000000000000000000000000906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611080573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a49190611e1d565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015611103573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111279190611e36565b5050505050505050565b611139611282565b6001600160a01b03811661117c576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610509565b610a6781611460565b61118d611282565b600480546040516370a0823160e01b815230928101929092526001600160a01b03169060009082906370a0823190602401602060405180830381865afa1580156111db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ff9190611e1d565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af115801561125e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105129190611e36565b6001546001600160a01b03163314610a7c576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610509565b600260005403611304576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600055565b60055460009061132e9067adecc60412ce25a5906001600160a01b03168461177b565b9050807f43ccb67192c8495f6c3929fa31dddb58ffc5726cd01b81e14b1b3fbdd0413a1a836040015160405161137391906001600160a01b0391909116815260200190565b60405180910390a2604080516080810182528381526020808201849052600082840181905260608301819052848152600682529290922081518051805193949293919284926113c59284920190611ac2565b506020828101516001830155604080840151600290930180546060958601511515600160a01b027fffffffffffffffffffffff0000000000000000000000000000000000000000009091166001600160a01b039095169490941793909317909255840151600384015583015160049092018054939091015115156101000261ff00199215159290921661ffff19909316929092171790555050565b600180546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80604001518060200190518101906114d7919061222e565b60208201516005546001600160a01b0383811691161461152d576040517e0e48e30000000000000000000000000000000000000000000000000000000081526001600160a01b0383166004820152602401610509565b67ffffffffffffffff811667adecc60412ce25a514611583576040517e651a9900000000000000000000000000000000000000000000000000000000815267ffffffffffffffff82166004820152602401610509565b8251606084015180516000916115a19181016020908101910161224b565b9050846020015167ffffffffffffffff16827fb88ce2d04299f9522d2b89873660c7d0ead5d1243e708bd6adb2179ee0e3d8e587604001518060200190518101906115ec919061222e565b604080516001600160a01b039092168252855160208084019190915286015115159082015260600160405180910390a36000828152600660209081526040909120600401805460ff191660011790558101511561171057600082815260066020526040902060028101546001909101546001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263a9059cbb9291169061169f906305f5e100612143565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156116ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170e9190611e36565b505b5050505050565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b6000611785611282565b600061179384846000611948565b90506000306001600160a01b031663b0f479a16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f9919061222e565b90506000816001600160a01b03166320487ded88856040518363ffffffff1660e01b815260040161182b9291906122c9565b602060405180830381865afa158015611848573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186c9190611e1d565b9050478111156118b1576040517f8f0f420600000000000000000000000000000000000000000000000000000000815247600482015260248101829052604401610509565b6040517f96f4e9f90000000000000000000000000000000000000000000000000000000081526001600160a01b038316906396f4e9f99083906118fa908b9088906004016122c9565b60206040518083038185885af1158015611918573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061193d9190611e1d565b979650505050505050565b6119836040518060a0016040528060608152602001606081526020016060815260200160006001600160a01b03168152602001606081525090565b6040805160a081019091526001600160a01b03851660c08201528060e081016040516020818303038152906040528152602001846040516020016119c791906123a3565b60408051601f1981840301815291905281526020016000604051908082528060200260200182016040528015611a2357816020015b60408051808201909152600080825260208201528152602001906001900390816119fc5790505b508152602001836001600160a01b03168152602001611ab86040518060200160405280620f424081525060408051915160248084019190915281518084039091018152604490920190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f97a657c90000000000000000000000000000000000000000000000000000000017905290565b9052949350505050565b828054828255906000526020600020908101928215611b0f579160200282015b82811115611b0f5782518051611aff918491602090910190611b1f565b5091602001919060010190611ae2565b50611b1b929150611b66565b5090565b828054828255906000526020600020908101928215611b5a579160200282015b82811115611b5a578251825591602001919060010190611b3f565b50611b1b929150611b83565b80821115611b1b576000611b7a8282611b98565b50600101611b66565b5b80821115611b1b5760008155600101611b84565b5080546000825590600052602060002090810190610a679190611b83565b600060208284031215611bc857600080fd5b81356001600160e01b031981168114611be057600080fd5b9392505050565b600060208284031215611bf957600080fd5b5035919050565b60006080830182516080855281815180845260a08701915060a08160051b8801019350602080840193506000805b83811015611c8257898703609f19018552855180518089529084019084890190845b81811015611c6c57835183529286019291860191600101611c50565b5090985050509482019493820193600101611c2e565b50508087015181890152505050506040830151611caa60408601826001600160a01b03169052565b506060830151611cbe606086018215159052565b509392505050565b602081526000825160806020840152611ce260a0840182611c00565b9050602084015160408401526040840151151560608401526060840151151560808401528091505092915050565b6001600160a01b0381168114610a6757600080fd5b600060208284031215611d3757600080fd5b8135611be081611d10565b600060208284031215611d5457600080fd5b813567ffffffffffffffff811115611d6b57600080fd5b820160a08185031215611be057600080fd5b60008060208385031215611d9057600080fd5b823567ffffffffffffffff80821115611da857600080fd5b818501915085601f830112611dbc57600080fd5b813581811115611dcb57600080fd5b8660208260051b8501011115611de057600080fd5b60209290920196919550909350505050565b8015158114610a6757600080fd5b600060208284031215611e1257600080fd5b8135611be081611df2565b600060208284031215611e2f57600080fd5b5051919050565b600060208284031215611e4857600080fd5b8151611be081611df2565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6040805190810167ffffffffffffffff81118282101715611ea257611ea2611e53565b60405290565b60405160a0810167ffffffffffffffff81118282101715611ea257611ea2611e53565b604051601f8201601f1916810167ffffffffffffffff81118282101715611ef457611ef4611e53565b604052919050565b803567ffffffffffffffff81168114611f1457600080fd5b919050565b600082601f830112611f2a57600080fd5b813567ffffffffffffffff811115611f4457611f44611e53565b611f57601f8201601f1916602001611ecb565b818152846020838601011115611f6c57600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff821115611fa357611fa3611e53565b5060051b60200190565b600082601f830112611fbe57600080fd5b81356020611fd3611fce83611f89565b611ecb565b82815260069290921b84018101918181019086841115611ff257600080fd5b8286015b8481101561203a576040818903121561200f5760008081fd5b612017611e7f565b813561202281611d10565b81528185013585820152835291830191604001611ff6565b509695505050505050565b600060a0823603121561205757600080fd5b61205f611ea8565b8235815261206f60208401611efc565b6020820152604083013567ffffffffffffffff8082111561208f57600080fd5b61209b36838701611f19565b604084015260608501359150808211156120b457600080fd5b6120c036838701611f19565b606084015260808501359150808211156120d957600080fd5b506120e636828601611fad565b60808301525092915050565b6000808335601e1984360301811261210957600080fd5b83018035915067ffffffffffffffff82111561212457600080fd5b6020019150600581901b360382131561213c57600080fd5b9250929050565b808202811582820484141761045957634e487b7160e01b600052601160045260246000fd5b6000612176611fce84611f89565b83815260208082019190600586811b86013681111561219457600080fd5b865b8181101561222157803567ffffffffffffffff8111156121b65760008081fd5b880136601f8201126121c85760008081fd5b80356121d6611fce82611f89565b81815290851b820186019086810190368311156121f35760008081fd5b928701925b82841015612211578335825292870192908701906121f8565b8952505050948301948301612196565b5092979650505050505050565b60006020828403121561224057600080fd5b8151611be081611d10565b60006040828403121561225d57600080fd5b612265611e7f565b82518152602083015161227781611df2565b60208201529392505050565b6000815180845260005b818110156122a95760208185018101518683018201520161228d565b506000602082860101526020601f19601f83011685010191505092915050565b6000604067ffffffffffffffff8516835260208181850152845160a0838601526122f660e0860182612283565b905081860151603f19808784030160608801526123138383612283565b88860151888203830160808a01528051808352908601945060009350908501905b8084101561236657845180516001600160a01b0316835286015186830152938501936001939093019290860190612334565b5060608901516001600160a01b031660a08901526080890151888203830160c08a015295506123958187612283565b9a9950505050505050505050565b602081526000611be06020830184611c0056fea26469706673582212208505080a80cecdae5f33c77a46e94949577b5d2a1c9c7ee969b501628d4eb09064736f6c63430008140033";

type BlockStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockStore__factory extends ContractFactory {
  constructor(...args: BlockStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router_: AddressLike,
    ghoTokenAddress_: AddressLike,
    blockSalesContract_: AddressLike,
    linkToken_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      router_,
      ghoTokenAddress_,
      blockSalesContract_,
      linkToken_,
      overrides || {}
    );
  }
  override deploy(
    router_: AddressLike,
    ghoTokenAddress_: AddressLike,
    blockSalesContract_: AddressLike,
    linkToken_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      router_,
      ghoTokenAddress_,
      blockSalesContract_,
      linkToken_,
      overrides || {}
    ) as Promise<
      BlockStore & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlockStore__factory {
    return super.connect(runner) as BlockStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockStoreInterface {
    return new Interface(_abi) as BlockStoreInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BlockStore {
    return new Contract(address, _abi, runner) as unknown as BlockStore;
  }
}
