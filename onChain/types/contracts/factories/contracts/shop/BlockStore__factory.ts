/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BlockStore,
  BlockStoreInterface,
} from "../../../contracts/shop/BlockStore";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ghoTokenAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "blockSalesContract_",
        type: "address",
      },
      {
        internalType: "address",
        name: "linkToken_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "note_",
        type: "string",
      },
    ],
    name: "DEVELOPMENT_ERROR",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractTringToMessage_",
        type: "address",
      },
    ],
    name: "MessageNotFromBlockSales",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainMessageOriginated",
        type: "uint64",
      },
    ],
    name: "MessageNotFromSalesChain",
    type: "error",
  },
  {
    inputs: [],
    name: "NotBlockSalesContract",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "calculatedFees",
        type: "uint256",
      },
    ],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderExceedsMaxAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderToLargeMax10",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ToManyElementsInBuyArray",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId_",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sourceChainId_",
        type: "uint64",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "salesMessageId_",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "failed_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockStore.SaleRecipe",
        name: "payload",
        type: "tuple",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId_",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "destinationChain_",
        type: "uint64",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256[][]",
            name: "tokens_",
            type: "uint256[][]",
          },
          {
            internalType: "uint256",
            name: "totalItems_",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer_",
            type: "address",
          },
          {
            internalType: "bool",
            name: "multiBuy_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockStore.Sale",
        name: "payload",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId_",
        type: "bytes32",
      },
    ],
    name: "NewMessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId_",
        type: "bytes32",
      },
    ],
    name: "SaleFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "SaleMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId_",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
    ],
    name: "SaleSubmitted",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "ETH_CHAIN_SELECTOR",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MATIC_CHAIN_SELECTOR",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OP_CHAIN_SELECTOR",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYMENT_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYMENT_TOKEN_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SALES_CONTRACT_CHAIN",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[][]",
        name: "tokenIds_",
        type: "uint256[][]",
      },
      {
        internalType: "bool",
        name: "multiBuy_",
        type: "bool",
      },
    ],
    name: "buyBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "saleId_",
        type: "bytes32",
      },
    ],
    name: "getSaleStatus",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256[][]",
                name: "tokens_",
                type: "uint256[][]",
              },
              {
                internalType: "uint256",
                name: "totalItems_",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "buyer_",
                type: "address",
              },
              {
                internalType: "bool",
                name: "multiBuy_",
                type: "bool",
              },
            ],
            internalType: "struct IBlockStore.Sale",
            name: "saleData_",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "messageId_",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "saleComplete_",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "saleFailed_",
            type: "bool",
          },
        ],
        internalType: "struct IBlockStore.SaleStore",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSalesContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "contractAddress_",
        type: "address",
      },
    ],
    name: "setBlockStore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "flag_",
        type: "bool",
      },
    ],
    name: "setBlockStoreActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress_",
        type: "address",
      },
    ],
    name: "setSalesContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllToDev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040526001805460ff60a01b1990811690915560058054909116600160a01b1790553480156200003057600080fd5b5060405162002bd238038062002bd28339810160408190526200005391620001f3565b338185806001600160a01b03811662000087576040516335fdcccd60e21b8152600060048201526024015b60405180910390fd5b6001600160a01b03908116608052600080549282166001600160a01b031993841617905560018054938216939092169290921781556004558116620000e357604051631e4fbdf760e01b8152600060048201526024016200007e565b620000ee8162000184565b50506001600160a01b0391821660a052600780546001600160a01b031990811692909316918217905567adecc60412ce25a56000527fea5cc84ce79ed728d5255c7ed3fbe8b32d166d192d4b92e8633d9f9bd37f7975805460ff1916600117905560026020527f5de57993c647d212515e5a98200b0028dcf596e6a85a7176fe22188f7b1dbdfc80549092161790555062000250565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620001ee57600080fd5b919050565b600080600080608085870312156200020a57600080fd5b6200021585620001d6565b93506200022560208601620001d6565b92506200023560408601620001d6565b91506200024560608601620001d6565b905092959194509250565b60805160a05161292b620002a76000396000818161035201528181610d7801528181610f490152818161100d015281816112a7015281816113a801526116db015260008181610427015261098e015261292b6000f3fe60806040526004361061018d5760003560e01c80638b8fb480116100d5578063b0f479a111610084578063d0ffd7a711610061578063d0ffd7a7146103fc578063e8a6b60f1461048b578063ebfbaa6b146104a0578063f2fde38b146104bc57005b8063b0f479a114610418578063bfac0b461461044b578063bfe22a011461046b57005b80639b5719a6116100b25780639b5719a6146103c75780639d7b8e68146103e7578063af54d669146103fc57005b80638b8fb480146103745780638da5cb5b146103945780638dc654a2146103b257005b8063422dca361161013c5780636cf42b1d116101195780636cf42b1d146102d6578063715018a61461030b57806385572ffb14610320578063877c86fb1461034057005b8063422dca361461025757806349df728c1461028457806358c75e88146102a457005b8063236170521161016a578063236170521461020d57806324600fc31461022d57806326b15f0d1461024257005b806301ffc9a714610196578063028acce4146101cb57806322f3e2d4146101ee57005b3661019457005b005b3480156101a257600080fd5b506101b66101b1366004611f90565b6104dc565b60405190151581526020015b60405180910390f35b3480156101d757600080fd5b506101e0610545565b6040519081526020016101c2565b3480156101fa57600080fd5b50600554600160a01b900460ff166101b6565b34801561021957600080fd5b50610194610228366004611fcf565b610563565b34801561023957600080fd5b5061019461065f565b34801561024e57600080fd5b506101e0600681565b34801561026357600080fd5b50610277610272366004612055565b61070d565b6040516101c29190612134565b34801561029057600080fd5b5061019461029f366004612193565b610871565b3480156102b057600080fd5b506007546001600160a01b03165b6040516001600160a01b0390911681526020016101c2565b3480156102e257600080fd5b506102f267de41ba4fc9d91ad981565b60405167ffffffffffffffff90911681526020016101c2565b34801561031757600080fd5b5061019461096f565b34801561032c57600080fd5b5061019461033b3660046121b0565b610983565b34801561034c57600080fd5b506102be7f000000000000000000000000000000000000000000000000000000000000000081565b34801561038057600080fd5b5061019461038f366004612208565b6109fb565b3480156103a057600080fd5b506005546001600160a01b03166102be565b3480156103be57600080fd5b50610194610a4a565b3480156103d357600080fd5b506101946103e2366004612193565b610b45565b3480156103f357600080fd5b506006546101e0565b34801561040857600080fd5b506102f267adecc60412ce25a581565b34801561042457600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102be565b34801561045757600080fd5b5061019461046636600461223f565b610b87565b34801561047757600080fd5b5061019461048636600461226b565b610bb8565b34801561049757600080fd5b50610194610bc9565b3480156104ac57600080fd5b506102f26724f9b897ef58a92281565b3480156104c857600080fd5b506101946104d7366004612193565b610e7c565b60006001600160e01b031982167f85572ffb00000000000000000000000000000000000000000000000000000000148061053f57506001600160e01b031982167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b60006105536006600a612382565b61055e90606461238e565b905090565b61056b610ed0565b600554600160a01b900460ff166105ef5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e747261637460448201527f206973207061757365640000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b80610645576106408383600081811061060a5761060a6123a5565b905060200281019061061c91906123bb565b600081811061062d5761062d6123a5565b9050602002013561063b3390565b610f13565b610650565b61065083833361119c565b61065a6001600455565b505050565b610667611470565b47600080336001600160a01b03168360405160006040518083038185875af1925050503d80600081146106b6576040519150601f19603f3d011682016040523d82523d6000602084013e6106bb565b606091505b50915091508161065a5760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e6420457468657200000000000000000000000060448201526064016105e6565b6040805161010081018252606060808201818152600060a0840181905260c0840181905260e084018190529083526020830181905292820183905281019190915260008281526008602090815260408083208151815461012094810282018501909352610100810183815290949193859360808501938693859390928592909188015b828210156107fc576000848152602090819020830180546040805182850281018501909152818152928301828280156107e857602002820191906000526020600020905b8154815260200190600101908083116107d4575b505050505081526020019060010190610790565b5050509082525060018201546020808301919091526002909201546001600160a01b03811660408084019190915260ff600160a01b9092048216151560609384015293855260038601549285019290925260049094015480821615159284019290925261010090910416151591015292915050565b610879611470565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156108c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e69190612405565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610945573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610969919061241e565b50505050565b610977611470565b61098160006114b6565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109e7576040517fd7f733340000000000000000000000000000000000000000000000000000000081523360048201526024016105e6565b6109f86109f3826125fa565b611515565b50565b610a03611470565b67ffffffffffffffff82166000908152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383161790555050565b5050565b610a52611470565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abf9190612405565b6001549091506001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610b21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a46919061241e565b610b4d611470565b6007805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383161790556109f867adecc60412ce25a5826109fb565b610b8f611470565b67ffffffffffffffff82166000908152600360205260409020805460ff19168215151790555050565b610bc0611470565b6109f8816117bd565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610c12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c369190612405565b6001549091506001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610c98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbc919061241e565b5047600080336001600160a01b03168360405160006040518083038185875af1925050503d8060008114610d0c576040519150601f19603f3d011682016040523d82523d6000602084013e610d11565b606091505b509150915081610d635760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e6420457468657200000000000000000000000060448201526064016105e6565b6040516370a0823160e01b81523060048201527f0000000000000000000000000000000000000000000000000000000000000000906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610dcc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df09190612405565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610e4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e73919061241e565b50505050505050565b610e84611470565b6001600160a01b038116610ec7576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016105e6565b6109f8816114b6565b600260045403610f0c576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600455565b610f1f6006600a612382565b610f2a90606461238e565b6040516370a0823160e01b81526001600160a01b0383811660048301527f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610f90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb49190612405565b116110015760405162461bcd60e51b815260206004820152601160248201527f496e636f7272656374207061796d656e7400000000000000000000000000000060448201526064016105e6565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd83306110406006600a612382565b61104b90606461238e565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af115801561109f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c3919061241e565b9050801561065a57604080516001808252818301909252600091602080830190803683370190505090508381600081518110611101576111016123a5565b6020908102919091010152604080516001808252818301909252600091816020015b6060815260200190600190039081611123579050509050818160008151811061114e5761114e6123a5565b60200260200101819052506000604051806080016040528083815260200160018152602001866001600160a01b0316815260200160001515815250905061119481611821565b505050505050565b6000808360058111156111db576040517f298ebe3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a831080156111ea57508082105b1561122457858583818110611201576112016123a5565b905060200281019061121391906123bb565b9390930192506001909101906111db565b600a83111561125f576040517f529a187000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008361126e6006600a612382565b61127990606461238e565b611283919061238e565b6040516370a0823160e01b81526001600160a01b03878116600483015291925082917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156112ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113129190612405565b10156113605760405162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742046756e6473000000000000000000000000000060448201526064016105e6565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152306024830152604482018390526000917f0000000000000000000000000000000000000000000000000000000000000000909116906323b872dd906064016020604051808303816000875af11580156113f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611417919061241e565b9050801561146657600060405180608001604052808a8a9061143991906126a7565b8152602081018890526001600160a01b03891660408201526001606090910152905061146481611821565b505b5050505050505050565b6005546001600160a01b03163314610981576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016105e6565b600580546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80602001518160400151806020019051810190611532919061276d565b67ffffffffffffffff821660009081526003602052604090205460ff16611590576040517e651a9900000000000000000000000000000000000000000000000000000000815267ffffffffffffffff831660048201526024016105e6565b67ffffffffffffffff82166000908152600260205260409020546001600160a01b038281169116146115f8576040517e0e48e30000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526024016105e6565b8251606084015180516000916116169181016020908101910161278a565b9050846020015167ffffffffffffffff16827fb88ce2d04299f9522d2b89873660c7d0ead5d1243e708bd6adb2179ee0e3d8e58760400151806020019051810190611661919061276d565b604080516001600160a01b039092168252855160208084019190915286015115159082015260600160405180910390a36000828152600860209081526040909120600401805460ff19166001179055810151156117b657600082815260086020526040902060028101546001909101546001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263a9059cbb929116906117126006600a612382565b61171d90606461238e565b611727919061238e565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611772573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611796919061241e565b506000828152600860205260409020600401805461ff0019166101001790555b5050505050565b600580547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b600754604051600091611860916001600160a01b03909116906118489085906020016127c2565b604051602081830303815290604052621e84806119a9565b9050600061187667adecc60412ce25a583611aff565b9050807f43ccb67192c8495f6c3929fa31dddb58ffc5726cd01b81e14b1b3fbdd0413a1a84604001516040516118bb91906001600160a01b0391909116815260200190565b60405180910390a26040805160808101825284815260208082018490526000828401819052606083018190528481526008825292909220815180518051939492939192849261190d9284920190611e9c565b506020828101516001830155604080840151600290930180546060958601511515600160a01b027fffffffffffffffffffffff0000000000000000000000000000000000000000009091166001600160a01b039095169490941793909317909255840151600384015583015160049092018054939091015115156101000261ff00199215159290921661ffff1990931692909217179055505050565b6119e46040518060a0016040528060608152602001606081526020016060815260200160006001600160a01b03168152602001606081525090565b6040805160a081019091526001600160a01b03851660c08201528060e0810160408051808303601f190181529181529082526020808301879052815160008082529181018352929091019190611a5c565b6040805180820190915260008082526020820152815260200190600190039081611a355790505b508152602001611a6a611b18565b6001600160a01b03168152602001611af560405180602001604052808681525060408051915160248084019190915281518084039091018152604490920190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f97a657c90000000000000000000000000000000000000000000000000000000017905290565b9052949350505050565b6000806000611b0e8585611b43565b5095945050505050565b600154600090600160a01b900460ff1615611b3d57506001546001600160a01b031690565b50600090565b6000806000306001600160a01b031663b0f479a16040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611baa919061276d565b6040517f20487ded0000000000000000000000000000000000000000000000000000000081529091506001600160a01b038216906320487ded90611bf4908890889060040161281b565b602060405180830381865afa158015611c11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c359190612405565b600154909250600090600160a01b900460ff1615611def576001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611c95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb99190612405565b905080831115611ce657604051634787a10360e11b815260048101829052602481018490526044016105e6565b6001546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b038481166004830152602482018690529091169063095ea7b3906044016020604051808303816000875af1158015611d52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d76919061241e565b506040516396f4e9f960e01b81526001600160a01b038316906396f4e9f990611da5908990899060040161281b565b6020604051808303816000875af1158015611dc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de89190612405565b9350611e92565b504780831115611e1c57604051634787a10360e11b815260048101829052602481018490526044016105e6565b6040516396f4e9f960e01b81526001600160a01b038316906396f4e9f9908590611e4c908a908a9060040161281b565b60206040518083038185885af1158015611e6a573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611e8f9190612405565b93505b50505b9250929050565b828054828255906000526020600020908101928215611ee9579160200282015b82811115611ee95782518051611ed9918491602090910190611ef9565b5091602001919060010190611ebc565b50611ef5929150611f40565b5090565b828054828255906000526020600020908101928215611f34579160200282015b82811115611f34578251825591602001919060010190611f19565b50611ef5929150611f5d565b80821115611ef5576000611f548282611f72565b50600101611f40565b5b80821115611ef55760008155600101611f5e565b50805460008255906000526020600020908101906109f89190611f5d565b600060208284031215611fa257600080fd5b81356001600160e01b031981168114611fba57600080fd5b9392505050565b80151581146109f857600080fd5b600080600060408486031215611fe457600080fd5b833567ffffffffffffffff80821115611ffc57600080fd5b818601915086601f83011261201057600080fd5b81358181111561201f57600080fd5b8760208260051b850101111561203457600080fd5b6020928301955093505084013561204a81611fc1565b809150509250925092565b60006020828403121561206757600080fd5b5035919050565b60006080830182516080855281815180845260a08701915060a08160051b8801019350602080840193506000805b838110156120f057898703609f19018552855180518089529084019084890190845b818110156120da578351835292860192918601916001016120be565b509098505050948201949382019360010161209c565b5050808701518189015250505050604083015161211860408601826001600160a01b03169052565b50606083015161212c606086018215159052565b509392505050565b60208152600082516080602084015261215060a084018261206e565b9050602084015160408401526040840151151560608401526060840151151560808401528091505092915050565b6001600160a01b03811681146109f857600080fd5b6000602082840312156121a557600080fd5b8135611fba8161217e565b6000602082840312156121c257600080fd5b813567ffffffffffffffff8111156121d957600080fd5b820160a08185031215611fba57600080fd5b803567ffffffffffffffff8116811461220357600080fd5b919050565b6000806040838503121561221b57600080fd5b612224836121eb565b915060208301356122348161217e565b809150509250929050565b6000806040838503121561225257600080fd5b61225b836121eb565b9150602083013561223481611fc1565b60006020828403121561227d57600080fd5b8135611fba81611fc1565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156122d95781600019048211156122bf576122bf612288565b808516156122cc57918102915b93841c93908002906122a3565b509250929050565b6000826122f05750600161053f565b816122fd5750600061053f565b8160018114612313576002811461231d57612339565b600191505061053f565b60ff84111561232e5761232e612288565b50506001821b61053f565b5060208310610133831016604e8410600b841016171561235c575081810a61053f565b612366838361229e565b806000190482111561237a5761237a612288565b029392505050565b6000611fba83836122e1565b808202811582820484141761053f5761053f612288565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126123d257600080fd5b83018035915067ffffffffffffffff8211156123ed57600080fd5b6020019150600581901b3603821315611e9557600080fd5b60006020828403121561241757600080fd5b5051919050565b60006020828403121561243057600080fd5b8151611fba81611fc1565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156124745761247461243b565b60405290565b60405160a0810167ffffffffffffffff811182821017156124745761247461243b565b604051601f8201601f1916810167ffffffffffffffff811182821017156124c6576124c661243b565b604052919050565b600082601f8301126124df57600080fd5b813567ffffffffffffffff8111156124f9576124f961243b565b61250c601f8201601f191660200161249d565b81815284602083860101111561252157600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff8211156125585761255861243b565b5060051b60200190565b600082601f83011261257357600080fd5b813560206125886125838361253e565b61249d565b82815260069290921b840181019181810190868411156125a757600080fd5b8286015b848110156125ef57604081890312156125c45760008081fd5b6125cc612451565b81356125d78161217e565b815281850135858201528352918301916040016125ab565b509695505050505050565b600060a0823603121561260c57600080fd5b61261461247a565b82358152612624602084016121eb565b6020820152604083013567ffffffffffffffff8082111561264457600080fd5b612650368387016124ce565b6040840152606085013591508082111561266957600080fd5b612675368387016124ce565b6060840152608085013591508082111561268e57600080fd5b5061269b36828601612562565b60808301525092915050565b60006126b56125838461253e565b83815260208082019190600586811b8601368111156126d357600080fd5b865b8181101561276057803567ffffffffffffffff8111156126f55760008081fd5b880136601f8201126127075760008081fd5b80356127156125838261253e565b81815290851b820186019086810190368311156127325760008081fd5b928701925b8284101561275057833582529287019290870190612737565b89525050509483019483016126d5565b5092979650505050505050565b60006020828403121561277f57600080fd5b8151611fba8161217e565b60006040828403121561279c57600080fd5b6127a4612451565b8251815260208301516127b681611fc1565b60208201529392505050565b602081526000611fba602083018461206e565b6000815180845260005b818110156127fb576020818501810151868301820152016127df565b506000602082860101526020601f19601f83011685010191505092915050565b6000604067ffffffffffffffff8516835260208181850152845160a08386015261284860e08601826127d5565b905081860151603f198087840301606088015261286583836127d5565b88860151888203830160808a01528051808352908601945060009350908501905b808410156128b857845180516001600160a01b0316835286015186830152938501936001939093019290860190612886565b5060608901516001600160a01b031660a08901526080890151888203830160c08a015295506128e781876127d5565b9a995050505050505050505056fea2646970667358221220048d4698b7e515097d4627ce0e79616b3bbea0c13ec2fa59f4927ccceaeb9b8664736f6c63430008140033";

type BlockStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockStore__factory extends ContractFactory {
  constructor(...args: BlockStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router_: AddressLike,
    ghoTokenAddress_: AddressLike,
    blockSalesContract_: AddressLike,
    linkToken_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      router_,
      ghoTokenAddress_,
      blockSalesContract_,
      linkToken_,
      overrides || {}
    );
  }
  override deploy(
    router_: AddressLike,
    ghoTokenAddress_: AddressLike,
    blockSalesContract_: AddressLike,
    linkToken_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      router_,
      ghoTokenAddress_,
      blockSalesContract_,
      linkToken_,
      overrides || {}
    ) as Promise<
      BlockStore & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlockStore__factory {
    return super.connect(runner) as BlockStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockStoreInterface {
    return new Interface(_abi) as BlockStoreInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BlockStore {
    return new Contract(address, _abi, runner) as unknown as BlockStore;
  }
}
