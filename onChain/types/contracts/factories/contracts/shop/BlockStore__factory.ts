/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BlockStore,
  BlockStoreInterface,
} from "../../../contracts/shop/BlockStore";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ghoTokenAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "blockSalesContract_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractTringToMessage_",
        type: "address",
      },
    ],
    name: "MessageNotFromBLockSales",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainMessageOriginated",
        type: "uint64",
      },
    ],
    name: "MessageNotFromSalesChain",
    type: "error",
  },
  {
    inputs: [],
    name: "NotBlockSalesContract",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "calculatedFees",
        type: "uint256",
      },
    ],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderExceedsMaxAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderToLargeMax10",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ToManyElementsInBuyArray",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "salesMessageId_",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockStore.SaleRecipe",
        name: "payload",
        type: "tuple",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256[][]",
            name: "tokens_",
            type: "uint256[][]",
          },
          {
            internalType: "uint256",
            name: "totalItems_",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer_",
            type: "address",
          },
          {
            internalType: "bool",
            name: "multiBuy_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockStore.Sale",
        name: "payload",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "SaleMade",
    type: "event",
  },
  {
    inputs: [],
    name: "GHO",
    outputs: [
      {
        internalType: "contract IGhoToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[][]",
        name: "tokenIds_",
        type: "uint256[][]",
      },
    ],
    name: "buyBatchBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "buyBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "saleId_",
        type: "bytes32",
      },
    ],
    name: "getSaleStatus",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256[][]",
                name: "tokens_",
                type: "uint256[][]",
              },
              {
                internalType: "uint256",
                name: "totalItems_",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "buyer_",
                type: "address",
              },
              {
                internalType: "bool",
                name: "multiBuy_",
                type: "bool",
              },
            ],
            internalType: "struct IBlockStore.Sale",
            name: "saleData_",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "messageId_",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "saleComplete_",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "saleFailed_",
            type: "bool",
          },
        ],
        internalType: "struct IBlockStore.SaleStore",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawAddress_",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040526001805460ff60a01b1916600160a01b1790553480156200002457600080fd5b5060405162001f9438038062001f94833981016040819052620000479162000157565b33836001600160a01b03811662000079576040516335fdcccd60e21b8152600060048201526024015b60405180910390fd5b6001600160a01b0390811660805260016000558116620000b057604051631e4fbdf760e01b81526000600482015260240162000070565b620000bb81620000e8565b50600380546001600160a01b0319166001600160a01b0394851617905590821660a0521660c052620001a1565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200015257600080fd5b919050565b6000806000606084860312156200016d57600080fd5b62000178846200013a565b925062000188602085016200013a565b915062000198604085016200013a565b90509250925092565b60805160a05160c051611d846200021060003960008181610ca60152610e820152600081816101fe015281816104a0015281816105870152818161074c0152818161080101528181610a5401528181610b3c015261104e0152600081816101d501526108940152611d846000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063b0f479a111610066578063b0f479a1146101d3578063b8d008f3146101f9578063bfe22a0114610220578063f2fde38b1461023357600080fd5b80638da5cb5b146101935780639d7b8e68146101b8578063a13157ca146101c057600080fd5b806354b58b1c116100c857806354b58b1c1461015057806368742da614610165578063715018a61461017857806385572ffb1461018057600080fd5b806301ffc9a7146100ef578063028acce414610117578063422dca3614610130575b600080fd5b6101026100fd3660046115ee565b610246565b60405190151581526020015b60405180910390f35b68056bc75e2d631000005b60405190815260200161010e565b61014361013e36600461161f565b6102af565b60405161010e91906116fe565b61016361015e36600461161f565b610413565b005b61016361017336600461175d565b610713565b610163610875565b61016361018e36600461177a565b610889565b6001546001600160a01b03165b6040516001600160a01b03909116815260200161010e565b600254610122565b6101636101ce3660046117b5565b6108fe565b7f00000000000000000000000000000000000000000000000000000000000000006101a0565b6101a07f000000000000000000000000000000000000000000000000000000000000000081565b61016361022e366004611838565b610bee565b61016361024136600461175d565b610bff565b60006001600160e01b031982167f85572ffb0000000000000000000000000000000000000000000000000000000014806102a957506001600160e01b031982167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b6040805161010081018252606060808201818152600060a0840181905260c0840181905260e084018190529083526020830181905292820183905281019190915260008281526005602090815260408083208151815461012094810282018501909352610100810183815290949193859360808501938693859390928592909188015b8282101561039e5760008481526020908190208301805460408051828502810185019091528181529283018282801561038a57602002820191906000526020600020905b815481526020019060010190808311610376575b505050505081526020019060010190610332565b5050509082525060018201546020808301919091526002909201546001600160a01b03811660408084019190915260ff600160a01b9092048216151560609384015293855260038601549285019290925260049094015480821615159284019290925261010090910416151591015292915050565b61041b610c53565b600154600160a01b900460ff1661048c5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084015b60405180910390fd5b68056bc75e2d631000006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e9190611855565b1161057b5760405162461bcd60e51b815260206004820152601160248201527f496e636f7272656374207061796d656e740000000000000000000000000000006044820152606401610483565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015268056bc75e2d6310000060448201526064016020604051808303816000875af1158015610608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062c919061186e565b905080156107055760408051600180825281830190925260009160208083019080368337019050509050828160008151811061066a5761066a6118a1565b6020908102919091010152604080516001808252818301909252600091816020015b606081526020019060019003908161068c57905050905081816000815181106106b7576106b76118a1565b602002602001018190525060006040518060800160405280838152602001600181526020016106e33390565b6001600160a01b031681526000602090910152905061070181610c96565b5050505b506107106001600055565b50565b61071b610db3565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561079b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bf9190611855565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038481166004830152602482018390529192507f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af115801561084c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610870919061186e565b505050565b61087d610db3565b6108876000610df9565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108ed576040517fd7f73334000000000000000000000000000000000000000000000000000000008152336004820152602401610483565b6107106108f982611a6e565b610e63565b610906610c53565b600154600160a01b900460ff166109725760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b6064820152608401610483565b6000808260058111156109b1576040517f298ebe3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a831080156109c057508082105b156109f7578484838181106109d7576109d76118a1565b90506020028101906109e99190611b1b565b9350506001909101906109b1565b600a831115610a32576040517f529a187000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610a478468056bc75e2d63100000611b6c565b9050806001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610abe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae29190611855565b1015610b305760405162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742046756e647300000000000000000000000000006044820152606401610483565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303816000875af1158015610bb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd9919061186e565b90505050505050610bea6001600055565b5050565b610bf6610db3565b61071081611104565b610c07610db3565b6001600160a01b038116610c4a576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610483565b61071081610df9565b600260005403610c8f576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600055565b6000610ccb6724f9b897ef58a9227f000000000000000000000000000000000000000000000000000000000000000084611168565b60408051608081018252848152602080820184905260008284018190526060830181905284815260058252929092208151805180519596509294919390928492610d1892849201906114fa565b506020828101516001830155604080840151600290930180546060958601511515600160a01b027fffffffffffffffffffffff0000000000000000000000000000000000000000009091166001600160a01b039095169490941793909317909255840151600384015583015160049092018054939091015115156101000261ff00199215159290921661ffff19909316929092171790555050565b6001546001600160a01b03163314610887576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610483565b600180546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8060400151806020019051810190610e7b9190611b91565b81602001517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614610ef6576040517fd5de6c100000000000000000000000000000000000000000000000000000000081526001600160a01b0383166004820152602401610483565b67ffffffffffffffff81166724f9b897ef58a92214610f4c576040517e651a9900000000000000000000000000000000000000000000000000000000815267ffffffffffffffff82166004820152602401610483565b825160608401518051600091610f6a91810160209081019101611bae565b9050846020015167ffffffffffffffff16827fb88ce2d04299f9522d2b89873660c7d0ead5d1243e708bd6adb2179ee0e3d8e58760400151806020019051810190610fb59190611b91565b604080516001600160a01b039092168252855160208084019190915286015115159082015260600160405180910390a36000828152600560209081526040909120600401805460ff191660011790558101511561102b576000828152600560205260409020600401805461ff00191690556110fd565b600082815260056020526040902060028101546001909101546001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263a9059cbb9291169061108c9068056bc75e2d63100000611b6c565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156110d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fb919061186e565b505b5050505050565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b6000611172610db3565b600061118084846000611380565b90506000306001600160a01b031663b0f479a16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e69190611b91565b90506000816001600160a01b03166320487ded88856040518363ffffffff1660e01b8152600401611218929190611c2c565b602060405180830381865afa158015611235573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112599190611855565b90504781111561129e576040517f8f0f420600000000000000000000000000000000000000000000000000000000815247600482015260248101829052604401610483565b6040517f96f4e9f90000000000000000000000000000000000000000000000000000000081526001600160a01b038316906396f4e9f99083906112e7908b908890600401611c2c565b60206040518083038185885af1158015611305573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061132a9190611855565b93508667ffffffffffffffff16847ff3daec95947ed2daeaa18ee62a717c54cde3c080724a84a0b867fd53bd26b08f888860008660405161136e9493929190611d06565b60405180910390a35050509392505050565b6113bb6040518060a0016040528060608152602001606081526020016060815260200160006001600160a01b03168152602001606081525090565b6040805160a081019091526001600160a01b03851660c08201528060e081016040516020818303038152906040528152602001846040516020016113ff9190611d3b565b60408051601f198184030181529190528152602001600060405190808252806020026020018201604052801561145b57816020015b60408051808201909152600080825260208201528152602001906001900390816114345790505b508152602001836001600160a01b031681526020016114f0604051806020016040528062030d4081525060408051915160248084019190915281518084039091018152604490920190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f97a657c90000000000000000000000000000000000000000000000000000000017905290565b9052949350505050565b828054828255906000526020600020908101928215611547579160200282015b828111156115475782518051611537918491602090910190611557565b509160200191906001019061151a565b5061155392915061159e565b5090565b828054828255906000526020600020908101928215611592579160200282015b82811115611592578251825591602001919060010190611577565b506115539291506115bb565b808211156115535760006115b282826115d0565b5060010161159e565b5b8082111561155357600081556001016115bc565b508054600082559060005260206000209081019061071091906115bb565b60006020828403121561160057600080fd5b81356001600160e01b03198116811461161857600080fd5b9392505050565b60006020828403121561163157600080fd5b5035919050565b60006080830182516080855281815180845260a08701915060a08160051b8801019350602080840193506000805b838110156116ba57898703609f19018552855180518089529084019084890190845b818110156116a457835183529286019291860191600101611688565b5090985050509482019493820193600101611666565b505080870151818901525050505060408301516116e260408601826001600160a01b03169052565b5060608301516116f6606086018215159052565b509392505050565b60208152600082516080602084015261171a60a0840182611638565b9050602084015160408401526040840151151560608401526060840151151560808401528091505092915050565b6001600160a01b038116811461071057600080fd5b60006020828403121561176f57600080fd5b813561161881611748565b60006020828403121561178c57600080fd5b813567ffffffffffffffff8111156117a357600080fd5b820160a0818503121561161857600080fd5b600080602083850312156117c857600080fd5b823567ffffffffffffffff808211156117e057600080fd5b818501915085601f8301126117f457600080fd5b81358181111561180357600080fd5b8660208260051b850101111561181857600080fd5b60209290920196919550909350505050565b801515811461071057600080fd5b60006020828403121561184a57600080fd5b81356116188161182a565b60006020828403121561186757600080fd5b5051919050565b60006020828403121561188057600080fd5b81516116188161182a565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6040805190810167ffffffffffffffff811182821017156118da576118da61188b565b60405290565b60405160a0810167ffffffffffffffff811182821017156118da576118da61188b565b604051601f8201601f1916810167ffffffffffffffff8111828210171561192c5761192c61188b565b604052919050565b803567ffffffffffffffff8116811461194c57600080fd5b919050565b600082601f83011261196257600080fd5b813567ffffffffffffffff81111561197c5761197c61188b565b61198f601f8201601f1916602001611903565b8181528460208386010111156119a457600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126119d257600080fd5b8135602067ffffffffffffffff8211156119ee576119ee61188b565b6119fc818360051b01611903565b82815260069290921b84018101918181019086841115611a1b57600080fd5b8286015b84811015611a635760408189031215611a385760008081fd5b611a406118b7565b8135611a4b81611748565b81528185013585820152835291830191604001611a1f565b509695505050505050565b600060a08236031215611a8057600080fd5b611a886118e0565b82358152611a9860208401611934565b6020820152604083013567ffffffffffffffff80821115611ab857600080fd5b611ac436838701611951565b60408401526060850135915080821115611add57600080fd5b611ae936838701611951565b60608401526080850135915080821115611b0257600080fd5b50611b0f368286016119c1565b60808301525092915050565b6000808335601e19843603018112611b3257600080fd5b83018035915067ffffffffffffffff821115611b4d57600080fd5b6020019150600581901b3603821315611b6557600080fd5b9250929050565b80820281158282048414176102a957634e487b7160e01b600052601160045260246000fd5b600060208284031215611ba357600080fd5b815161161881611748565b600060408284031215611bc057600080fd5b611bc86118b7565b825181526020830151611bda8161182a565b60208201529392505050565b6000815180845260005b81811015611c0c57602081850181015186830182015201611bf0565b506000602082860101526020601f19601f83011685010191505092915050565b6000604067ffffffffffffffff8516835260208181850152845160a083860152611c5960e0860182611be6565b905081860151603f1980878403016060880152611c768383611be6565b88860151888203830160808a01528051808352908601945060009350908501905b80841015611cc957845180516001600160a01b0316835286015186830152938501936001939093019290860190611c97565b5060608901516001600160a01b031660a08901526080890151888203830160c08a01529550611cf88187611be6565b9a9950505050505050505050565b60006001600160a01b03808716835260806020840152611d296080840187611638565b94166040830152506060015292915050565b602081526000611618602083018461163856fea2646970667358221220c2cb81e0d34b8978461cf8ab18aa0a54a7a5b7652c6b5809d54e135c4c5bb99464736f6c63430008140033";

type BlockStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockStore__factory extends ContractFactory {
  constructor(...args: BlockStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router_: AddressLike,
    ghoTokenAddress_: AddressLike,
    blockSalesContract_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      router_,
      ghoTokenAddress_,
      blockSalesContract_,
      overrides || {}
    );
  }
  override deploy(
    router_: AddressLike,
    ghoTokenAddress_: AddressLike,
    blockSalesContract_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      router_,
      ghoTokenAddress_,
      blockSalesContract_,
      overrides || {}
    ) as Promise<
      BlockStore & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlockStore__factory {
    return super.connect(runner) as BlockStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockStoreInterface {
    return new Interface(_abi) as BlockStoreInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BlockStore {
    return new Contract(address, _abi, runner) as unknown as BlockStore;
  }
}
