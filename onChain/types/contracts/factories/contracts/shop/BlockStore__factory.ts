/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BlockStore,
  BlockStoreInterface,
} from "../../../contracts/shop/BlockStore";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ghoTokenAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "blockSalesContract_",
        type: "address",
      },
      {
        internalType: "address",
        name: "linkToken_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "note_",
        type: "string",
      },
    ],
    name: "DEVELOPMENT_ERROR",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractTringToMessage_",
        type: "address",
      },
    ],
    name: "MessageNotFromBlockSales",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainMessageOriginated",
        type: "uint64",
      },
    ],
    name: "MessageNotFromSalesChain",
    type: "error",
  },
  {
    inputs: [],
    name: "NotBlockSalesContract",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "calculatedFees",
        type: "uint256",
      },
    ],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderExceedsMaxAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderToLargeMax10",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ToManyElementsInBuyArray",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "salesMessageId_",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockStore.SaleRecipe",
        name: "payload",
        type: "tuple",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256[][]",
            name: "tokens_",
            type: "uint256[][]",
          },
          {
            internalType: "uint256",
            name: "totalItems_",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer_",
            type: "address",
          },
          {
            internalType: "bool",
            name: "multiBuy_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockStore.Sale",
        name: "payload",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "SaleMade",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "GHO",
    outputs: [
      {
        internalType: "contract IGhoToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[][]",
        name: "tokenIds_",
        type: "uint256[][]",
      },
    ],
    name: "buyBatchBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "buyBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "saleId_",
        type: "bytes32",
      },
    ],
    name: "getSaleStatus",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256[][]",
                name: "tokens_",
                type: "uint256[][]",
              },
              {
                internalType: "uint256",
                name: "totalItems_",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "buyer_",
                type: "address",
              },
              {
                internalType: "bool",
                name: "multiBuy_",
                type: "bool",
              },
            ],
            internalType: "struct IBlockStore.Sale",
            name: "saleData_",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "messageId_",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "saleComplete_",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "saleFailed_",
            type: "bool",
          },
        ],
        internalType: "struct IBlockStore.SaleStore",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSalesContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress_",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040526001805460ff60a01b1916600160a01b1790553480156200002457600080fd5b506040516200214138038062002141833981016040819052620000479162000174565b33846001600160a01b03811662000079576040516335fdcccd60e21b8152600060048201526024015b60405180910390fd5b6001600160a01b0390811660805260016000558116620000b057604051631e4fbdf760e01b81526000600482015260240162000070565b620000bb8162000105565b50600380546001600160a01b039586166001600160a01b03199182161790915592841660a052600580549285169284169290921790915560048054919093169116179055620001d1565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200016f57600080fd5b919050565b600080600080608085870312156200018b57600080fd5b620001968562000157565b9350620001a66020860162000157565b9250620001b66040860162000157565b9150620001c66060860162000157565b905092959194509250565b60805160a051611f206200022160003960008181610305015281816105c1015281816106a801528181610aca01528181610bb201526111b20152600081816102cf01526109070152611f206000f3fe6080604052600436106101035760003560e01c806385572ffb1161009c578063a522ad251161006e578063b8d008f311610056578063b8d008f3146102f3578063bfe22a0114610327578063f2fde38b1461034757005b8063a522ad25146102a0578063b0f479a1146102c057005b806385572ffb1461022d5780638da5cb5b1461024d5780639d7b8e681461026b578063a13157ca1461028057005b806354b58b1c116100d557806354b58b1c146101b357806358c75e88146101d357806368742da614610205578063715018a61461021857005b806301ffc9a71461010c578063028acce41461014157806322f3e2d414610167578063422dca361461018657005b3661010a57005b005b34801561011857600080fd5b5061012c610127366004611751565b610367565b60405190151581526020015b60405180910390f35b34801561014d57600080fd5b5068056bc75e2d631000005b604051908152602001610138565b34801561017357600080fd5b50600154600160a01b900460ff1661012c565b34801561019257600080fd5b506101a66101a1366004611782565b6103d0565b6040516101389190611861565b3480156101bf57600080fd5b5061010a6101ce366004611782565b610534565b3480156101df57600080fd5b506005546001600160a01b03165b6040516001600160a01b039091168152602001610138565b61010a6102133660046118c0565b610834565b34801561022457600080fd5b5061010a6108e8565b34801561023957600080fd5b5061010a6102483660046118dd565b6108fc565b34801561025957600080fd5b506001546001600160a01b03166101ed565b34801561027757600080fd5b50600254610159565b34801561028c57600080fd5b5061010a61029b366004611918565b610971565b3480156102ac57600080fd5b5061010a6102bb36600461198d565b610c64565b3480156102cc57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006101ed565b3480156102ff57600080fd5b506101ed7f000000000000000000000000000000000000000000000000000000000000000081565b34801561033357600080fd5b5061010a6103423660046119d4565b610d89565b34801561035357600080fd5b5061010a6103623660046118c0565b610d9a565b60006001600160e01b031982167f85572ffb0000000000000000000000000000000000000000000000000000000014806103ca57506001600160e01b031982167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b6040805161010081018252606060808201818152600060a0840181905260c0840181905260e084018190529083526020830181905292820183905281019190915260008281526006602090815260408083208151815461012094810282018501909352610100810183815290949193859360808501938693859390928592909188015b828210156104bf576000848152602090819020830180546040805182850281018501909152818152928301828280156104ab57602002820191906000526020600020905b815481526020019060010190808311610497575b505050505081526020019060010190610453565b5050509082525060018201546020808301919091526002909201546001600160a01b03811660408084019190915260ff600160a01b9092048216151560609384015293855260038601549285019290925260049094015480821615159284019290925261010090910416151591015292915050565b61053c610dee565b600154600160a01b900460ff166105ad5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084015b60405180910390fd5b68056bc75e2d631000006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561062b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064f91906119f1565b1161069c5760405162461bcd60e51b815260206004820152601160248201527f496e636f7272656374207061796d656e7400000000000000000000000000000060448201526064016105a4565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015268056bc75e2d6310000060448201526064016020604051808303816000875af1158015610729573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074d9190611a0a565b905080156108265760408051600180825281830190925260009160208083019080368337019050509050828160008151811061078b5761078b611a3d565b6020908102919091010152604080516001808252818301909252600091816020015b60608152602001906001900390816107ad57905050905081816000815181106107d8576107d8611a3d565b602002602001018190525060006040518060800160405280838152602001600181526020016108043390565b6001600160a01b031681526000602090910152905061082281610e31565b5050505b506108316001600055565b50565b61083c610f3c565b604051479060009081906001600160a01b0385169084908381818185875af1925050503d806000811461088b576040519150601f19603f3d011682016040523d82523d6000602084013e610890565b606091505b5091509150816108e25760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e6420457468657200000000000000000000000060448201526064016105a4565b50505050565b6108f0610f3c565b6108fa6000610f82565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610960576040517fd7f733340000000000000000000000000000000000000000000000000000000081523360048201526024016105a4565b61083161096c82611c0a565b610fec565b610979610dee565b600154600160a01b900460ff166109e55760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084016105a4565b600080826005811115610a24576040517f298ebe3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a83108015610a3357508082105b15610a6d57848483818110610a4a57610a4a611a3d565b9050602002810190610a5c9190611cb7565b939093019250600190910190610a24565b600a831115610aa8576040517f529a187000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610abd8468056bc75e2d63100000611d08565b9050806001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610b34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5891906119f1565b1015610ba65760405162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742046756e6473000000000000000000000000000060448201526064016105a4565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303816000875af1158015610c2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4f9190611a0a565b90505050505050610c606001600055565b5050565b610c6c610f3c565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610cce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf291906119f1565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018390529192509083169063a9059cbb906044016020604051808303816000875af1158015610d5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d829190611a0a565b5050505050565b610d91610f3c565b61083181611267565b610da2610f3c565b6001600160a01b038116610de5576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016105a4565b61083181610f82565b600260005403610e2a576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600055565b600554600090610e54906724f9b897ef58a922906001600160a01b0316846112cb565b60408051608081018252848152602080820184905260008284018190526060830181905284815260068252929092208151805180519596509294919390928492610ea1928492019061165d565b506020828101516001830155604080840151600290930180546060958601511515600160a01b027fffffffffffffffffffffff0000000000000000000000000000000000000000009091166001600160a01b039095169490941793909317909255840151600384015583015160049092018054939091015115156101000261ff00199215159290921661ffff19909316929092171790555050565b6001546001600160a01b031633146108fa576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016105a4565b600180546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80604001518060200190518101906110049190611d2d565b60208201516005546001600160a01b0383811691161461105a576040517e0e48e30000000000000000000000000000000000000000000000000000000081526001600160a01b03831660048201526024016105a4565b67ffffffffffffffff81166724f9b897ef58a922146110b0576040517e651a9900000000000000000000000000000000000000000000000000000000815267ffffffffffffffff821660048201526024016105a4565b8251606084015180516000916110ce91810160209081019101611d4a565b9050846020015167ffffffffffffffff16827fb88ce2d04299f9522d2b89873660c7d0ead5d1243e708bd6adb2179ee0e3d8e587604001518060200190518101906111199190611d2d565b604080516001600160a01b039092168252855160208084019190915286015115159082015260600160405180910390a36000828152600660209081526040909120600401805460ff191660011790558101511561118f576000828152600660205260409020600401805461ff0019169055610d82565b600082815260066020526040902060028101546001909101546001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263a9059cbb929116906111f09068056bc75e2d63100000611d08565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561123b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125f9190611a0a565b505050505050565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b60006112d5610f3c565b60006112e3848460006114e3565b90506000306001600160a01b031663b0f479a16040518163ffffffff1660e01b8152600401602060405180830381865afa158015611325573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113499190611d2d565b90506000816001600160a01b03166320487ded88856040518363ffffffff1660e01b815260040161137b929190611dc8565b602060405180830381865afa158015611398573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bc91906119f1565b905047811115611401576040517f8f0f4206000000000000000000000000000000000000000000000000000000008152476004820152602481018290526044016105a4565b6040517f96f4e9f90000000000000000000000000000000000000000000000000000000081526001600160a01b038316906396f4e9f990839061144a908b908890600401611dc8565b60206040518083038185885af1158015611468573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061148d91906119f1565b93508667ffffffffffffffff16847ff3daec95947ed2daeaa18ee62a717c54cde3c080724a84a0b867fd53bd26b08f88886000866040516114d19493929190611ea2565b60405180910390a35050509392505050565b61151e6040518060a0016040528060608152602001606081526020016060815260200160006001600160a01b03168152602001606081525090565b6040805160a081019091526001600160a01b03851660c08201528060e081016040516020818303038152906040528152602001846040516020016115629190611ed7565b60408051601f19818403018152919052815260200160006040519080825280602002602001820160405280156115be57816020015b60408051808201909152600080825260208201528152602001906001900390816115975790505b508152602001836001600160a01b031681526020016116536040518060200160405280620f424081525060408051915160248084019190915281518084039091018152604490920190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f97a657c90000000000000000000000000000000000000000000000000000000017905290565b9052949350505050565b8280548282559060005260206000209081019282156116aa579160200282015b828111156116aa578251805161169a9184916020909101906116ba565b509160200191906001019061167d565b506116b6929150611701565b5090565b8280548282559060005260206000209081019282156116f5579160200282015b828111156116f55782518255916020019190600101906116da565b506116b692915061171e565b808211156116b65760006117158282611733565b50600101611701565b5b808211156116b6576000815560010161171f565b5080546000825590600052602060002090810190610831919061171e565b60006020828403121561176357600080fd5b81356001600160e01b03198116811461177b57600080fd5b9392505050565b60006020828403121561179457600080fd5b5035919050565b60006080830182516080855281815180845260a08701915060a08160051b8801019350602080840193506000805b8381101561181d57898703609f19018552855180518089529084019084890190845b81811015611807578351835292860192918601916001016117eb565b50909850505094820194938201936001016117c9565b5050808701518189015250505050604083015161184560408601826001600160a01b03169052565b506060830151611859606086018215159052565b509392505050565b60208152600082516080602084015261187d60a084018261179b565b9050602084015160408401526040840151151560608401526060840151151560808401528091505092915050565b6001600160a01b038116811461083157600080fd5b6000602082840312156118d257600080fd5b813561177b816118ab565b6000602082840312156118ef57600080fd5b813567ffffffffffffffff81111561190657600080fd5b820160a0818503121561177b57600080fd5b6000806020838503121561192b57600080fd5b823567ffffffffffffffff8082111561194357600080fd5b818501915085601f83011261195757600080fd5b81358181111561196657600080fd5b8660208260051b850101111561197b57600080fd5b60209290920196919550909350505050565b600080604083850312156119a057600080fd5b82356119ab816118ab565b915060208301356119bb816118ab565b809150509250929050565b801515811461083157600080fd5b6000602082840312156119e657600080fd5b813561177b816119c6565b600060208284031215611a0357600080fd5b5051919050565b600060208284031215611a1c57600080fd5b815161177b816119c6565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6040805190810167ffffffffffffffff81118282101715611a7657611a76611a27565b60405290565b60405160a0810167ffffffffffffffff81118282101715611a7657611a76611a27565b604051601f8201601f1916810167ffffffffffffffff81118282101715611ac857611ac8611a27565b604052919050565b803567ffffffffffffffff81168114611ae857600080fd5b919050565b600082601f830112611afe57600080fd5b813567ffffffffffffffff811115611b1857611b18611a27565b611b2b601f8201601f1916602001611a9f565b818152846020838601011115611b4057600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112611b6e57600080fd5b8135602067ffffffffffffffff821115611b8a57611b8a611a27565b611b98818360051b01611a9f565b82815260069290921b84018101918181019086841115611bb757600080fd5b8286015b84811015611bff5760408189031215611bd45760008081fd5b611bdc611a53565b8135611be7816118ab565b81528185013585820152835291830191604001611bbb565b509695505050505050565b600060a08236031215611c1c57600080fd5b611c24611a7c565b82358152611c3460208401611ad0565b6020820152604083013567ffffffffffffffff80821115611c5457600080fd5b611c6036838701611aed565b60408401526060850135915080821115611c7957600080fd5b611c8536838701611aed565b60608401526080850135915080821115611c9e57600080fd5b50611cab36828601611b5d565b60808301525092915050565b6000808335601e19843603018112611cce57600080fd5b83018035915067ffffffffffffffff821115611ce957600080fd5b6020019150600581901b3603821315611d0157600080fd5b9250929050565b80820281158282048414176103ca57634e487b7160e01b600052601160045260246000fd5b600060208284031215611d3f57600080fd5b815161177b816118ab565b600060408284031215611d5c57600080fd5b611d64611a53565b825181526020830151611d76816119c6565b60208201529392505050565b6000815180845260005b81811015611da857602081850181015186830182015201611d8c565b506000602082860101526020601f19601f83011685010191505092915050565b6000604067ffffffffffffffff8516835260208181850152845160a083860152611df560e0860182611d82565b905081860151603f1980878403016060880152611e128383611d82565b88860151888203830160808a01528051808352908601945060009350908501905b80841015611e6557845180516001600160a01b0316835286015186830152938501936001939093019290860190611e33565b5060608901516001600160a01b031660a08901526080890151888203830160c08a01529550611e948187611d82565b9a9950505050505050505050565b60006001600160a01b03808716835260806020840152611ec5608084018761179b565b94166040830152506060015292915050565b60208152600061177b602083018461179b56fea26469706673582212208c68c15f2ab432598150d5178d980ceb880da1da796a62b89f4a2914337811a964736f6c63430008140033";

type BlockStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockStore__factory extends ContractFactory {
  constructor(...args: BlockStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router_: AddressLike,
    ghoTokenAddress_: AddressLike,
    blockSalesContract_: AddressLike,
    linkToken_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      router_,
      ghoTokenAddress_,
      blockSalesContract_,
      linkToken_,
      overrides || {}
    );
  }
  override deploy(
    router_: AddressLike,
    ghoTokenAddress_: AddressLike,
    blockSalesContract_: AddressLike,
    linkToken_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      router_,
      ghoTokenAddress_,
      blockSalesContract_,
      linkToken_,
      overrides || {}
    ) as Promise<
      BlockStore & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlockStore__factory {
    return super.connect(runner) as BlockStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockStoreInterface {
    return new Interface(_abi) as BlockStoreInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BlockStore {
    return new Contract(address, _abi, runner) as unknown as BlockStore;
  }
}
