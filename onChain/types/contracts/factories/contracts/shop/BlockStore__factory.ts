/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BlockStore,
  BlockStoreInterface,
} from "../../../contracts/shop/BlockStore";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ghoTokenAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "blockSalesContract_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractTringToMessage_",
        type: "address",
      },
    ],
    name: "MessageNotFromBLockSales",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainMessageOriginated",
        type: "uint64",
      },
    ],
    name: "MessageNotFromSalesChain",
    type: "error",
  },
  {
    inputs: [],
    name: "NotBlockSalesContract",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "calculatedFees",
        type: "uint256",
      },
    ],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderExceedsMaxAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderToLargeMax10",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ToManyElementsInBuyArray",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "salesMessageId_",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockStore.SaleRecipe",
        name: "payload",
        type: "tuple",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256[][]",
            name: "tokens_",
            type: "uint256[][]",
          },
          {
            internalType: "uint256",
            name: "totalItems_",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer_",
            type: "address",
          },
          {
            internalType: "bool",
            name: "multiBuy_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockStore.Sale",
        name: "payload",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "SaleMade",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "GHO",
    outputs: [
      {
        internalType: "contract IGhoToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[][]",
        name: "tokenIds_",
        type: "uint256[][]",
      },
    ],
    name: "buyBatchBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "buyBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "saleId_",
        type: "bytes32",
      },
    ],
    name: "getSaleStatus",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256[][]",
                name: "tokens_",
                type: "uint256[][]",
              },
              {
                internalType: "uint256",
                name: "totalItems_",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "buyer_",
                type: "address",
              },
              {
                internalType: "bool",
                name: "multiBuy_",
                type: "bool",
              },
            ],
            internalType: "struct IBlockStore.Sale",
            name: "saleData_",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "messageId_",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "saleComplete_",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "saleFailed_",
            type: "bool",
          },
        ],
        internalType: "struct IBlockStore.SaleStore",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e06040526001805460ff60a01b1916600160a01b1790553480156200002457600080fd5b506040516200200a3803806200200a833981016040819052620000479162000157565b33836001600160a01b03811662000079576040516335fdcccd60e21b8152600060048201526024015b60405180910390fd5b6001600160a01b0390811660805260016000558116620000b057604051631e4fbdf760e01b81526000600482015260240162000070565b620000bb81620000e8565b50600380546001600160a01b0319166001600160a01b0394851617905590821660a0521660c052620001a1565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200015257600080fd5b919050565b6000806000606084860312156200016d57600080fd5b62000178846200013a565b925062000188602085016200013a565b915062000198604085016200013a565b90509250925092565b60805160a05160c051611e086200020260003960008181610d3d0152610ed30152600081816102810152818161065d0152818161074401528181610aa501528181610b8d015261109f01526000818161024b01526108ea0152611e086000f3fe6080604052600436106100d45760003560e01c80638da5cb5b11610079578063b0f479a111610056578063b0f479a11461023c578063b8d008f31461026f578063bfe22a01146102a3578063f2fde38b146102c357005b80638da5cb5b146101d55780639d7b8e6814610207578063a13157ca1461021c57005b8063422dca36116100b2578063422dca361461015357806354b58b1c14610180578063715018a6146101a057806385572ffb146101b557005b80620fa9fb146100dd57806301ffc9a7146100fd578063028acce41461013257005b366100db57005b005b3480156100e957600080fd5b506100db6100f836600461164e565b6102e3565b34801561010957600080fd5b5061011d610118366004611687565b610408565b60405190151581526020015b60405180910390f35b34801561013e57600080fd5b506305f5e1005b604051908152602001610129565b34801561015f57600080fd5b5061017361016e3660046116b8565b610471565b6040516101299190611797565b34801561018c57600080fd5b506100db61019b3660046116b8565b6105d5565b3480156101ac57600080fd5b506100db6108cb565b3480156101c157600080fd5b506100db6101d03660046117e1565b6108df565b3480156101e157600080fd5b506001546001600160a01b03165b6040516001600160a01b039091168152602001610129565b34801561021357600080fd5b50600254610145565b34801561022857600080fd5b506100db61023736600461181c565b610954565b34801561024857600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006101ef565b34801561027b57600080fd5b506101ef7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102af57600080fd5b506100db6102be36600461189f565b610c3f565b3480156102cf57600080fd5b506100db6102de3660046118bc565b610c50565b6102eb610ca4565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561034d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037191906118d9565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018390529192509083169063a9059cbb906044016020604051808303816000875af11580156103dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040191906118f2565b5050505050565b60006001600160e01b031982167f85572ffb00000000000000000000000000000000000000000000000000000000148061046b57506001600160e01b031982167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b6040805161010081018252606060808201818152600060a0840181905260c0840181905260e084018190529083526020830181905292820183905281019190915260008281526005602090815260408083208151815461012094810282018501909352610100810183815290949193859360808501938693859390928592909188015b828210156105605760008481526020908190208301805460408051828502810185019091528181529283018282801561054c57602002820191906000526020600020905b815481526020019060010190808311610538575b5050505050815260200190600101906104f4565b5050509082525060018201546020808301919091526002909201546001600160a01b03811660408084019190915260ff600160a01b9092048216151560609384015293855260038601549285019290925260049094015480821615159284019290925261010090910416151591015292915050565b6105dd610cea565b600154600160a01b900460ff1661064e5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084015b60405180910390fd5b6305f5e1006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156106c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106eb91906118d9565b116107385760405162461bcd60e51b815260206004820152601160248201527f496e636f7272656374207061796d656e740000000000000000000000000000006044820152606401610645565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b0390911660048201523060248201526305f5e10060448201526064016020604051808303816000875af11580156107c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e491906118f2565b905080156108bd5760408051600180825281830190925260009160208083019080368337019050509050828160008151811061082257610822611925565b6020908102919091010152604080516001808252818301909252600091816020015b6060815260200190600190039081610844579050509050818160008151811061086f5761086f611925565b6020026020010181905250600060405180608001604052808381526020016001815260200161089b3390565b6001600160a01b03168152600060209091015290506108b981610d2d565b5050505b506108c86001600055565b50565b6108d3610ca4565b6108dd6000610e4a565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610943576040517fd7f73334000000000000000000000000000000000000000000000000000000008152336004820152602401610645565b6108c861094f82611af2565b610eb4565b61095c610cea565b600154600160a01b900460ff166109c85760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b6064820152608401610645565b600080826005811115610a07576040517f298ebe3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a83108015610a1657508082105b15610a4d57848483818110610a2d57610a2d611925565b9050602002810190610a3f9190611b9f565b935050600190910190610a07565b600a831115610a88576040517f529a187000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610a98846305f5e100611bf0565b9050806001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610b0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3391906118d9565b1015610b815760405162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742046756e647300000000000000000000000000006044820152606401610645565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303816000875af1158015610c06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2a91906118f2565b90505050505050610c3b6001600055565b5050565b610c47610ca4565b6108c88161114f565b610c58610ca4565b6001600160a01b038116610c9b576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610645565b6108c881610e4a565b6001546001600160a01b031633146108dd576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610645565b600260005403610d26576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600055565b6000610d626724f9b897ef58a9227f0000000000000000000000000000000000000000000000000000000000000000846111b3565b60408051608081018252848152602080820184905260008284018190526060830181905284815260058252929092208151805180519596509294919390928492610daf9284920190611545565b506020828101516001830155604080840151600290930180546060958601511515600160a01b027fffffffffffffffffffffff0000000000000000000000000000000000000000009091166001600160a01b039095169490941793909317909255840151600384015583015160049092018054939091015115156101000261ff00199215159290921661ffff19909316929092171790555050565b600180546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8060400151806020019051810190610ecc9190611c15565b81602001517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614610f47576040517fd5de6c100000000000000000000000000000000000000000000000000000000081526001600160a01b0383166004820152602401610645565b67ffffffffffffffff81166724f9b897ef58a92214610f9d576040517e651a9900000000000000000000000000000000000000000000000000000000815267ffffffffffffffff82166004820152602401610645565b825160608401518051600091610fbb91810160209081019101611c32565b9050846020015167ffffffffffffffff16827fb88ce2d04299f9522d2b89873660c7d0ead5d1243e708bd6adb2179ee0e3d8e587604001518060200190518101906110069190611c15565b604080516001600160a01b039092168252855160208084019190915286015115159082015260600160405180910390a36000828152600560209081526040909120600401805460ff191660011790558101511561107c576000828152600560205260409020600401805461ff0019169055610401565b600082815260056020526040902060028101546001909101546001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263a9059cbb929116906110d8906305f5e100611bf0565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611123573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114791906118f2565b505050505050565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b60006111bd610ca4565b60006111cb848460006113cb565b90506000306001600160a01b031663b0f479a16040518163ffffffff1660e01b8152600401602060405180830381865afa15801561120d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112319190611c15565b90506000816001600160a01b03166320487ded88856040518363ffffffff1660e01b8152600401611263929190611cb0565b602060405180830381865afa158015611280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a491906118d9565b9050478111156112e9576040517f8f0f420600000000000000000000000000000000000000000000000000000000815247600482015260248101829052604401610645565b6040517f96f4e9f90000000000000000000000000000000000000000000000000000000081526001600160a01b038316906396f4e9f9908390611332908b908890600401611cb0565b60206040518083038185885af1158015611350573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061137591906118d9565b93508667ffffffffffffffff16847ff3daec95947ed2daeaa18ee62a717c54cde3c080724a84a0b867fd53bd26b08f88886000866040516113b99493929190611d8a565b60405180910390a35050509392505050565b6114066040518060a0016040528060608152602001606081526020016060815260200160006001600160a01b03168152602001606081525090565b6040805160a081019091526001600160a01b03851660c08201528060e0810160405160208183030381529060405281526020018460405160200161144a9190611dbf565b60408051601f19818403018152919052815260200160006040519080825280602002602001820160405280156114a657816020015b604080518082019091526000808252602082015281526020019060019003908161147f5790505b508152602001836001600160a01b0316815260200161153b604051806020016040528062030d4081525060408051915160248084019190915281518084039091018152604490920190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f97a657c90000000000000000000000000000000000000000000000000000000017905290565b9052949350505050565b828054828255906000526020600020908101928215611592579160200282015b8281111561159257825180516115829184916020909101906115a2565b5091602001919060010190611565565b5061159e9291506115e9565b5090565b8280548282559060005260206000209081019282156115dd579160200282015b828111156115dd5782518255916020019190600101906115c2565b5061159e929150611606565b8082111561159e5760006115fd828261161b565b506001016115e9565b5b8082111561159e5760008155600101611607565b50805460008255906000526020600020908101906108c89190611606565b6001600160a01b03811681146108c857600080fd5b6000806040838503121561166157600080fd5b823561166c81611639565b9150602083013561167c81611639565b809150509250929050565b60006020828403121561169957600080fd5b81356001600160e01b0319811681146116b157600080fd5b9392505050565b6000602082840312156116ca57600080fd5b5035919050565b60006080830182516080855281815180845260a08701915060a08160051b8801019350602080840193506000805b8381101561175357898703609f19018552855180518089529084019084890190845b8181101561173d57835183529286019291860191600101611721565b50909850505094820194938201936001016116ff565b5050808701518189015250505050604083015161177b60408601826001600160a01b03169052565b50606083015161178f606086018215159052565b509392505050565b6020815260008251608060208401526117b360a08401826116d1565b9050602084015160408401526040840151151560608401526060840151151560808401528091505092915050565b6000602082840312156117f357600080fd5b813567ffffffffffffffff81111561180a57600080fd5b820160a081850312156116b157600080fd5b6000806020838503121561182f57600080fd5b823567ffffffffffffffff8082111561184757600080fd5b818501915085601f83011261185b57600080fd5b81358181111561186a57600080fd5b8660208260051b850101111561187f57600080fd5b60209290920196919550909350505050565b80151581146108c857600080fd5b6000602082840312156118b157600080fd5b81356116b181611891565b6000602082840312156118ce57600080fd5b81356116b181611639565b6000602082840312156118eb57600080fd5b5051919050565b60006020828403121561190457600080fd5b81516116b181611891565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6040805190810167ffffffffffffffff8111828210171561195e5761195e61190f565b60405290565b60405160a0810167ffffffffffffffff8111828210171561195e5761195e61190f565b604051601f8201601f1916810167ffffffffffffffff811182821017156119b0576119b061190f565b604052919050565b803567ffffffffffffffff811681146119d057600080fd5b919050565b600082601f8301126119e657600080fd5b813567ffffffffffffffff811115611a0057611a0061190f565b611a13601f8201601f1916602001611987565b818152846020838601011115611a2857600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112611a5657600080fd5b8135602067ffffffffffffffff821115611a7257611a7261190f565b611a80818360051b01611987565b82815260069290921b84018101918181019086841115611a9f57600080fd5b8286015b84811015611ae75760408189031215611abc5760008081fd5b611ac461193b565b8135611acf81611639565b81528185013585820152835291830191604001611aa3565b509695505050505050565b600060a08236031215611b0457600080fd5b611b0c611964565b82358152611b1c602084016119b8565b6020820152604083013567ffffffffffffffff80821115611b3c57600080fd5b611b48368387016119d5565b60408401526060850135915080821115611b6157600080fd5b611b6d368387016119d5565b60608401526080850135915080821115611b8657600080fd5b50611b9336828601611a45565b60808301525092915050565b6000808335601e19843603018112611bb657600080fd5b83018035915067ffffffffffffffff821115611bd157600080fd5b6020019150600581901b3603821315611be957600080fd5b9250929050565b808202811582820484141761046b57634e487b7160e01b600052601160045260246000fd5b600060208284031215611c2757600080fd5b81516116b181611639565b600060408284031215611c4457600080fd5b611c4c61193b565b825181526020830151611c5e81611891565b60208201529392505050565b6000815180845260005b81811015611c9057602081850181015186830182015201611c74565b506000602082860101526020601f19601f83011685010191505092915050565b6000604067ffffffffffffffff8516835260208181850152845160a083860152611cdd60e0860182611c6a565b905081860151603f1980878403016060880152611cfa8383611c6a565b88860151888203830160808a01528051808352908601945060009350908501905b80841015611d4d57845180516001600160a01b0316835286015186830152938501936001939093019290860190611d1b565b5060608901516001600160a01b031660a08901526080890151888203830160c08a01529550611d7c8187611c6a565b9a9950505050505050505050565b60006001600160a01b03808716835260806020840152611dad60808401876116d1565b94166040830152506060015292915050565b6020815260006116b160208301846116d156fea26469706673582212202a80b1420c6fe561ea99e951823f0ffe9220bc91db409a9aa28169180bed402264736f6c63430008140033";

type BlockStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockStore__factory extends ContractFactory {
  constructor(...args: BlockStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router_: AddressLike,
    ghoTokenAddress_: AddressLike,
    blockSalesContract_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      router_,
      ghoTokenAddress_,
      blockSalesContract_,
      overrides || {}
    );
  }
  override deploy(
    router_: AddressLike,
    ghoTokenAddress_: AddressLike,
    blockSalesContract_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      router_,
      ghoTokenAddress_,
      blockSalesContract_,
      overrides || {}
    ) as Promise<
      BlockStore & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlockStore__factory {
    return super.connect(runner) as BlockStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockStoreInterface {
    return new Interface(_abi) as BlockStoreInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BlockStore {
    return new Contract(address, _abi, runner) as unknown as BlockStore;
  }
}
