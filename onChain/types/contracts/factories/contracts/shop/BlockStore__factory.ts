/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BlockStore,
  BlockStoreInterface,
} from "../../../contracts/shop/BlockStore";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ghoTokenAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "blockSalesContract_",
        type: "address",
      },
      {
        internalType: "address",
        name: "linkToken_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "note_",
        type: "string",
      },
    ],
    name: "DEVELOPMENT_ERROR",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractTringToMessage_",
        type: "address",
      },
    ],
    name: "MessageNotFromBlockSales",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainMessageOriginated",
        type: "uint64",
      },
    ],
    name: "MessageNotFromSalesChain",
    type: "error",
  },
  {
    inputs: [],
    name: "NotBlockSalesContract",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "calculatedFees",
        type: "uint256",
      },
    ],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderExceedsMaxAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderToLargeMax10",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ToManyElementsInBuyArray",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId_",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sourceChainId_",
        type: "uint64",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "salesMessageId_",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "failed_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockStore.SaleRecipe",
        name: "payload",
        type: "tuple",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId_",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "destinationChain_",
        type: "uint64",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256[][]",
            name: "tokens_",
            type: "uint256[][]",
          },
          {
            internalType: "uint256",
            name: "totalItems_",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer_",
            type: "address",
          },
          {
            internalType: "bool",
            name: "multiBuy_",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct IBlockStore.Sale",
        name: "payload",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId_",
        type: "bytes32",
      },
    ],
    name: "SaleFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
    ],
    name: "SaleMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId_",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer_",
        type: "address",
      },
    ],
    name: "SaleSubmitted",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "ETH_CHAIN_SELECTOR",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MATIC_CHAIN_SELECTOR",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OP_CHAIN_SELECTOR",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYMENT_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYMENT_TOKEN_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SALES_CONTRACT_CHAIN",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[][]",
        name: "tokenIds_",
        type: "uint256[][]",
      },
    ],
    name: "buyBatchBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "buyBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "saleId_",
        type: "bytes32",
      },
    ],
    name: "getSaleStatus",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256[][]",
                name: "tokens_",
                type: "uint256[][]",
              },
              {
                internalType: "uint256",
                name: "totalItems_",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "buyer_",
                type: "address",
              },
              {
                internalType: "bool",
                name: "multiBuy_",
                type: "bool",
              },
            ],
            internalType: "struct IBlockStore.Sale",
            name: "saleData_",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "messageId_",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "saleComplete_",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "saleFailed_",
            type: "bool",
          },
        ],
        internalType: "struct IBlockStore.SaleStore",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSalesContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "contractAddress_",
        type: "address",
      },
    ],
    name: "setBlockStore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId_",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "flag_",
        type: "bool",
      },
    ],
    name: "setBlockStoreActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress_",
        type: "address",
      },
    ],
    name: "setSalesContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllToDev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040526001805460ff60a01b1990811690915560058054909116600160a01b1790553480156200003057600080fd5b5060405162002bf838038062002bf88339810160408190526200005391620001f3565b338185806001600160a01b03811662000087576040516335fdcccd60e21b8152600060048201526024015b60405180910390fd5b6001600160a01b03908116608052600080549282166001600160a01b031993841617905560018054938216939092169290921781556004558116620000e357604051631e4fbdf760e01b8152600060048201526024016200007e565b620000ee8162000184565b50506001600160a01b0391821660a052600780546001600160a01b031990811692909316918217905567adecc60412ce25a56000527fea5cc84ce79ed728d5255c7ed3fbe8b32d166d192d4b92e8633d9f9bd37f7975805460ff1916600117905560026020527f5de57993c647d212515e5a98200b0028dcf596e6a85a7176fe22188f7b1dbdfc80549092161790555062000250565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620001ee57600080fd5b919050565b600080600080608085870312156200020a57600080fd5b6200021585620001d6565b93506200022560208601620001d6565b92506200023560408601620001d6565b91506200024560608601620001d6565b905092959194509250565b60805160a051612951620002a76000396000818161035d0152818161093d01528181610a2401528181610f330152818161101b0152818161130c015261189a0152600081816104520152610be001526129516000f3fe6080604052600436106101985760003560e01c80638b8fb480116100e0578063b0f479a111610084578063d0ffd7a711610061578063d0ffd7a714610427578063e8a6b60f146104b6578063ebfbaa6b146104cb578063f2fde38b146104e757005b8063b0f479a114610443578063bfac0b4614610476578063bfe22a011461049657005b80639b5719a6116100bd5780639b5719a6146103d25780639d7b8e68146103f2578063a13157ca14610407578063af54d6691461042757005b80638b8fb4801461037f5780638da5cb5b1461039f5780638dc654a2146103bd57005b806349df728c116101475780636cf42b1d116101245780636cf42b1d146102e1578063715018a61461031657806385572ffb1461032b578063877c86fb1461034b57005b806349df728c1461026f57806354b58b1c1461028f57806358c75e88146102af57005b806324600fc31161017557806324600fc31461021857806326b15f0d1461022d578063422dca361461024257005b806301ffc9a7146101a1578063028acce4146101d657806322f3e2d4146101f957005b3661019f57005b005b3480156101ad57600080fd5b506101c16101bc366004611fc7565b610507565b60405190151581526020015b60405180910390f35b3480156101e257600080fd5b506101eb610570565b6040519081526020016101cd565b34801561020557600080fd5b50600554600160a01b900460ff166101c1565b34801561022457600080fd5b5061019f61058e565b34801561023957600080fd5b506101eb600681565b34801561024e57600080fd5b5061026261025d366004611ff8565b610646565b6040516101cd91906120d7565b34801561027b57600080fd5b5061019f61028a366004612136565b6107aa565b34801561029b57600080fd5b5061019f6102aa366004611ff8565b6108a8565b3480156102bb57600080fd5b506007546001600160a01b03165b6040516001600160a01b0390911681526020016101cd565b3480156102ed57600080fd5b506102fd67de41ba4fc9d91ad981565b60405167ffffffffffffffff90911681526020016101cd565b34801561032257600080fd5b5061019f610bc1565b34801561033757600080fd5b5061019f610346366004612153565b610bd5565b34801561035757600080fd5b506102c97f000000000000000000000000000000000000000000000000000000000000000081565b34801561038b57600080fd5b5061019f61039a3660046121ab565b610c4a565b3480156103ab57600080fd5b506005546001600160a01b03166102c9565b3480156103c957600080fd5b5061019f610c99565b3480156103de57600080fd5b5061019f6103ed366004612136565b610d94565b3480156103fe57600080fd5b506006546101eb565b34801561041357600080fd5b5061019f6104223660046121e2565b610dcb565b34801561043357600080fd5b506102fd67adecc60412ce25a581565b34801561044f57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102c9565b34801561048257600080fd5b5061019f610491366004612265565b61111b565b3480156104a257600080fd5b5061019f6104b1366004612291565b61114c565b3480156104c257600080fd5b5061019f61115d565b3480156104d757600080fd5b506102fd6724f9b897ef58a92281565b3480156104f357600080fd5b5061019f610502366004612136565b611410565b60006001600160e01b031982167f85572ffb00000000000000000000000000000000000000000000000000000000148061056a57506001600160e01b031982167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b600061057e6006600a6123a8565b6105899060646123b4565b905090565b610596611464565b47600080336001600160a01b03168360405160006040518083038185875af1925050503d80600081146105e5576040519150601f19603f3d011682016040523d82523d6000602084013e6105ea565b606091505b5091509150816106415760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e6420457468657200000000000000000000000060448201526064015b60405180910390fd5b505050565b6040805161010081018252606060808201818152600060a0840181905260c0840181905260e084018190529083526020830181905292820183905281019190915260008281526008602090815260408083208151815461012094810282018501909352610100810183815290949193859360808501938693859390928592909188015b828210156107355760008481526020908190208301805460408051828502810185019091528181529283018282801561072157602002820191906000526020600020905b81548152602001906001019080831161070d575b5050505050815260200190600101906106c9565b5050509082525060018201546020808301919091526002909201546001600160a01b03811660408084019190915260ff600160a01b9092048216151560609384015293855260038601549285019290925260049094015480821615159284019290925261010090910416151591015292915050565b6107b2611464565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156107fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081f91906123cb565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af115801561087e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a291906123e4565b50505050565b6108b06114aa565b600554600160a01b900460ff1661091c5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b6064820152608401610638565b6109286006600a6123a8565b6109339060646123b4565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156109a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cb91906123cb565b11610a185760405162461bcd60e51b815260206004820152601160248201527f496e636f7272656374207061796d656e740000000000000000000000000000006044820152606401610638565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd3330610a576006600a6123a8565b610a629060646123b4565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610ab6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ada91906123e4565b90508015610bb357604080516001808252818301909252600091602080830190803683370190505090508281600081518110610b1857610b18612417565b6020908102919091010152604080516001808252818301909252600091816020015b6060815260200190600190039081610b3a5790505090508181600081518110610b6557610b65612417565b60200260200101819052506000604051806080016040528083815260200160018152602001610b913390565b6001600160a01b0316815260006020909101529050610baf816114ed565b5050505b50610bbe6001600455565b50565b610bc9611464565b610bd36000611675565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c39576040517fd7f73334000000000000000000000000000000000000000000000000000000008152336004820152602401610638565b610bbe610c45826125d6565b6116d4565b610c52611464565b67ffffffffffffffff82166000908152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383161790555050565b5050565b610ca1611464565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610cea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0e91906123cb565b6001549091506001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610d70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9591906123e4565b610d9c611464565b6007805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610dd36114aa565b600554600160a01b900460ff16610e3f5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b6064820152608401610638565b600080826005811115610e7e576040517f298ebe3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a83108015610e8d57508082105b15610ec757848483818110610ea457610ea4612417565b9050602002810190610eb69190612683565b939093019250600190910190610e7e565b600a831115610f02576040517f529a187000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083610f116006600a6123a8565b610f1c9060646123b4565b610f2691906123b4565b9050806001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610f9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc191906123cb565b101561100f5760405162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742046756e647300000000000000000000000000006044820152606401610638565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303816000875af1158015611094573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b891906123e4565b9050801561110c57600060405180608001604052808989906110da91906126cd565b81526020018781526020016110ec3390565b6001600160a01b031681526001602090910152905061110a816114ed565b505b5050505050610c956001600455565b611123611464565b67ffffffffffffffff82166000908152600360205260409020805460ff19168215151790555050565b611154611464565b610bbe8161197c565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156111a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ca91906123cb565b6001549091506001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af115801561122c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125091906123e4565b5047600080336001600160a01b03168360405160006040518083038185875af1925050503d80600081146112a0576040519150601f19603f3d011682016040523d82523d6000602084013e6112a5565b606091505b5091509150816112f75760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e642045746865720000000000000000000000006044820152606401610638565b6040516370a0823160e01b81523060048201527f0000000000000000000000000000000000000000000000000000000000000000906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611360573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138491906123cb565b90506001600160a01b03821663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156113e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140791906123e4565b50505050505050565b611418611464565b6001600160a01b03811661145b576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610638565b610bbe81611675565b6005546001600160a01b03163314610bd3576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610638565b6002600454036114e6576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600455565b60075460405160009161152c916001600160a01b0390911690611514908590602001612793565b604051602081830303815290604052621e84806119e0565b9050600061154267adecc60412ce25a583611b36565b9050807f43ccb67192c8495f6c3929fa31dddb58ffc5726cd01b81e14b1b3fbdd0413a1a846040015160405161158791906001600160a01b0391909116815260200190565b60405180910390a2604080516080810182528481526020808201849052600082840181905260608301819052848152600882529290922081518051805193949293919284926115d99284920190611ed3565b506020828101516001830155604080840151600290930180546060958601511515600160a01b027fffffffffffffffffffffff0000000000000000000000000000000000000000009091166001600160a01b039095169490941793909317909255840151600384015583015160049092018054939091015115156101000261ff00199215159290921661ffff1990931692909217179055505050565b600580546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b806020015181604001518060200190518101906116f191906127a6565b67ffffffffffffffff821660009081526003602052604090205460ff1661174f576040517e651a9900000000000000000000000000000000000000000000000000000000815267ffffffffffffffff83166004820152602401610638565b67ffffffffffffffff82166000908152600260205260409020546001600160a01b038281169116146117b7576040517e0e48e30000000000000000000000000000000000000000000000000000000081526001600160a01b0382166004820152602401610638565b8251606084015180516000916117d5918101602090810191016127c3565b9050846020015167ffffffffffffffff16827fb88ce2d04299f9522d2b89873660c7d0ead5d1243e708bd6adb2179ee0e3d8e5876040015180602001905181019061182091906127a6565b604080516001600160a01b039092168252855160208084019190915286015115159082015260600160405180910390a36000828152600860209081526040909120600401805460ff191660011790558101511561197557600082815260086020526040902060028101546001909101546001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263a9059cbb929116906118d16006600a6123a8565b6118dc9060646123b4565b6118e691906123b4565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611931573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061195591906123e4565b506000828152600860205260409020600401805461ff0019166101001790555b5050505050565b600580547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b611a1b6040518060a0016040528060608152602001606081526020016060815260200160006001600160a01b03168152602001606081525090565b6040805160a081019091526001600160a01b03851660c08201528060e0810160408051808303601f190181529181529082526020808301879052815160008082529181018352929091019190611a93565b6040805180820190915260008082526020820152815260200190600190039081611a6c5790505b508152602001611aa1611b4f565b6001600160a01b03168152602001611b2c60405180602001604052808681525060408051915160248084019190915281518084039091018152604490920190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f97a657c90000000000000000000000000000000000000000000000000000000017905290565b9052949350505050565b6000806000611b458585611b7a565b5095945050505050565b600154600090600160a01b900460ff1615611b7457506001546001600160a01b031690565b50600090565b6000806000306001600160a01b031663b0f479a16040518163ffffffff1660e01b8152600401602060405180830381865afa158015611bbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be191906127a6565b6040517f20487ded0000000000000000000000000000000000000000000000000000000081529091506001600160a01b038216906320487ded90611c2b9088908890600401612841565b602060405180830381865afa158015611c48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c6c91906123cb565b600154909250600090600160a01b900460ff1615611e26576001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611ccc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cf091906123cb565b905080831115611d1d57604051634787a10360e11b81526004810182905260248101849052604401610638565b6001546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b038481166004830152602482018690529091169063095ea7b3906044016020604051808303816000875af1158015611d89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dad91906123e4565b506040516396f4e9f960e01b81526001600160a01b038316906396f4e9f990611ddc9089908990600401612841565b6020604051808303816000875af1158015611dfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e1f91906123cb565b9350611ec9565b504780831115611e5357604051634787a10360e11b81526004810182905260248101849052604401610638565b6040516396f4e9f960e01b81526001600160a01b038316906396f4e9f9908590611e83908a908a90600401612841565b60206040518083038185885af1158015611ea1573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611ec691906123cb565b93505b50505b9250929050565b828054828255906000526020600020908101928215611f20579160200282015b82811115611f205782518051611f10918491602090910190611f30565b5091602001919060010190611ef3565b50611f2c929150611f77565b5090565b828054828255906000526020600020908101928215611f6b579160200282015b82811115611f6b578251825591602001919060010190611f50565b50611f2c929150611f94565b80821115611f2c576000611f8b8282611fa9565b50600101611f77565b5b80821115611f2c5760008155600101611f95565b5080546000825590600052602060002090810190610bbe9190611f94565b600060208284031215611fd957600080fd5b81356001600160e01b031981168114611ff157600080fd5b9392505050565b60006020828403121561200a57600080fd5b5035919050565b60006080830182516080855281815180845260a08701915060a08160051b8801019350602080840193506000805b8381101561209357898703609f19018552855180518089529084019084890190845b8181101561207d57835183529286019291860191600101612061565b509098505050948201949382019360010161203f565b505080870151818901525050505060408301516120bb60408601826001600160a01b03169052565b5060608301516120cf606086018215159052565b509392505050565b6020815260008251608060208401526120f360a0840182612011565b9050602084015160408401526040840151151560608401526060840151151560808401528091505092915050565b6001600160a01b0381168114610bbe57600080fd5b60006020828403121561214857600080fd5b8135611ff181612121565b60006020828403121561216557600080fd5b813567ffffffffffffffff81111561217c57600080fd5b820160a08185031215611ff157600080fd5b803567ffffffffffffffff811681146121a657600080fd5b919050565b600080604083850312156121be57600080fd5b6121c78361218e565b915060208301356121d781612121565b809150509250929050565b600080602083850312156121f557600080fd5b823567ffffffffffffffff8082111561220d57600080fd5b818501915085601f83011261222157600080fd5b81358181111561223057600080fd5b8660208260051b850101111561224557600080fd5b60209290920196919550909350505050565b8015158114610bbe57600080fd5b6000806040838503121561227857600080fd5b6122818361218e565b915060208301356121d781612257565b6000602082840312156122a357600080fd5b8135611ff181612257565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156122ff5781600019048211156122e5576122e56122ae565b808516156122f257918102915b93841c93908002906122c9565b509250929050565b6000826123165750600161056a565b816123235750600061056a565b816001811461233957600281146123435761235f565b600191505061056a565b60ff841115612354576123546122ae565b50506001821b61056a565b5060208310610133831016604e8410600b8410161715612382575081810a61056a565b61238c83836122c4565b80600019048211156123a0576123a06122ae565b029392505050565b6000611ff18383612307565b808202811582820484141761056a5761056a6122ae565b6000602082840312156123dd57600080fd5b5051919050565b6000602082840312156123f657600080fd5b8151611ff181612257565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6040805190810167ffffffffffffffff8111828210171561245057612450612401565b60405290565b60405160a0810167ffffffffffffffff8111828210171561245057612450612401565b604051601f8201601f1916810167ffffffffffffffff811182821017156124a2576124a2612401565b604052919050565b600082601f8301126124bb57600080fd5b813567ffffffffffffffff8111156124d5576124d5612401565b6124e8601f8201601f1916602001612479565b8181528460208386010111156124fd57600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff82111561253457612534612401565b5060051b60200190565b600082601f83011261254f57600080fd5b8135602061256461255f8361251a565b612479565b82815260069290921b8401810191818101908684111561258357600080fd5b8286015b848110156125cb57604081890312156125a05760008081fd5b6125a861242d565b81356125b381612121565b81528185013585820152835291830191604001612587565b509695505050505050565b600060a082360312156125e857600080fd5b6125f0612456565b823581526126006020840161218e565b6020820152604083013567ffffffffffffffff8082111561262057600080fd5b61262c368387016124aa565b6040840152606085013591508082111561264557600080fd5b612651368387016124aa565b6060840152608085013591508082111561266a57600080fd5b506126773682860161253e565b60808301525092915050565b6000808335601e1984360301811261269a57600080fd5b83018035915067ffffffffffffffff8211156126b557600080fd5b6020019150600581901b3603821315611ecc57600080fd5b60006126db61255f8461251a565b83815260208082019190600586811b8601368111156126f957600080fd5b865b8181101561278657803567ffffffffffffffff81111561271b5760008081fd5b880136601f82011261272d5760008081fd5b803561273b61255f8261251a565b81815290851b820186019086810190368311156127585760008081fd5b928701925b828410156127765783358252928701929087019061275d565b89525050509483019483016126fb565b5092979650505050505050565b602081526000611ff16020830184612011565b6000602082840312156127b857600080fd5b8151611ff181612121565b6000604082840312156127d557600080fd5b6127dd61242d565b8251815260208301516127ef81612257565b60208201529392505050565b6000815180845260005b8181101561282157602081850181015186830182015201612805565b506000602082860101526020601f19601f83011685010191505092915050565b6000604067ffffffffffffffff8516835260208181850152845160a08386015261286e60e08601826127fb565b905081860151603f198087840301606088015261288b83836127fb565b88860151888203830160808a01528051808352908601945060009350908501905b808410156128de57845180516001600160a01b03168352860151868301529385019360019390930192908601906128ac565b5060608901516001600160a01b031660a08901526080890151888203830160c08a0152955061290d81876127fb565b9a995050505050505050505056fea2646970667358221220842f0c5515c85a7a18bba6cb510a804c4929a10d74724d8a8676e883a8d3419e64736f6c63430008140033";

type BlockStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockStore__factory extends ContractFactory {
  constructor(...args: BlockStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router_: AddressLike,
    ghoTokenAddress_: AddressLike,
    blockSalesContract_: AddressLike,
    linkToken_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      router_,
      ghoTokenAddress_,
      blockSalesContract_,
      linkToken_,
      overrides || {}
    );
  }
  override deploy(
    router_: AddressLike,
    ghoTokenAddress_: AddressLike,
    blockSalesContract_: AddressLike,
    linkToken_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      router_,
      ghoTokenAddress_,
      blockSalesContract_,
      linkToken_,
      overrides || {}
    ) as Promise<
      BlockStore & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlockStore__factory {
    return super.connect(runner) as BlockStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockStoreInterface {
    return new Interface(_abi) as BlockStoreInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BlockStore {
    return new Contract(address, _abi, runner) as unknown as BlockStore;
  }
}
